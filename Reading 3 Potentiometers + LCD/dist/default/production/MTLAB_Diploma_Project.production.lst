

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 20 06:56:26 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Version 2.40
    78                           ; Generated 17/11/2021 GMT
    79                           ; 
    80                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F4620 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	idataCOMRAM
   114   002F4A                     __pidataCOMRAM:
   115                           	callstack 0
   116                           
   117                           ;initializer for _RB7_Flag
   118   002F4A  01                 	db	1
   119                           
   120                           ;initializer for _RB6_Flag
   121   002F4B  01                 	db	1
   122                           
   123                           ;initializer for _RB5_Flag
   124   002F4C  01                 	db	1
   125                           
   126                           ;initializer for _RB4_Flag
   127   002F4D  01                 	db	1
   128                           
   129                           ;initializer for _btn_high1_con
   130   002F4E  01                 	db	1
   131                           
   132                           ;initializer for _btn_high_con
   133   002F4F  01                 	db	1
   134                           
   135                           ;initializer for _led4
   136   002F50  33                 	db	51
   137                           
   138                           ;initializer for _led3
   139   002F51  23                 	db	35
   140                           
   141                           ;initializer for _led2
   142   002F52  13                 	db	19
   143                           
   144                           ;initializer for _led1
   145   002F53  03                 	db	3
   146                           
   147                           	psect	idataBANK0
   148   002E96                     __pidataBANK0:
   149                           	callstack 0
   150                           
   151                           ;initializer for _lat_registers
   152   002E96  89                 	db	137
   153   002E97  0F                 	db	15
   154   002E98  8A                 	db	138
   155   002E99  0F                 	db	15
   156   002E9A  8B                 	db	139
   157   002E9B  0F                 	db	15
   158   002E9C  8C                 	db	140
   159   002E9D  0F                 	db	15
   160   002E9E  8D                 	db	141
   161   002E9F  0F                 	db	15
   162                           
   163                           ;initializer for _tris_registers
   164   002EA0  92                 	db	146
   165   002EA1  0F                 	db	15
   166   002EA2  93                 	db	147
   167   002EA3  0F                 	db	15
   168   002EA4  94                 	db	148
   169   002EA5  0F                 	db	15
   170   002EA6  95                 	db	149
   171   002EA7  0F                 	db	15
   172   002EA8  96                 	db	150
   173   002EA9  0F                 	db	15
   174                           
   175                           ;initializer for _ret
   176   002EAA  01                 	db	1
   177                           
   178                           ;initializer for _adc_1
   179   002EAB  BC                 	db	low _ADC_DefaultInterruptHandler
   180   002EAC  24                 	db	high _ADC_DefaultInterruptHandler
   181   002EAD  00                 	db	0
   182   002EAE  05                 	db	5
   183   002EAF  05                 	db	5
   184   002EB0  00                 	db	0
   185   002EB1  02                 	db	2
   186                           
   187                           ;initializer for _lcd_1
   188   002EB2  02                 	db	2
   189   002EB3  0A                 	db	10
   190   002EB4  12                 	db	18
   191   002EB5  1A                 	db	26
   192   002EB6  22                 	db	34
   193   002EB7  2A                 	db	42
   194                           
   195                           ;initializer for _btn_high1
   196   002EB8  6B                 	db	107
   197   002EB9  01                 	db	1
   198   002EBA  00                 	db	0
   199                           
   200                           ;initializer for _btn_high
   201   002EBB  63                 	db	99
   202   002EBC  01                 	db	1
   203   002EBD  00                 	db	0
   204                           
   205                           	psect	idataBANK1
   206   002F54                     __pidataBANK1:
   207                           	callstack 0
   208                           
   209                           ;initializer for _port_registers
   210   002F54  80                 	db	128
   211   002F55  0F                 	db	15
   212   002F56  81                 	db	129
   213   002F57  0F                 	db	15
   214   002F58  82                 	db	130
   215   002F59  0F                 	db	15
   216   002F5A  83                 	db	131
   217   002F5B  0F                 	db	15
   218   002F5C  84                 	db	132
   219   002F5D  0F                 	db	15
   220                           
   221                           	psect	smallconst
   222   001000                     __psmallconst:
   223                           	callstack 0
   224   001000  00                 	db	0
   225   001001                     _matrix:
   226                           	callstack 0
   227   001001  37                 	db	55
   228   001002  38                 	db	56
   229   001003  39                 	db	57
   230   001004  2F                 	db	47
   231   001005  34                 	db	52
   232   001006  35                 	db	53
   233   001007  36                 	db	54
   234   001008  2A                 	db	42
   235   001009  31                 	db	49
   236   00100A  32                 	db	50
   237   00100B  33                 	db	51
   238   00100C  2D                 	db	45
   239   00100D  23                 	db	35
   240   00100E  30                 	db	48
   241   00100F  3D                 	db	61
   242   001010  2B                 	db	43
   243   001011                     __end_of_matrix:
   244                           	callstack 0
   245   000000                     _SPBRGH	set	4016
   246   000000                     _SPBRG	set	4015
   247   000000                     _TXREG	set	4013
   248   000000                     _TXSTAbits	set	4012
   249   000000                     _RCREG	set	4014
   250   000000                     _RCSTAbits	set	4011
   251   000000                     _TMR3L	set	4018
   252   000000                     _TMR3H	set	4019
   253   000000                     _TMR2	set	4044
   254   000000                     _T2CONbits	set	4042
   255   000000                     _TMR1L	set	4046
   256   000000                     _TMR1H	set	4047
   257   000000                     _T1CONbits	set	4045
   258   000000                     _T0CONbits	set	4053
   259   000000                     _TMR0L	set	4054
   260   000000                     _INTCON2bits	set	4081
   261   000000                     _INTCON3bits	set	4080
   262   000000                     _SSPADD	set	4040
   263   000000                     _SSPSTATbits	set	4039
   264   000000                     _SSPBUF	set	4041
   265   000000                     _SSPCON2bits	set	4037
   266   000000                     _SSPCON1bits	set	4038
   267   000000                     _EEDATA	set	4008
   268   000000                     _EEADRH	set	4010
   269   000000                     _EEADR	set	4009
   270   000000                     _EECON2	set	4007
   271   000000                     _CCPR2H	set	4028
   272   000000                     _CCPR2L	set	4027
   273   000000                     _CCPR1H	set	4031
   274   000000                     _CCPR1L	set	4030
   275   000000                     _ADCON1bits	set	4033
   276   000000                     _ADRESL	set	4035
   277   000000                     _ADRESH	set	4036
   278   000000                     _INTCONbits	set	4082
   279   000000                     _TRISD	set	3989
   280   000000                     _TRISC	set	3988
   281   000000                     _PR2	set	4043
   282   000000                     _TRISB	set	3987
   283   000000                     _TRISE	set	3990
   284   000000                     _TRISAbits	set	3986
   285   000000                     _PORTBbits	set	3969
   286   000000                     _TRISCbits	set	3988
   287   000000                     _PIE1bits	set	3997
   288   000000                     _ADCON2bits	set	4032
   289   000000                     _ADCON0bits	set	4034
   290   000000                     _PORTE	set	3972
   291   000000                     _PORTD	set	3971
   292   000000                     _PORTC	set	3970
   293   000000                     _PORTB	set	3969
   294   000000                     _PORTA	set	3968
   295   000000                     _LATA	set	3977
   296   000000                     _TRISA	set	3986
   297   000000                     _EECON1bits	set	4006
   298   000000                     _T3CONbits	set	4017
   299   000000                     _CCP2CONbits	set	4026
   300   000000                     _CCP1CONbits	set	4029
   301   000000                     _PIR1bits	set	3998
   302   000000                     _LATE	set	3981
   303   000000                     _LATD	set	3980
   304   000000                     _LATC	set	3979
   305   000000                     _LATB	set	3978
   306   000000                     _TMR0H	set	4055
   307   000000                     _BAUDCONbits	set	4024
   308   001011                     STR_4:
   309   001011  4D                 	db	77	;'M'
   310   001012  4F                 	db	79	;'O'
   311   001013  48                 	db	72	;'H'
   312   001014  41                 	db	65	;'A'
   313   001015  4D                 	db	77	;'M'
   314   001016  45                 	db	69	;'E'
   315   001017  44                 	db	68	;'D'
   316   001018  20                 	db	32
   317   001019  48                 	db	72	;'H'
   318   00101A  41                 	db	65	;'A'
   319   00101B  4D                 	db	77	;'M'
   320   00101C  45                 	db	69	;'E'
   321   00101D  44                 	db	68	;'D'
   322   00101E  00                 	db	0
   323   00101F                     STR_5:
   324   00101F  50                 	db	80	;'P'
   325   001020  6F                 	db	111	;'o'
   326   001021  74                 	db	116	;'t'
   327   001022  30                 	db	48	;'0'
   328   001023  3A                 	db	58	;':'
   329   001024  20                 	db	32
   330   001025  00                 	db	0
   331   001026                     STR_6:
   332   001026  50                 	db	80	;'P'
   333   001027  6F                 	db	111	;'o'
   334   001028  74                 	db	116	;'t'
   335   001029  31                 	db	49	;'1'
   336   00102A  3A                 	db	58	;':'
   337   00102B  20                 	db	32
   338   00102C  00                 	db	0
   339   00102D                     STR_7:
   340   00102D  50                 	db	80	;'P'
   341   00102E  6F                 	db	111	;'o'
   342   00102F  74                 	db	116	;'t'
   343   001030  32                 	db	50	;'2'
   344   001031  3A                 	db	58	;':'
   345   001032  20                 	db	32
   346   001033  00                 	db	0
   347   001034                     STR_8:
   348   001034  50                 	db	80	;'P'
   349   001035  6F                 	db	111	;'o'
   350   001036  74                 	db	116	;'t'
   351   001037  33                 	db	51	;'3'
   352   001038  3A                 	db	58	;':'
   353   001039  20                 	db	32
   354   00103A  00                 	db	0
   355   00103B                     STR_1:
   356   00103B  25                 	db	37
   357   00103C  69                 	db	105	;'i'
   358   00103D  00                 	db	0
   359   00103E  00                 	db	0	; dummy byte at the end
   360   000000                     
   361                           ; #config settings
   362                           
   363                           	psect	cinit
   364   00276A                     __pcinit:
   365                           	callstack 0
   366   00276A                     start_initialization:
   367                           	callstack 0
   368   00276A                     __initialization:
   369                           	callstack 0
   370                           
   371                           ; Initialize objects allocated to BANK1 (10 bytes)
   372                           ; load TBLPTR registers with __pidataBANK1
   373   00276A  0E54               	movlw	low __pidataBANK1
   374   00276C  6EF6               	movwf	tblptrl,c
   375   00276E  0E2F               	movlw	high __pidataBANK1
   376   002770  6EF7               	movwf	tblptrh,c
   377   002772  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   378   002774  6EF8               	movwf	tblptru,c
   379   002776  EE01  F032         	lfsr	0,__pdataBANK1
   380   00277A  EE10 F00A          	lfsr	1,10
   381   00277E                     copy_data0:
   382   00277E  0009               	tblrd		*+
   383   002780  CFF5 FFEE          	movff	tablat,postinc0
   384   002784  50E5               	movf	postdec1,w,c
   385   002786  50E1               	movf	fsr1l,w,c
   386   002788  E1FA               	bnz	copy_data0
   387                           
   388                           ; Initialize objects allocated to BANK0 (40 bytes)
   389                           ; load TBLPTR registers with __pidataBANK0
   390   00278A  0E96               	movlw	low __pidataBANK0
   391   00278C  6EF6               	movwf	tblptrl,c
   392   00278E  0E2E               	movlw	high __pidataBANK0
   393   002790  6EF7               	movwf	tblptrh,c
   394   002792  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   395   002794  6EF8               	movwf	tblptru,c
   396   002796  EE00  F0D5         	lfsr	0,__pdataBANK0
   397   00279A  EE10 F028          	lfsr	1,40
   398   00279E                     copy_data1:
   399   00279E  0009               	tblrd		*+
   400   0027A0  CFF5 FFEE          	movff	tablat,postinc0
   401   0027A4  50E5               	movf	postdec1,w,c
   402   0027A6  50E1               	movf	fsr1l,w,c
   403   0027A8  E1FA               	bnz	copy_data1
   404                           
   405                           ; Initialize objects allocated to COMRAM (10 bytes)
   406                           ; load TBLPTR registers with __pidataCOMRAM
   407   0027AA  0E4A               	movlw	low __pidataCOMRAM
   408   0027AC  6EF6               	movwf	tblptrl,c
   409   0027AE  0E2F               	movlw	high __pidataCOMRAM
   410   0027B0  6EF7               	movwf	tblptrh,c
   411   0027B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   412   0027B4  6EF8               	movwf	tblptru,c
   413   0027B6  EE00  F064         	lfsr	0,__pdataCOMRAM
   414   0027BA  EE10 F00A          	lfsr	1,10
   415   0027BE                     copy_data2:
   416   0027BE  0009               	tblrd		*+
   417   0027C0  CFF5 FFEE          	movff	tablat,postinc0
   418   0027C4  50E5               	movf	postdec1,w,c
   419   0027C6  50E1               	movf	fsr1l,w,c
   420   0027C8  E1FA               	bnz	copy_data2
   421                           
   422                           ; Clear objects allocated to BANK1 (38 bytes)
   423   0027CA  EE01  F000         	lfsr	0,__pbssBANK1
   424   0027CE  0E26               	movlw	38
   425   0027D0                     clear_0:
   426   0027D0  6AEE               	clrf	postinc0,c
   427   0027D2  06E8               	decf	wreg,f,c
   428   0027D4  E1FD               	bnz	clear_0
   429                           
   430                           ; Clear objects allocated to BANK0 (85 bytes)
   431   0027D6  EE00  F080         	lfsr	0,__pbssBANK0
   432   0027DA  0E55               	movlw	85
   433   0027DC                     clear_1:
   434   0027DC  6AEE               	clrf	postinc0,c
   435   0027DE  06E8               	decf	wreg,f,c
   436   0027E0  E1FD               	bnz	clear_1
   437                           
   438                           ; Clear objects allocated to COMRAM (5 bytes)
   439   0027E2  6A72               	clrf	(__pbssCOMRAM+4)& (0+255),c
   440   0027E4  6A71               	clrf	(__pbssCOMRAM+3)& (0+255),c
   441   0027E6  6A70               	clrf	(__pbssCOMRAM+2)& (0+255),c
   442   0027E8  6A6F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   443   0027EA  6A6E               	clrf	__pbssCOMRAM& (0+255),c
   444   0027EC                     end_of_initialization:
   445                           	callstack 0
   446   0027EC                     __end_of__initialization:
   447                           	callstack 0
   448   0027EC  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   449   0027EE  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   450   0027F0  0100               	movlb	0
   451   0027F2  EF20  F008         	goto	_main	;jump to C main() function
   452                           
   453                           	psect	bssCOMRAM
   454   00006E                     __pbssCOMRAM:
   455                           	callstack 0
   456   00006E                     _ADC_Req:
   457                           	callstack 0
   458   00006E                     	ds	1
   459   00006F                     led_turn_toggle@F3063:
   460                           	callstack 0
   461   00006F                     	ds	1
   462   000070                     led_turn_off@F3058:
   463                           	callstack 0
   464   000070                     	ds	1
   465   000071                     led_turn_on@F3053:
   466                           	callstack 0
   467   000071                     	ds	1
   468   000072                     led_initialize@F3048:
   469                           	callstack 0
   470   000072                     	ds	1
   471                           
   472                           	psect	dataCOMRAM
   473   000064                     __pdataCOMRAM:
   474                           	callstack 0
   475   000064                     _RB7_Flag:
   476                           	callstack 0
   477   000064                     	ds	1
   478   000065                     _RB6_Flag:
   479                           	callstack 0
   480   000065                     	ds	1
   481   000066                     _RB5_Flag:
   482                           	callstack 0
   483   000066                     	ds	1
   484   000067                     _RB4_Flag:
   485                           	callstack 0
   486   000067                     	ds	1
   487   000068                     _btn_high1_con:
   488                           	callstack 0
   489   000068                     	ds	1
   490   000069                     _btn_high_con:
   491                           	callstack 0
   492   000069                     	ds	1
   493   00006A                     _led4:
   494                           	callstack 0
   495   00006A                     	ds	1
   496   00006B                     _led3:
   497                           	callstack 0
   498   00006B                     	ds	1
   499   00006C                     _led2:
   500                           	callstack 0
   501   00006C                     	ds	1
   502   00006D                     _led1:
   503                           	callstack 0
   504   00006D                     	ds	1
   505                           
   506                           	psect	bssBANK0
   507   000080                     __pbssBANK0:
   508                           	callstack 0
   509   000080                     _width:
   510                           	callstack 0
   511   000080                     	ds	2
   512   000082                     _prec:
   513                           	callstack 0
   514   000082                     	ds	2
   515   000084                     _EUSART_OverrunErrorHandler:
   516                           	callstack 0
   517   000084                     	ds	2
   518   000086                     _EUSART_FramingErrorHandler:
   519                           	callstack 0
   520   000086                     	ds	2
   521   000088                     _EUSART_RxInterruptHandler:
   522                           	callstack 0
   523   000088                     	ds	2
   524   00008A                     _EUSART_TxInterruptHandler:
   525                           	callstack 0
   526   00008A                     	ds	2
   527   00008C                     _Timer3_Preload_Value:
   528                           	callstack 0
   529   00008C                     	ds	2
   530   00008E                     _timer1_preload_value:
   531                           	callstack 0
   532   00008E                     	ds	2
   533   000090                     	ds	2
   534   000092                     _timer0_preload_value:
   535                           	callstack 0
   536   000092                     	ds	2
   537   000094                     	ds	2
   538   000096                     _RB7_InterruptHandler_LOW:
   539                           	callstack 0
   540   000096                     	ds	2
   541   000098                     _RB7_InterruptHandler_HIGH:
   542                           	callstack 0
   543   000098                     	ds	2
   544   00009A                     _RB6_InterruptHandler_LOW:
   545                           	callstack 0
   546   00009A                     	ds	2
   547   00009C                     _RB6_InterruptHandler_HIGH:
   548                           	callstack 0
   549   00009C                     	ds	2
   550   00009E                     _RB5_InterruptHandler_LOW:
   551                           	callstack 0
   552   00009E                     	ds	2
   553   0000A0                     _RB5_InterruptHandler_HIGH:
   554                           	callstack 0
   555   0000A0                     	ds	2
   556   0000A2                     _RB4_InterruptHandler_LOW:
   557                           	callstack 0
   558   0000A2                     	ds	2
   559   0000A4                     _RB4_InterruptHandler_HIGH:
   560                           	callstack 0
   561   0000A4                     	ds	2
   562   0000A6                     _INT2_InterruptHandler:
   563                           	callstack 0
   564   0000A6                     	ds	2
   565   0000A8                     _INT1_InterruptHandler:
   566                           	callstack 0
   567   0000A8                     	ds	2
   568   0000AA                     _INT0_InterruptHandler:
   569                           	callstack 0
   570   0000AA                     	ds	2
   571   0000AC                     CCP_Compare_Mode_Set_Value@F3106:
   572                           	callstack 0
   573   0000AC                     	ds	2
   574   0000AE                     _ADC_InterruptHandler:
   575                           	callstack 0
   576   0000AE                     	ds	2
   577   0000B0                     _flags:
   578                           	callstack 0
   579   0000B0                     	ds	1
   580   0000B1                     _Timer2_Preload_Value:
   581                           	callstack 0
   582   0000B1                     	ds	1
   583   0000B2                     relay_turn_off@F3052:
   584                           	callstack 0
   585   0000B2                     	ds	1
   586   0000B3                     relay_turn_on@F3047:
   587                           	callstack 0
   588   0000B3                     	ds	1
   589   0000B4                     relay_initialize@F3042:
   590                           	callstack 0
   591   0000B4                     	ds	1
   592   0000B5                     _adc_res_4_txt:
   593                           	callstack 0
   594   0000B5                     	ds	6
   595   0000BB                     _adc_res_3_txt:
   596                           	callstack 0
   597   0000BB                     	ds	6
   598   0000C1                     _adc_res_2_txt:
   599                           	callstack 0
   600   0000C1                     	ds	6
   601   0000C7                     _adc_res_1_txt:
   602                           	callstack 0
   603   0000C7                     	ds	6
   604   0000CD                     _adc_res_4:
   605                           	callstack 0
   606   0000CD                     	ds	2
   607   0000CF                     _adc_res_3:
   608                           	callstack 0
   609   0000CF                     	ds	2
   610   0000D1                     _adc_res_2:
   611                           	callstack 0
   612   0000D1                     	ds	2
   613   0000D3                     _adc_res_1:
   614                           	callstack 0
   615   0000D3                     	ds	2
   616                           
   617                           	psect	dataBANK0
   618   0000D5                     __pdataBANK0:
   619                           	callstack 0
   620   0000D5                     _lat_registers:
   621                           	callstack 0
   622   0000D5                     	ds	10
   623   0000DF                     _tris_registers:
   624                           	callstack 0
   625   0000DF                     	ds	10
   626   0000E9                     _ret:
   627                           	callstack 0
   628   0000E9                     	ds	1
   629   0000EA                     _adc_1:
   630                           	callstack 0
   631   0000EA                     	ds	7
   632   0000F1                     _lcd_1:
   633                           	callstack 0
   634   0000F1                     	ds	6
   635   0000F7                     _btn_high1:
   636                           	callstack 0
   637   0000F7                     	ds	3
   638   0000FA                     _btn_high:
   639                           	callstack 0
   640   0000FA                     	ds	3
   641                           
   642                           	psect	bssBANK1
   643   000100                     __pbssBANK1:
   644                           	callstack 0
   645   000100                     	ds	6
   646   000106                     _dbuf:
   647                           	callstack 0
   648   000106                     	ds	32
   649                           
   650                           	psect	dataBANK1
   651   000132                     __pdataBANK1:
   652                           	callstack 0
   653   000132                     _port_registers:
   654                           	callstack 0
   655   000132                     	ds	10
   656                           
   657                           	psect	cstackBANK1
   658   000126                     __pcstackBANK1:
   659                           	callstack 0
   660   000126                     convert_uint16_to_string@value:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x0
   664   000126                     	ds	2
   665   000128                     convert_uint16_to_string@str:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x2
   669   000128                     	ds	2
   670   00012A                     convert_uint16_to_string@Temp_String:
   671                           	callstack 0
   672                           
   673                           ; 6 bytes @ 0x4
   674   00012A                     	ds	6
   675   000130                     convert_uint16_to_string@ret:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0xA
   679   000130                     	ds	1
   680   000131                     convert_uint16_to_string@DataCounter:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0xB
   684   000131                     	ds	1
   685                           
   686                           	psect	cstackCOMRAM
   687   000001                     __pcstackCOMRAM:
   688                           	callstack 0
   689   000001                     RB4_ISR@RB4_Source:
   690                           	callstack 0
   691   000001                     RB5_ISR@RB5_Source:
   692                           	callstack 0
   693   000001                     RB6_ISR@RB6_Source:
   694                           	callstack 0
   695   000001                     RB7_ISR@RB7_Source:
   696                           	callstack 0
   697   000001                     ADC_GetConversionResult@_adc:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x0
   701   000001                     	ds	2
   702   000003                     ADC_GetConversionResult@conversion_result:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x2
   706   000003                     	ds	2
   707   000005                     ??_ADC_GetConversionResult:
   708                           
   709                           ; 1 bytes @ 0x4
   710   000005                     	ds	3
   711   000008                     ADC_GetConversionResult@ret:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x7
   715   000008                     	ds	1
   716   000009                     ??_InterruptManager:
   717                           
   718                           ; 1 bytes @ 0x8
   719   000009                     	ds	4
   720   00000D                     ??_adc_input_channel_port_configure:
   721   00000D                     ?___awdiv:
   722                           	callstack 0
   723   00000D                     ?___awmod:
   724                           	callstack 0
   725   00000D                     ADC_StartConversion@_adc:
   726                           	callstack 0
   727   00000D                     select_result_format@_adc:
   728                           	callstack 0
   729   00000D                     configure_voltage_reference@_adc:
   730                           	callstack 0
   731   00000D                     gpio_pin_direction_intialize@_pin_config:
   732                           	callstack 0
   733   00000D                     gpio_pin_write_logic@_pin_config:
   734                           	callstack 0
   735   00000D                     gpio_pin_read_logic@_pin_config:
   736                           	callstack 0
   737   00000D                     ___awdiv@dividend:
   738                           	callstack 0
   739   00000D                     ___awmod@dividend:
   740                           	callstack 0
   741   00000D                     memset@dest:
   742                           	callstack 0
   743   00000D                     fputc@c:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0xC
   747   00000D                     	ds	2
   748   00000F                     ??_gpio_pin_direction_intialize:
   749   00000F                     ADC_StartConversion@ret:
   750                           	callstack 0
   751   00000F                     adc_input_channel_port_configure@channel:
   752                           	callstack 0
   753   00000F                     gpio_pin_write_logic@logic:
   754                           	callstack 0
   755   00000F                     gpio_pin_read_logic@logic:
   756                           	callstack 0
   757   00000F                     ___awdiv@divisor:
   758                           	callstack 0
   759   00000F                     ___awmod@divisor:
   760                           	callstack 0
   761   00000F                     memset@c:
   762                           	callstack 0
   763   00000F                     fputc@fp:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0xE
   767   00000F                     	ds	1
   768   000010                     ??_gpio_pin_write_logic:
   769   000010                     ADC_Init@_adc:
   770                           	callstack 0
   771   000010                     ADC_SelectChannel@_adc:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0xF
   775   000010                     	ds	1
   776   000011                     ??_gpio_pin_read_logic:
   777   000011                     ??_fputc:
   778   000011                     ___awdiv@counter:
   779                           	callstack 0
   780   000011                     ___awmod@counter:
   781                           	callstack 0
   782   000011                     memset@n:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x10
   786   000011                     	ds	1
   787   000012                     ??_ADC_Init:
   788   000012                     ADC_SelectChannel@channel:
   789                           	callstack 0
   790   000012                     ___awdiv@sign:
   791                           	callstack 0
   792   000012                     ___awmod@sign:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x11
   796   000012                     	ds	1
   797   000013                     ??_memset:
   798   000013                     ??_ADC_SelectChannel:
   799   000013                     ?_abs:
   800                           	callstack 0
   801   000013                     ADC_Init@ret:
   802                           	callstack 0
   803   000013                     ___awdiv@quotient:
   804                           	callstack 0
   805   000013                     abs@a:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x12
   809   000013                     	ds	1
   810   000014                     ADC_SelectChannel@ret:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x13
   814   000014                     	ds	1
   815   000015                     ??_abs:
   816   000015                     gpio_pin_direction_intialize@ret:
   817                           	callstack 0
   818   000015                     ADC_StartConversion_Interrupt@_adc:
   819                           	callstack 0
   820   000015                     memset@k:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x14
   824   000015                     	ds	1
   825   000016                     gpio_pin_write_logic@ret:
   826                           	callstack 0
   827   000016                     gpio_pin_read_logic@ret:
   828                           	callstack 0
   829   000016                     button_initialize@btn:
   830                           	callstack 0
   831   000016                     fputs@s:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x15
   835   000016                     	ds	1
   836   000017                     ADC_StartConversion_Interrupt@channel:
   837                           	callstack 0
   838   000017                     button_read_state@btn:
   839                           	callstack 0
   840   000017                     lcd_send_4bits@lcd:
   841                           	callstack 0
   842   000017                     lcd_4bit_send_enable_signal@lcd:
   843                           	callstack 0
   844   000017                     led_turn_on@led:
   845                           	callstack 0
   846   000017                     led_turn_off@led:
   847                           	callstack 0
   848   000017                     gpio_pin_intialize@_pin_config:
   849                           	callstack 0
   850   000017                     memset@s:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x16
   854   000017                     	ds	1
   855   000018                     button_initialize@ret:
   856                           	callstack 0
   857   000018                     ADC_StartConversion_Interrupt@ret:
   858                           	callstack 0
   859   000018                     fputs@fp:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x17
   863   000018                     	ds	1
   864   000019                     ??_gpio_pin_intialize:
   865   000019                     ??_led_turn_on:
   866   000019                     ??_led_turn_off:
   867   000019                     lcd_send_4bits@_data_command:
   868                           	callstack 0
   869   000019                     lcd_4bit_send_enable_signal@ret:
   870                           	callstack 0
   871   000019                     button_read_state@btn_state:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x18
   875   000019                     	ds	1
   876   00001A                     lcd_send_4bits@ret:
   877                           	callstack 0
   878   00001A                     led_turn_on@pin_obj:
   879                           	callstack 0
   880   00001A                     led_turn_off@pin_obj:
   881                           	callstack 0
   882   00001A                     gpio_pin_intialize@ret:
   883                           	callstack 0
   884   00001A                     fputs@c:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x19
   888   00001A                     	ds	1
   889   00001B                     lcd_4bit_send_command@lcd:
   890                           	callstack 0
   891   00001B                     lcd_4bit_send_char_data@lcd:
   892                           	callstack 0
   893   00001B                     led_initialize@led:
   894                           	callstack 0
   895   00001B                     fputs@i:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x1A
   899   00001B                     	ds	1
   900   00001C                     button_read_state@ret:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x1B
   904   00001C                     	ds	1
   905   00001D                     ??_led_initialize:
   906   00001D                     button_read_state@Pin_Logic_Status:
   907                           	callstack 0
   908   00001D                     lcd_4bit_send_command@command:
   909                           	callstack 0
   910   00001D                     lcd_4bit_send_char_data@data:
   911                           	callstack 0
   912   00001D                     pad@fp:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x1C
   916   00001D                     	ds	1
   917   00001E                     lcd_4bit_send_command@ret:
   918                           	callstack 0
   919   00001E                     lcd_4bit_send_char_data@ret:
   920                           	callstack 0
   921   00001E                     led_initialize@ret:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x1D
   925   00001E                     	ds	1
   926   00001F                     led_initialize@pin_obj:
   927                           	callstack 0
   928   00001F                     lcd_4bit_intialize@lcd:
   929                           	callstack 0
   930   00001F                     lcd_4bit_set_cursor@lcd:
   931                           	callstack 0
   932   00001F                     pad@buf:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x1E
   936   00001F                     	ds	1
   937   000020                     
   938                           ; 1 bytes @ 0x1F
   939   000020                     	ds	1
   940   000021                     ??_lcd_4bit_intialize:
   941   000021                     lcd_4bit_set_cursor@row:
   942                           	callstack 0
   943   000021                     pad@p:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x20
   947   000021                     	ds	1
   948   000022                     lcd_4bit_set_cursor@coulmn:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x21
   952   000022                     	ds	1
   953   000023                     ??_lcd_4bit_set_cursor:
   954   000023                     ??_pad:
   955   000023                     lcd_4bit_intialize@l_data_pins_counter:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x22
   959   000023                     	ds	1
   960   000024                     lcd_4bit_intialize@ret:
   961                           	callstack 0
   962   000024                     pad@i:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x23
   966   000024                     	ds	1
   967   000025                     lcd_4bit_set_cursor@ret:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x24
   971   000025                     	ds	1
   972   000026                     lcd_4bit_send_string_pos@lcd:
   973                           	callstack 0
   974   000026                     pad@w:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x25
   978   000026                     	ds	2
   979   000028                     lcd_4bit_send_string_pos@row:
   980                           	callstack 0
   981   000028                     dtoa@fp:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x27
   985   000028                     	ds	1
   986   000029                     lcd_4bit_send_string_pos@column:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x28
   990   000029                     	ds	1
   991   00002A                     lcd_4bit_send_string_pos@str:
   992                           	callstack 0
   993   00002A                     dtoa@d:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x29
   997   00002A                     	ds	2
   998   00002C                     lcd_4bit_send_string_pos@ret:
   999                           	callstack 0
  1000   00002C                     _dtoa$4588:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x2B
  1004   00002C                     	ds	2
  1005   00002E                     dtoa@p:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x2D
  1009   00002E                     	ds	2
  1010   000030                     dtoa@w:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x2F
  1014   000030                     	ds	2
  1015   000032                     dtoa@s:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x31
  1019   000032                     	ds	1
  1020   000033                     dtoa@i:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x32
  1024   000033                     	ds	2
  1025   000035                     vfpfcnvrt@fp:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x34
  1029   000035                     	ds	2
  1030   000037                     vfpfcnvrt@fmt:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x36
  1034   000037                     	ds	2
  1035   000039                     vfpfcnvrt@ap:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x38
  1039   000039                     	ds	2
  1040   00003B                     ??_vfpfcnvrt:
  1041                           
  1042                           ; 1 bytes @ 0x3A
  1043   00003B                     	ds	2
  1044   00003D                     vfpfcnvrt@convarg:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x3C
  1048   00003D                     	ds	4
  1049   000041                     vfpfcnvrt@cp:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x40
  1053   000041                     	ds	2
  1054   000043                     ?_vfprintf:
  1055                           	callstack 0
  1056   000043                     vfprintf@fp:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x42
  1060   000043                     	ds	2
  1061   000045                     vfprintf@fmt:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x44
  1065   000045                     	ds	2
  1066   000047                     vfprintf@ap:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x46
  1070   000047                     	ds	2
  1071   000049                     vfprintf@cfmt:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x48
  1075   000049                     	ds	2
  1076   00004B                     ?_sprintf:
  1077                           	callstack 0
  1078   00004B                     sprintf@s:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x4A
  1082   00004B                     	ds	2
  1083   00004D                     sprintf@fmt:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x4C
  1087   00004D                     	ds	6
  1088   000053                     sprintf@ap:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x52
  1092   000053                     	ds	2
  1093   000055                     sprintf@f:
  1094                           	callstack 0
  1095                           
  1096                           ; 12 bytes @ 0x54
  1097   000055                     	ds	12
  1098   000061                     ??_main:
  1099                           
  1100                           ; 1 bytes @ 0x60
  1101   000061                     	ds	2
  1102   000063                     main@ret:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x62
  1106   000063                     	ds	1
  1107                           
  1108 ;;
  1109 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1110 ;;
  1111 ;; *************** function _main *****************
  1112 ;; Defined at:
  1113 ;;		line 95 in file "application.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  ret             1   98[COMRAM] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  2  1647[None  ] int 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;Total ram usage:        3 bytes
  1132 ;; Hardware stack levels required when called: 13
  1133 ;; This function calls:
  1134 ;;		_ADC_Init
  1135 ;;		_ADC_StartConversion_Interrupt
  1136 ;;		_application_intialize
  1137 ;;		_button_read_state
  1138 ;;		_convert_uint16_to_string
  1139 ;;		_lcd_4bit_intialize
  1140 ;;		_lcd_4bit_send_command
  1141 ;;		_lcd_4bit_send_string_pos
  1142 ;;		_led_turn_off
  1143 ;;		_led_turn_on
  1144 ;; This function is called by:
  1145 ;;		Startup code after reset
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text0
  1150   001040                     __ptext0:
  1151                           	callstack 0
  1152   001040                     _main:
  1153                           	callstack 18
  1154   001040                     
  1155                           ;application.c: 98:     application_intialize();
  1156   001040  EC16  F016         	call	_application_intialize	;wreg free
  1157   001044  0EEA               	movlw	low _adc_1
  1158   001046  6E10               	movwf	ADC_Init@_adc^0,c
  1159   001048  0E00               	movlw	high _adc_1
  1160   00104A  6E11               	movwf	(ADC_Init@_adc+1)^0,c
  1161   00104C  EC44  F011         	call	_ADC_Init	;wreg free
  1162   001050  0EF1               	movlw	low _lcd_1
  1163   001052  6E1F               	movwf	lcd_4bit_intialize@lcd^0,c
  1164   001054  0E00               	movlw	high _lcd_1
  1165   001056  6E20               	movwf	(lcd_4bit_intialize@lcd+1)^0,c
  1166   001058  EC8A  F00D         	call	_lcd_4bit_intialize	;wreg free
  1167   00105C  0EF1               	movlw	low _lcd_1
  1168   00105E  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1169   001060  0E00               	movlw	high _lcd_1
  1170   001062  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1171   001064  0E01               	movlw	1
  1172   001066  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1173   001068  0E04               	movlw	4
  1174   00106A  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1175   00106C  0E11               	movlw	low STR_4
  1176   00106E  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1177   001070  0E10               	movlw	high STR_4
  1178   001072  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1179   001074  EC65  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1180   001078                     
  1181                           ;application.c: 104:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
  1182   001078  0E0B               	movlw	11
  1183   00107A  6E62               	movwf	(??_main+1)^0,c
  1184   00107C  0E26               	movlw	38
  1185   00107E  6E61               	movwf	??_main^0,c
  1186   001080  0E5E               	movlw	94
  1187   001082                     u6517:
  1188   001082  2EE8               	decfsz	wreg,f,c
  1189   001084  D7FE               	bra	u6517
  1190   001086  2E61               	decfsz	??_main^0,f,c
  1191   001088  D7FC               	bra	u6517
  1192   00108A  2E62               	decfsz	(??_main+1)^0,f,c
  1193   00108C  D7FA               	bra	u6517
  1194   00108E  0EF1               	movlw	low _lcd_1
  1195   001090  6E1B               	movwf	lcd_4bit_send_command@lcd^0,c
  1196   001092  0E00               	movlw	high _lcd_1
  1197   001094  6E1C               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1198   001096  0E01               	movlw	1
  1199   001098  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1200   00109A  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  1201   00109E  0EF1               	movlw	low _lcd_1
  1202   0010A0  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1203   0010A2  0E00               	movlw	high _lcd_1
  1204   0010A4  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1205   0010A6  0E01               	movlw	1
  1206   0010A8  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1207   0010AA  0E01               	movlw	1
  1208   0010AC  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1209   0010AE  0E1F               	movlw	low STR_5
  1210   0010B0  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1211   0010B2  0E10               	movlw	high STR_5
  1212   0010B4  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1213   0010B6  EC65  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1214   0010BA  0EF1               	movlw	low _lcd_1
  1215   0010BC  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1216   0010BE  0E00               	movlw	high _lcd_1
  1217   0010C0  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1218   0010C2  0E02               	movlw	2
  1219   0010C4  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1220   0010C6  0E01               	movlw	1
  1221   0010C8  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1222   0010CA  0E26               	movlw	low STR_6
  1223   0010CC  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1224   0010CE  0E10               	movlw	high STR_6
  1225   0010D0  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1226   0010D2  EC65  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1227   0010D6  0EF1               	movlw	low _lcd_1
  1228   0010D8  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1229   0010DA  0E00               	movlw	high _lcd_1
  1230   0010DC  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1231   0010DE  0E03               	movlw	3
  1232   0010E0  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1233   0010E2  0E01               	movlw	1
  1234   0010E4  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1235   0010E6  0E2D               	movlw	low STR_7
  1236   0010E8  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1237   0010EA  0E10               	movlw	high STR_7
  1238   0010EC  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1239   0010EE  EC65  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1240   0010F2  0EF1               	movlw	low _lcd_1
  1241   0010F4  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1242   0010F6  0E00               	movlw	high _lcd_1
  1243   0010F8  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1244   0010FA  0E04               	movlw	4
  1245   0010FC  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1246   0010FE  0E01               	movlw	1
  1247   001100  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1248   001102  0E34               	movlw	low STR_8
  1249   001104  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1250   001106  0E10               	movlw	high STR_8
  1251   001108  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1252   00110A  EC65  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1253   00110E                     l7976:
  1254                           
  1255                           ;application.c: 113:         if(0 == ADC_Req){
  1256   00110E  506E               	movf	_ADC_Req^0,w,c
  1257   001110  A4D8               	btfss	status,2,c
  1258   001112  EF8D  F008         	goto	u6411
  1259   001116  EF8F  F008         	goto	u6410
  1260   00111A                     u6411:
  1261   00111A  EF99  F008         	goto	l7980
  1262   00111E                     u6410:
  1263   00111E  0EEA               	movlw	low _adc_1
  1264   001120  6E15               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1265   001122  0E00               	movlw	high _adc_1
  1266   001124  6E16               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1267   001126  0E00               	movlw	0
  1268   001128  6E17               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1269   00112A  EC82  F016         	call	_ADC_StartConversion_Interrupt	;wreg free
  1270                           
  1271                           ;application.c: 115:         }
  1272   00112E  EFD1  F008         	goto	l7992
  1273   001132                     l7980:
  1274   001132  046E               	decf	_ADC_Req^0,w,c
  1275   001134  A4D8               	btfss	status,2,c
  1276   001136  EF9F  F008         	goto	u6421
  1277   00113A  EFA1  F008         	goto	u6420
  1278   00113E                     u6421:
  1279   00113E  EFAB  F008         	goto	l7984
  1280   001142                     u6420:
  1281   001142  0EEA               	movlw	low _adc_1
  1282   001144  6E15               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1283   001146  0E00               	movlw	high _adc_1
  1284   001148  6E16               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1285   00114A  0E01               	movlw	1
  1286   00114C  6E17               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1287   00114E  EC82  F016         	call	_ADC_StartConversion_Interrupt	;wreg free
  1288                           
  1289                           ;application.c: 118:         }
  1290   001152  EFD1  F008         	goto	l7992
  1291   001156                     l7984:
  1292   001156  0E02               	movlw	2
  1293   001158  186E               	xorwf	_ADC_Req^0,w,c
  1294   00115A  A4D8               	btfss	status,2,c
  1295   00115C  EFB2  F008         	goto	u6431
  1296   001160  EFB4  F008         	goto	u6430
  1297   001164                     u6431:
  1298   001164  EFBE  F008         	goto	l7988
  1299   001168                     u6430:
  1300   001168  0EEA               	movlw	low _adc_1
  1301   00116A  6E15               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1302   00116C  0E00               	movlw	high _adc_1
  1303   00116E  6E16               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1304   001170  0E02               	movlw	2
  1305   001172  6E17               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1306   001174  EC82  F016         	call	_ADC_StartConversion_Interrupt	;wreg free
  1307                           
  1308                           ;application.c: 121:         }
  1309   001178  EFD1  F008         	goto	l7992
  1310   00117C                     l7988:
  1311   00117C  0E03               	movlw	3
  1312   00117E  186E               	xorwf	_ADC_Req^0,w,c
  1313   001180  A4D8               	btfss	status,2,c
  1314   001182  EFC5  F008         	goto	u6441
  1315   001186  EFC7  F008         	goto	u6440
  1316   00118A                     u6441:
  1317   00118A  EFD1  F008         	goto	l1652
  1318   00118E                     u6440:
  1319   00118E  0EEA               	movlw	low _adc_1
  1320   001190  6E15               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1321   001192  0E00               	movlw	high _adc_1
  1322   001194  6E16               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1323   001196  0E03               	movlw	3
  1324   001198  6E17               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1325   00119A  EC82  F016         	call	_ADC_StartConversion_Interrupt	;wreg free
  1326                           
  1327                           ;application.c: 124:         }
  1328   00119E  EFD1  F008         	goto	l7992
  1329   0011A2                     l1652:
  1330   0011A2                     l7992:
  1331                           
  1332                           ;application.c: 127:         ret = convert_uint16_to_string(adc_res_1, adc_res_1_txt);
  1333   0011A2  C0D3  F126         	movff	_adc_res_1,convert_uint16_to_string@value
  1334   0011A6  C0D4  F127         	movff	_adc_res_1+1,convert_uint16_to_string@value+1
  1335   0011AA  0EC7               	movlw	low _adc_res_1_txt
  1336   0011AC  0101               	movlb	1	; () banked
  1337   0011AE  6F28               	movwf	convert_uint16_to_string@str& (0+255),b
  1338   0011B0  0E00               	movlw	high _adc_res_1_txt
  1339   0011B2  6F29               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1340   0011B4  ECA4  F011         	call	_convert_uint16_to_string	;wreg free
  1341   0011B8  6E63               	movwf	main@ret^0,c
  1342                           
  1343                           ;application.c: 128:         ret = convert_uint16_to_string(adc_res_2, adc_res_2_txt);
  1344   0011BA  C0D1  F126         	movff	_adc_res_2,convert_uint16_to_string@value
  1345   0011BE  C0D2  F127         	movff	_adc_res_2+1,convert_uint16_to_string@value+1
  1346   0011C2  0EC1               	movlw	low _adc_res_2_txt
  1347   0011C4  0101               	movlb	1	; () banked
  1348   0011C6  6F28               	movwf	convert_uint16_to_string@str& (0+255),b
  1349   0011C8  0E00               	movlw	high _adc_res_2_txt
  1350   0011CA  6F29               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1351   0011CC  ECA4  F011         	call	_convert_uint16_to_string	;wreg free
  1352   0011D0  6E63               	movwf	main@ret^0,c
  1353                           
  1354                           ;application.c: 129:         ret = convert_uint16_to_string(adc_res_3, adc_res_3_txt);
  1355   0011D2  C0CF  F126         	movff	_adc_res_3,convert_uint16_to_string@value
  1356   0011D6  C0D0  F127         	movff	_adc_res_3+1,convert_uint16_to_string@value+1
  1357   0011DA  0EBB               	movlw	low _adc_res_3_txt
  1358   0011DC  0101               	movlb	1	; () banked
  1359   0011DE  6F28               	movwf	convert_uint16_to_string@str& (0+255),b
  1360   0011E0  0E00               	movlw	high _adc_res_3_txt
  1361   0011E2  6F29               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1362   0011E4  ECA4  F011         	call	_convert_uint16_to_string	;wreg free
  1363   0011E8  6E63               	movwf	main@ret^0,c
  1364                           
  1365                           ;application.c: 130:         ret = convert_uint16_to_string(adc_res_4, adc_res_4_txt);
  1366   0011EA  C0CD  F126         	movff	_adc_res_4,convert_uint16_to_string@value
  1367   0011EE  C0CE  F127         	movff	_adc_res_4+1,convert_uint16_to_string@value+1
  1368   0011F2  0EB5               	movlw	low _adc_res_4_txt
  1369   0011F4  0101               	movlb	1	; () banked
  1370   0011F6  6F28               	movwf	convert_uint16_to_string@str& (0+255),b
  1371   0011F8  0E00               	movlw	high _adc_res_4_txt
  1372   0011FA  6F29               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1373   0011FC  ECA4  F011         	call	_convert_uint16_to_string	;wreg free
  1374   001200  6E63               	movwf	main@ret^0,c
  1375   001202  0EF1               	movlw	low _lcd_1
  1376   001204  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1377   001206  0E00               	movlw	high _lcd_1
  1378   001208  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1379   00120A  0E01               	movlw	1
  1380   00120C  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1381   00120E  0E07               	movlw	7
  1382   001210  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1383   001212  0EC7               	movlw	low _adc_res_1_txt
  1384   001214  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1385   001216  0E00               	movlw	high _adc_res_1_txt
  1386   001218  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1387   00121A  EC65  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1388   00121E  0EF1               	movlw	low _lcd_1
  1389   001220  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1390   001222  0E00               	movlw	high _lcd_1
  1391   001224  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1392   001226  0E02               	movlw	2
  1393   001228  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1394   00122A  0E07               	movlw	7
  1395   00122C  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1396   00122E  0EC1               	movlw	low _adc_res_2_txt
  1397   001230  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1398   001232  0E00               	movlw	high _adc_res_2_txt
  1399   001234  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1400   001236  EC65  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1401   00123A  0EF1               	movlw	low _lcd_1
  1402   00123C  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1403   00123E  0E00               	movlw	high _lcd_1
  1404   001240  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1405   001242  0E03               	movlw	3
  1406   001244  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1407   001246  0E07               	movlw	7
  1408   001248  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1409   00124A  0EBB               	movlw	low _adc_res_3_txt
  1410   00124C  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1411   00124E  0E00               	movlw	high _adc_res_3_txt
  1412   001250  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1413   001252  EC65  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1414   001256  0EF1               	movlw	low _lcd_1
  1415   001258  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1416   00125A  0E00               	movlw	high _lcd_1
  1417   00125C  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1418   00125E  0E04               	movlw	4
  1419   001260  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1420   001262  0E07               	movlw	7
  1421   001264  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1422   001266  0EB5               	movlw	low _adc_res_4_txt
  1423   001268  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1424   00126A  0E00               	movlw	high _adc_res_4_txt
  1425   00126C  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1426   00126E  EC65  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1427   001272                     
  1428                           ;application.c: 138:         if((adc_res_1>500)&& (adc_res_2>500) ){
  1429   001272  0EF5               	movlw	245
  1430   001274  0100               	movlb	0	; () banked
  1431   001276  5DD3               	subwf	_adc_res_1& (0+255),w,b
  1432   001278  0E01               	movlw	1
  1433   00127A  59D4               	subwfb	(_adc_res_1+1)& (0+255),w,b
  1434   00127C  A0D8               	btfss	status,0,c
  1435   00127E  EF43  F009         	goto	u6451
  1436   001282  EF45  F009         	goto	u6450
  1437   001286                     u6451:
  1438   001286  EF7E  F009         	goto	l8014
  1439   00128A                     u6450:
  1440   00128A                     
  1441                           ; BSR set to: 0
  1442   00128A  0EF5               	movlw	245
  1443   00128C  5DD1               	subwf	_adc_res_2& (0+255),w,b
  1444   00128E  0E01               	movlw	1
  1445   001290  59D2               	subwfb	(_adc_res_2+1)& (0+255),w,b
  1446   001292  A0D8               	btfss	status,0,c
  1447   001294  EF4E  F009         	goto	u6461
  1448   001298  EF50  F009         	goto	u6460
  1449   00129C                     u6461:
  1450   00129C  EF7E  F009         	goto	l8014
  1451   0012A0                     u6460:
  1452   0012A0                     
  1453                           ; BSR set to: 0
  1454   0012A0  0EFA               	movlw	low _btn_high
  1455   0012A2  6E17               	movwf	button_read_state@btn^0,c
  1456   0012A4  0E00               	movlw	high _btn_high
  1457   0012A6  6E18               	movwf	(button_read_state@btn+1)^0,c
  1458   0012A8  0E69               	movlw	low _btn_high_con
  1459   0012AA  6E19               	movwf	button_read_state@btn_state^0,c
  1460   0012AC  0E00               	movlw	high _btn_high_con
  1461   0012AE  6E1A               	movwf	(button_read_state@btn_state+1)^0,c
  1462   0012B0  EC1D  F010         	call	_button_read_state	;wreg free
  1463   0012B4                     
  1464                           ;application.c: 141:                   if (btn_high_con==BUTTON_PRESSED){
  1465   0012B4  5069               	movf	_btn_high_con^0,w,c
  1466   0012B6  A4D8               	btfss	status,2,c
  1467   0012B8  EF60  F009         	goto	u6471
  1468   0012BC  EF62  F009         	goto	u6470
  1469   0012C0                     u6471:
  1470   0012C0  EF70  F009         	goto	l8012
  1471   0012C4                     u6470:
  1472   0012C4                     
  1473                           ;application.c: 142:                      led_turn_on(&led1);
  1474   0012C4  0E6D               	movlw	low _led1
  1475   0012C6  6E17               	movwf	led_turn_on@led^0,c
  1476   0012C8  0E00               	movlw	high _led1
  1477   0012CA  6E18               	movwf	(led_turn_on@led+1)^0,c
  1478   0012CC  EC76  F014         	call	_led_turn_on	;wreg free
  1479                           
  1480                           ;application.c: 143:                     led_turn_off(&led3);}
  1481   0012D0  0E6B               	movlw	low _led3
  1482   0012D2  6E17               	movwf	led_turn_off@led^0,c
  1483   0012D4  0E00               	movlw	high _led3
  1484   0012D6  6E18               	movwf	(led_turn_off@led+1)^0,c
  1485   0012D8  ECB1  F014         	call	_led_turn_off	;wreg free
  1486   0012DC  EF8A  F009         	goto	l8016
  1487   0012E0                     l8012:
  1488                           
  1489                           ;application.c: 146:                       led_turn_on(&led3);
  1490   0012E0  0E6B               	movlw	low _led3
  1491   0012E2  6E17               	movwf	led_turn_on@led^0,c
  1492   0012E4  0E00               	movlw	high _led3
  1493   0012E6  6E18               	movwf	(led_turn_on@led+1)^0,c
  1494   0012E8  EC76  F014         	call	_led_turn_on	;wreg free
  1495                           
  1496                           ;application.c: 147:                       led_turn_off(&led1);
  1497   0012EC  0E6D               	movlw	low _led1
  1498   0012EE  6E17               	movwf	led_turn_off@led^0,c
  1499   0012F0  0E00               	movlw	high _led1
  1500   0012F2  6E18               	movwf	(led_turn_off@led+1)^0,c
  1501   0012F4  ECB1  F014         	call	_led_turn_off	;wreg free
  1502   0012F8  EF8A  F009         	goto	l8016
  1503   0012FC                     l8014:
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;application.c: 152:              led_turn_off(&led1);
  1507   0012FC  0E6D               	movlw	low _led1
  1508   0012FE  6E17               	movwf	led_turn_off@led^0,c
  1509   001300  0E00               	movlw	high _led1
  1510   001302  6E18               	movwf	(led_turn_off@led+1)^0,c
  1511   001304  ECB1  F014         	call	_led_turn_off	;wreg free
  1512                           
  1513                           ;application.c: 153:                led_turn_off(&led3);
  1514   001308  0E6B               	movlw	low _led3
  1515   00130A  6E17               	movwf	led_turn_off@led^0,c
  1516   00130C  0E00               	movlw	high _led3
  1517   00130E  6E18               	movwf	(led_turn_off@led+1)^0,c
  1518   001310  ECB1  F014         	call	_led_turn_off	;wreg free
  1519   001314                     l8016:
  1520                           
  1521                           ;application.c: 158:         if((adc_res_3>500)&& (adc_res_4>500) ){
  1522   001314  0EF5               	movlw	245
  1523   001316  0100               	movlb	0	; () banked
  1524   001318  5DCF               	subwf	_adc_res_3& (0+255),w,b
  1525   00131A  0E01               	movlw	1
  1526   00131C  59D0               	subwfb	(_adc_res_3+1)& (0+255),w,b
  1527   00131E  A0D8               	btfss	status,0,c
  1528   001320  EF94  F009         	goto	u6481
  1529   001324  EF96  F009         	goto	u6480
  1530   001328                     u6481:
  1531   001328  EFCF  F009         	goto	l8028
  1532   00132C                     u6480:
  1533   00132C                     
  1534                           ; BSR set to: 0
  1535   00132C  0EF5               	movlw	245
  1536   00132E  5DCD               	subwf	_adc_res_4& (0+255),w,b
  1537   001330  0E01               	movlw	1
  1538   001332  59CE               	subwfb	(_adc_res_4+1)& (0+255),w,b
  1539   001334  A0D8               	btfss	status,0,c
  1540   001336  EF9F  F009         	goto	u6491
  1541   00133A  EFA1  F009         	goto	u6490
  1542   00133E                     u6491:
  1543   00133E  EFCF  F009         	goto	l8028
  1544   001342                     u6490:
  1545   001342                     
  1546                           ; BSR set to: 0
  1547   001342  0EF7               	movlw	low _btn_high1
  1548   001344  6E17               	movwf	button_read_state@btn^0,c
  1549   001346  0E00               	movlw	high _btn_high1
  1550   001348  6E18               	movwf	(button_read_state@btn+1)^0,c
  1551   00134A  0E68               	movlw	low _btn_high1_con
  1552   00134C  6E19               	movwf	button_read_state@btn_state^0,c
  1553   00134E  0E00               	movlw	high _btn_high1_con
  1554   001350  6E1A               	movwf	(button_read_state@btn_state+1)^0,c
  1555   001352  EC1D  F010         	call	_button_read_state	;wreg free
  1556   001356                     
  1557                           ;application.c: 161:                   if (btn_high1_con==BUTTON_PRESSED){
  1558   001356  5068               	movf	_btn_high1_con^0,w,c
  1559   001358  A4D8               	btfss	status,2,c
  1560   00135A  EFB1  F009         	goto	u6501
  1561   00135E  EFB3  F009         	goto	u6500
  1562   001362                     u6501:
  1563   001362  EFC1  F009         	goto	l8026
  1564   001366                     u6500:
  1565   001366                     
  1566                           ;application.c: 162:                      led_turn_on(&led2);
  1567   001366  0E6C               	movlw	low _led2
  1568   001368  6E17               	movwf	led_turn_on@led^0,c
  1569   00136A  0E00               	movlw	high _led2
  1570   00136C  6E18               	movwf	(led_turn_on@led+1)^0,c
  1571   00136E  EC76  F014         	call	_led_turn_on	;wreg free
  1572                           
  1573                           ;application.c: 163:                      led_turn_off(&led4);
  1574   001372  0E6A               	movlw	low _led4
  1575   001374  6E17               	movwf	led_turn_off@led^0,c
  1576   001376  0E00               	movlw	high _led4
  1577   001378  6E18               	movwf	(led_turn_off@led+1)^0,c
  1578   00137A  ECB1  F014         	call	_led_turn_off	;wreg free
  1579                           
  1580                           ;application.c: 166:        }
  1581   00137E  EF87  F008         	goto	l7976
  1582   001382                     l8026:
  1583                           
  1584                           ;application.c: 168:                      led_turn_off(&led2);
  1585   001382  0E6C               	movlw	low _led2
  1586   001384  6E17               	movwf	led_turn_off@led^0,c
  1587   001386  0E00               	movlw	high _led2
  1588   001388  6E18               	movwf	(led_turn_off@led+1)^0,c
  1589   00138A  ECB1  F014         	call	_led_turn_off	;wreg free
  1590                           
  1591                           ;application.c: 169:                      led_turn_on(&led4);
  1592   00138E  0E6A               	movlw	low _led4
  1593   001390  6E17               	movwf	led_turn_on@led^0,c
  1594   001392  0E00               	movlw	high _led4
  1595   001394  6E18               	movwf	(led_turn_on@led+1)^0,c
  1596   001396  EC76  F014         	call	_led_turn_on	;wreg free
  1597   00139A  EF87  F008         	goto	l7976
  1598   00139E                     l8028:
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;application.c: 174:              led_turn_off(&led2);
  1602   00139E  0E6C               	movlw	low _led2
  1603   0013A0  6E17               	movwf	led_turn_off@led^0,c
  1604   0013A2  0E00               	movlw	high _led2
  1605   0013A4  6E18               	movwf	(led_turn_off@led+1)^0,c
  1606   0013A6  ECB1  F014         	call	_led_turn_off	;wreg free
  1607                           
  1608                           ;application.c: 175:                led_turn_off(&led4);
  1609   0013AA  0E6A               	movlw	low _led4
  1610   0013AC  6E17               	movwf	led_turn_off@led^0,c
  1611   0013AE  0E00               	movlw	high _led4
  1612   0013B0  6E18               	movwf	(led_turn_off@led+1)^0,c
  1613   0013B2  ECB1  F014         	call	_led_turn_off	;wreg free
  1614   0013B6  EF87  F008         	goto	l7976
  1615   0013BA  EF07  F000         	goto	start
  1616   0013BE                     __end_of_main:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _led_turn_on *****************
  1620 ;; Defined at:
  1621 ;;		line 36 in file "ECU_Layer/LED/ecu_led.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  led             2   22[COMRAM] PTR const struct .
  1624 ;;		 -> led4(1), led2(1), led3(1), led1(1), 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  pin_obj         1   25[COMRAM] struct .
  1627 ;;  ret             1    0        unsigned char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      unsigned char 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;Total ram usage:        4 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 5
  1644 ;; This function calls:
  1645 ;;		_gpio_pin_write_logic
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text1
  1652   0028EC                     __ptext1:
  1653                           	callstack 0
  1654   0028EC                     _led_turn_on:
  1655                           	callstack 25
  1656   0028EC                     
  1657                           ;ECU_Layer/LED/ecu_led.c: 38:      if(((void*)0) == led){
  1658   0028EC  5017               	movf	led_turn_on@led^0,w,c
  1659   0028EE  1018               	iorwf	(led_turn_on@led+1)^0,w,c
  1660   0028F0  A4D8               	btfss	status,2,c
  1661   0028F2  EF7D  F014         	goto	u4351
  1662   0028F6  EF7F  F014         	goto	u4350
  1663   0028FA                     u4351:
  1664   0028FA  EF81  F014         	goto	l284
  1665   0028FE                     u4350:
  1666   0028FE                     
  1667                           ;ECU_Layer/LED/ecu_led.c: 40:      }
  1668   0028FE  EFB0  F014         	goto	l288
  1669   002902                     l284:
  1670                           
  1671                           ;ECU_Layer/LED/ecu_led.c: 42:          pin_config_t pin_obj = { .port = led->port_name, 
      +                          .pin = led->pin,
  1672   002902  C071  F01A         	movff	led_turn_on@F3053,led_turn_on@pin_obj
  1673   002906  C017  FFD9         	movff	led_turn_on@led,fsr2l
  1674   00290A  C018  FFDA         	movff	led_turn_on@led+1,fsr2h
  1675   00290E  50DF               	movf	223,w,c
  1676   002910  0B0F               	andlw	15
  1677   002912  6E19               	movwf	??_led_turn_on^0,c
  1678   002914  501A               	movf	led_turn_on@pin_obj^0,w,c
  1679   002916  1819               	xorwf	??_led_turn_on^0,w,c
  1680   002918  0BF8               	andlw	-8
  1681   00291A  1819               	xorwf	??_led_turn_on^0,w,c
  1682   00291C  6E1A               	movwf	led_turn_on@pin_obj^0,c
  1683   00291E  C017  FFD9         	movff	led_turn_on@led,fsr2l
  1684   002922  C018  FFDA         	movff	led_turn_on@led+1,fsr2h
  1685   002926  38DF               	swapf	223,w,c
  1686   002928  0B07               	andlw	7
  1687   00292A  6E19               	movwf	??_led_turn_on^0,c
  1688   00292C  4619               	rlncf	??_led_turn_on^0,f,c
  1689   00292E  4619               	rlncf	??_led_turn_on^0,f,c
  1690   002930  4619               	rlncf	??_led_turn_on^0,f,c
  1691   002932  501A               	movf	led_turn_on@pin_obj^0,w,c
  1692   002934  1819               	xorwf	??_led_turn_on^0,w,c
  1693   002936  0BC7               	andlw	-57
  1694   002938  1819               	xorwf	??_led_turn_on^0,w,c
  1695   00293A  6E1A               	movwf	led_turn_on@pin_obj^0,c
  1696   00293C  9C1A               	bcf	led_turn_on@pin_obj^0,6,c
  1697   00293E  C017  FFD9         	movff	led_turn_on@led,fsr2l
  1698   002942  C018  FFDA         	movff	led_turn_on@led+1,fsr2h
  1699   002946  AEDF               	btfss	indf2,7,c
  1700   002948  D002               	bra	u4365
  1701   00294A  8E1A               	bsf	led_turn_on@pin_obj^0,7,c
  1702   00294C  D001               	bra	u4367
  1703   00294E                     u4365:
  1704   00294E  9E1A               	bcf	led_turn_on@pin_obj^0,7,c
  1705   002950                     u4367:
  1706   002950                     
  1707                           ;ECU_Layer/LED/ecu_led.c: 44:          gpio_pin_write_logic(&pin_obj, GPIO_HIGH);
  1708   002950  0E1A               	movlw	low led_turn_on@pin_obj
  1709   002952  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1710   002954  0E00               	movlw	high led_turn_on@pin_obj
  1711   002956  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1712   002958  0E01               	movlw	1
  1713   00295A  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1714   00295C  ECB6  F00E         	call	_gpio_pin_write_logic	;wreg free
  1715   002960                     l288:
  1716   002960  0012               	return		;funcret
  1717   002962                     __end_of_led_turn_on:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _led_turn_off *****************
  1721 ;; Defined at:
  1722 ;;		line 56 in file "ECU_Layer/LED/ecu_led.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  led             2   22[COMRAM] PTR const struct .
  1725 ;;		 -> led4(1), led2(1), led3(1), led1(1), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  pin_obj         1   25[COMRAM] struct .
  1728 ;;  ret             1    0        unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      unsigned char 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;Total ram usage:        4 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 5
  1745 ;; This function calls:
  1746 ;;		_gpio_pin_write_logic
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text2
  1753   002962                     __ptext2:
  1754                           	callstack 0
  1755   002962                     _led_turn_off:
  1756                           	callstack 25
  1757   002962                     
  1758                           ;ECU_Layer/LED/ecu_led.c: 58:      if(((void*)0) == led){
  1759   002962  5017               	movf	led_turn_off@led^0,w,c
  1760   002964  1018               	iorwf	(led_turn_off@led+1)^0,w,c
  1761   002966  A4D8               	btfss	status,2,c
  1762   002968  EFB8  F014         	goto	u4371
  1763   00296C  EFBA  F014         	goto	u4370
  1764   002970                     u4371:
  1765   002970  EFBC  F014         	goto	l291
  1766   002974                     u4370:
  1767   002974                     
  1768                           ;ECU_Layer/LED/ecu_led.c: 60:      }
  1769   002974  EFEB  F014         	goto	l295
  1770   002978                     l291:
  1771                           
  1772                           ;ECU_Layer/LED/ecu_led.c: 62:          pin_config_t pin_obj = { .port = led->port_name, 
      +                          .pin = led->pin,
  1773   002978  C070  F01A         	movff	led_turn_off@F3058,led_turn_off@pin_obj
  1774   00297C  C017  FFD9         	movff	led_turn_off@led,fsr2l
  1775   002980  C018  FFDA         	movff	led_turn_off@led+1,fsr2h
  1776   002984  50DF               	movf	223,w,c
  1777   002986  0B0F               	andlw	15
  1778   002988  6E19               	movwf	??_led_turn_off^0,c
  1779   00298A  501A               	movf	led_turn_off@pin_obj^0,w,c
  1780   00298C  1819               	xorwf	??_led_turn_off^0,w,c
  1781   00298E  0BF8               	andlw	-8
  1782   002990  1819               	xorwf	??_led_turn_off^0,w,c
  1783   002992  6E1A               	movwf	led_turn_off@pin_obj^0,c
  1784   002994  C017  FFD9         	movff	led_turn_off@led,fsr2l
  1785   002998  C018  FFDA         	movff	led_turn_off@led+1,fsr2h
  1786   00299C  38DF               	swapf	223,w,c
  1787   00299E  0B07               	andlw	7
  1788   0029A0  6E19               	movwf	??_led_turn_off^0,c
  1789   0029A2  4619               	rlncf	??_led_turn_off^0,f,c
  1790   0029A4  4619               	rlncf	??_led_turn_off^0,f,c
  1791   0029A6  4619               	rlncf	??_led_turn_off^0,f,c
  1792   0029A8  501A               	movf	led_turn_off@pin_obj^0,w,c
  1793   0029AA  1819               	xorwf	??_led_turn_off^0,w,c
  1794   0029AC  0BC7               	andlw	-57
  1795   0029AE  1819               	xorwf	??_led_turn_off^0,w,c
  1796   0029B0  6E1A               	movwf	led_turn_off@pin_obj^0,c
  1797   0029B2  9C1A               	bcf	led_turn_off@pin_obj^0,6,c
  1798   0029B4  C017  FFD9         	movff	led_turn_off@led,fsr2l
  1799   0029B8  C018  FFDA         	movff	led_turn_off@led+1,fsr2h
  1800   0029BC  AEDF               	btfss	indf2,7,c
  1801   0029BE  D002               	bra	u4385
  1802   0029C0  8E1A               	bsf	led_turn_off@pin_obj^0,7,c
  1803   0029C2  D001               	bra	u4387
  1804   0029C4                     u4385:
  1805   0029C4  9E1A               	bcf	led_turn_off@pin_obj^0,7,c
  1806   0029C6                     u4387:
  1807   0029C6                     
  1808                           ;ECU_Layer/LED/ecu_led.c: 64:          gpio_pin_write_logic(&pin_obj, GPIO_LOW);
  1809   0029C6  0E1A               	movlw	low led_turn_off@pin_obj
  1810   0029C8  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1811   0029CA  0E00               	movlw	high led_turn_off@pin_obj
  1812   0029CC  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1813   0029CE  0E00               	movlw	0
  1814   0029D0  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1815   0029D2  ECB6  F00E         	call	_gpio_pin_write_logic	;wreg free
  1816   0029D6                     l295:
  1817   0029D6  0012               	return		;funcret
  1818   0029D8                     __end_of_led_turn_off:
  1819                           	callstack 0
  1820                           
  1821 ;; *************** function _lcd_4bit_send_string_pos *****************
  1822 ;; Defined at:
  1823 ;;		line 170 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  lcd             2   37[COMRAM] PTR const struct .
  1826 ;;		 -> lcd_1(6), 
  1827 ;;  row             1   39[COMRAM] unsigned char 
  1828 ;;  column          1   40[COMRAM] unsigned char 
  1829 ;;  str             2   41[COMRAM] PTR unsigned char 
  1830 ;;		 -> adc_res_4_txt(6), adc_res_3_txt(6), adc_res_2_txt(6), adc_res_1_txt(6), 
  1831 ;;		 -> STR_8(7), STR_7(7), STR_6(7), STR_5(7), 
  1832 ;;		 -> STR_4(14), 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  ret             1   43[COMRAM] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      unsigned char 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1844 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;Total ram usage:        7 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 8
  1851 ;; This function calls:
  1852 ;;		_lcd_4bit_send_char_data
  1853 ;;		_lcd_4bit_set_cursor
  1854 ;; This function is called by:
  1855 ;;		_main
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text3
  1860   0026CA                     __ptext3:
  1861                           	callstack 0
  1862   0026CA                     _lcd_4bit_send_string_pos:
  1863                           	callstack 22
  1864   0026CA                     
  1865                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 172:     if(((void*)0) == lcd){
  1866   0026CA  5026               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1867   0026CC  1027               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  1868   0026CE  A4D8               	btfss	status,2,c
  1869   0026D0  EF6C  F013         	goto	u4221
  1870   0026D4  EF6E  F013         	goto	u4220
  1871   0026D8                     u4221:
  1872   0026D8  EF72  F013         	goto	l6082
  1873   0026DC                     u4220:
  1874   0026DC                     
  1875                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 173:         ret = (Std_ReturnType)0x00;
  1876   0026DC  0E00               	movlw	0
  1877   0026DE  6E2C               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1878                           
  1879                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 174:     }
  1880   0026E0  EFB3  F013         	goto	l6090
  1881   0026E4                     l6082:
  1882                           
  1883                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 176:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  1884   0026E4  C026  F01F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1885   0026E8  C027  F020         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1886   0026EC  C028  F021         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1887   0026F0  C029  F022         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@coulmn
  1888   0026F4  EC11  F013         	call	_lcd_4bit_set_cursor	;wreg free
  1889   0026F8  6E2C               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1890                           
  1891                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 177:         while(*str){
  1892   0026FA  EF9A  F013         	goto	l6088
  1893   0026FE                     l6084:
  1894                           
  1895                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 178:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  1896   0026FE  C026  F01B         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1897   002702  C027  F01C         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1898   002706  C02A  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1899   00270A  C02B  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1900   00270E  0E00               	movlw	low (__smallconst shr (0+16))
  1901   002710  6EF8               	movwf	tblptru,c
  1902   002712  0E0F               	movlw	(high __ramtop+-1)
  1903   002714  64F7               	cpfsgt	tblptrh,c
  1904   002716  D003               	bra	u4237
  1905   002718  0008               	tblrd		*
  1906   00271A  50F5               	movf	tablat,w,c
  1907   00271C  D005               	bra	u4230
  1908   00271E                     u4237:
  1909   00271E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1910   002722  CFF7 FFEA          	movff	tblptrh,fsr0h
  1911   002726  50EF               	movf	indf0,w,c
  1912   002728                     u4230:
  1913   002728  6E1D               	movwf	lcd_4bit_send_char_data@data^0,c
  1914   00272A  ECEC  F014         	call	_lcd_4bit_send_char_data	;wreg free
  1915   00272E  6E2C               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1916   002730  4A2A               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1917   002732  2A2B               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1918   002734                     l6088:
  1919                           
  1920                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 177:         while(*str){
  1921   002734  C02A  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1922   002738  C02B  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1923   00273C  0E00               	movlw	low (__smallconst shr (0+16))
  1924   00273E  6EF8               	movwf	tblptru,c
  1925   002740  0E0F               	movlw	(high __ramtop+-1)
  1926   002742  64F7               	cpfsgt	tblptrh,c
  1927   002744  D003               	bra	u4247
  1928   002746  0008               	tblrd		*
  1929   002748  50F5               	movf	tablat,w,c
  1930   00274A  D005               	bra	u4240
  1931   00274C                     u4247:
  1932   00274C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1933   002750  CFF7 FFEA          	movff	tblptrh,fsr0h
  1934   002754  50EF               	movf	indf0,w,c
  1935   002756                     u4240:
  1936   002756  0900               	iorlw	0
  1937   002758  A4D8               	btfss	status,2,c
  1938   00275A  EFB1  F013         	goto	u4251
  1939   00275E  EFB3  F013         	goto	u4250
  1940   002762                     u4251:
  1941   002762  EF7F  F013         	goto	l6084
  1942   002766                     u4250:
  1943   002766                     l6090:
  1944                           
  1945                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 181:     return ret;
  1946   002766  502C               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1947   002768  0012               	return		;funcret
  1948   00276A                     __end_of_lcd_4bit_send_string_pos:
  1949                           	callstack 0
  1950                           
  1951 ;; *************** function _lcd_4bit_set_cursor *****************
  1952 ;; Defined at:
  1953 ;;		line 570 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  lcd             2   30[COMRAM] PTR const struct .
  1956 ;;		 -> lcd_1(6), 
  1957 ;;  row             1   32[COMRAM] unsigned char 
  1958 ;;  coulmn          1   33[COMRAM] unsigned char 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  ret             1   36[COMRAM] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      unsigned char 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;Total ram usage:        7 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 7
  1977 ;; This function calls:
  1978 ;;		_lcd_4bit_send_command
  1979 ;; This function is called by:
  1980 ;;		_lcd_4bit_send_string_pos
  1981 ;;		_lcd_4bit_send_char_data_pos
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text4
  1986   002622                     __ptext4:
  1987                           	callstack 0
  1988   002622                     _lcd_4bit_set_cursor:
  1989                           	callstack 22
  1990   002622                     
  1991                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 571:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1992   002622  0E01               	movlw	1
  1993   002624  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  1994   002626                     
  1995                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 572:     coulmn--;
  1996   002626  0622               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  1997                           
  1998                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 573:     switch(row){
  1999   002628  EF46  F013         	goto	l5818
  2000   00262C                     l5810:
  2001   00262C  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2002   002630  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2003   002634  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  2004   002636  0F80               	addlw	128
  2005   002638  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2006   00263A  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2007   00263E  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  2008   002640  EF63  F013         	goto	l5820
  2009   002644                     l5812:
  2010   002644  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2011   002648  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2012   00264C  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  2013   00264E  0FC0               	addlw	192
  2014   002650  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2015   002652  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2016   002656  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  2017   002658  EF63  F013         	goto	l5820
  2018   00265C                     l5814:
  2019   00265C  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2020   002660  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2021   002664  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  2022   002666  0F94               	addlw	148
  2023   002668  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2024   00266A  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2025   00266E  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  2026   002670  EF63  F013         	goto	l5820
  2027   002674                     l5816:
  2028   002674  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2029   002678  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2030   00267C  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  2031   00267E  0FD4               	addlw	212
  2032   002680  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2033   002682  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2034   002686  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  2035   002688  EF63  F013         	goto	l5820
  2036   00268C                     l5818:
  2037   00268C  5021               	movf	lcd_4bit_set_cursor@row^0,w,c
  2038   00268E  6E23               	movwf	??_lcd_4bit_set_cursor^0,c
  2039   002690  6A24               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  2040                           
  2041                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2042                           ; Switch size 1, requested type "simple"
  2043                           ; Number of cases is 1, Range of values is 0 to 0
  2044                           ; switch strategies available:
  2045                           ; Name         Instructions Cycles
  2046                           ; simple_byte            4     3 (average)
  2047                           ;	Chosen strategy is simple_byte
  2048   002692  5024               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  2049   002694  0A00               	xorlw	0	; case 0
  2050   002696  B4D8               	btfsc	status,2,c
  2051   002698  EF50  F013         	goto	l8110
  2052   00269C  EF63  F013         	goto	l5820
  2053   0026A0                     l8110:
  2054                           
  2055                           ; Switch size 1, requested type "simple"
  2056                           ; Number of cases is 4, Range of values is 1 to 4
  2057                           ; switch strategies available:
  2058                           ; Name         Instructions Cycles
  2059                           ; simple_byte           13     7 (average)
  2060                           ;	Chosen strategy is simple_byte
  2061   0026A0  5023               	movf	??_lcd_4bit_set_cursor^0,w,c
  2062   0026A2  0A01               	xorlw	1	; case 1
  2063   0026A4  B4D8               	btfsc	status,2,c
  2064   0026A6  EF16  F013         	goto	l5810
  2065   0026AA  0A03               	xorlw	3	; case 2
  2066   0026AC  B4D8               	btfsc	status,2,c
  2067   0026AE  EF22  F013         	goto	l5812
  2068   0026B2  0A01               	xorlw	1	; case 3
  2069   0026B4  B4D8               	btfsc	status,2,c
  2070   0026B6  EF2E  F013         	goto	l5814
  2071   0026BA  0A07               	xorlw	7	; case 4
  2072   0026BC  B4D8               	btfsc	status,2,c
  2073   0026BE  EF3A  F013         	goto	l5816
  2074   0026C2  EF63  F013         	goto	l5820
  2075   0026C6                     l5820:
  2076                           
  2077                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 580:     return ret;
  2078   0026C6  5025               	movf	lcd_4bit_set_cursor@ret^0,w,c
  2079   0026C8  0012               	return		;funcret
  2080   0026CA                     __end_of_lcd_4bit_set_cursor:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _lcd_4bit_send_char_data *****************
  2084 ;; Defined at:
  2085 ;;		line 96 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  lcd             2   26[COMRAM] PTR const struct .
  2088 ;;		 -> lcd_1(6), 
  2089 ;;  data            1   28[COMRAM] unsigned char 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  ret             1   29[COMRAM] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      unsigned char 
  2094 ;; Registers used:
  2095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2101 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;Total ram usage:        4 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 6
  2108 ;; This function calls:
  2109 ;;		_gpio_pin_write_logic
  2110 ;;		_lcd_4bit_send_enable_signal
  2111 ;;		_lcd_send_4bits
  2112 ;; This function is called by:
  2113 ;;		_lcd_4bit_send_string_pos
  2114 ;;		_lcd_4bit_send_char_data_pos
  2115 ;;		_lcd_4bit_send_string
  2116 ;;		_lcd_4bit_send_custom_char
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text5
  2121   0029D8                     __ptext5:
  2122                           	callstack 0
  2123   0029D8                     _lcd_4bit_send_char_data:
  2124                           	callstack 23
  2125   0029D8                     
  2126                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 98:     if(((void*)0) == lcd){
  2127   0029D8  501B               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  2128   0029DA  101C               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  2129   0029DC  A4D8               	btfss	status,2,c
  2130   0029DE  EFF3  F014         	goto	u3921
  2131   0029E2  EFF5  F014         	goto	u3920
  2132   0029E6                     u3921:
  2133   0029E6  EFF9  F014         	goto	l5800
  2134   0029EA                     u3920:
  2135   0029EA                     
  2136                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 99:         ret = (Std_ReturnType)0x00;
  2137   0029EA  0E00               	movlw	0
  2138   0029EC  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  2139                           
  2140                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 100:     }
  2141   0029EE  EF23  F015         	goto	l5802
  2142   0029F2                     l5800:
  2143                           
  2144                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 104:         ret = gpio_pin_write_logic(&(lcd->lcd_rs)
      +                          , GPIO_HIGH);
  2145   0029F2  C01B  F00D         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  2146   0029F6  C01C  F00E         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  2147   0029FA  0E01               	movlw	1
  2148   0029FC  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  2149   0029FE  ECB6  F00E         	call	_gpio_pin_write_logic	;wreg free
  2150   002A02  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  2151                           
  2152                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 106:         ret = lcd_send_4bits(lcd, data >> 4);
  2153   002A04  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2154   002A08  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2155   002A0C  381D               	swapf	lcd_4bit_send_char_data@data^0,w,c
  2156   002A0E  0B0F               	andlw	15
  2157   002A10  6E19               	movwf	lcd_send_4bits@_data_command^0,c
  2158   002A12  EC94  F015         	call	_lcd_send_4bits	;wreg free
  2159   002A16  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  2160                           
  2161                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 108:         ret = lcd_4bit_send_enable_signal(lcd);
  2162   002A18  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  2163   002A1C  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  2164   002A20  EC03  F017         	call	_lcd_4bit_send_enable_signal	;wreg free
  2165   002A24  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  2166                           
  2167                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 110:         ret = lcd_send_4bits(lcd, data);
  2168   002A26  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2169   002A2A  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2170   002A2E  C01D  F019         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  2171   002A32  EC94  F015         	call	_lcd_send_4bits	;wreg free
  2172   002A36  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  2173                           
  2174                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 112:         ret = lcd_4bit_send_enable_signal(lcd);
  2175   002A38  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  2176   002A3C  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  2177   002A40  EC03  F017         	call	_lcd_4bit_send_enable_signal	;wreg free
  2178   002A44  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  2179   002A46                     l5802:
  2180                           
  2181                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 114:     return ret;
  2182   002A46  501E               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2183   002A48  0012               	return		;funcret
  2184   002A4A                     __end_of_lcd_4bit_send_char_data:
  2185                           	callstack 0
  2186                           
  2187 ;; *************** function _lcd_4bit_intialize *****************
  2188 ;; Defined at:
  2189 ;;		line 30 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  lcd             2   30[COMRAM] PTR const struct .
  2192 ;;		 -> lcd_1(6), 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  ret             1   35[COMRAM] unsigned char 
  2195 ;;  l_data_pins_    1   34[COMRAM] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      unsigned char 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;Total ram usage:        6 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 7
  2212 ;; This function calls:
  2213 ;;		_gpio_pin_intialize
  2214 ;;		_lcd_4bit_send_command
  2215 ;; This function is called by:
  2216 ;;		_main
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text6
  2221   001B14                     __ptext6:
  2222                           	callstack 0
  2223   001B14                     _lcd_4bit_intialize:
  2224                           	callstack 23
  2225   001B14                     
  2226                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:     uint8 l_data_pins_counter = 0;
  2227   001B14  0E00               	movlw	0
  2228   001B16  6E23               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  2229   001B18                     
  2230                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 33:     if(((void*)0) == lcd){
  2231   001B18  501F               	movf	lcd_4bit_intialize@lcd^0,w,c
  2232   001B1A  1020               	iorwf	(lcd_4bit_intialize@lcd+1)^0,w,c
  2233   001B1C  A4D8               	btfss	status,2,c
  2234   001B1E  EF93  F00D         	goto	u4191
  2235   001B22  EF95  F00D         	goto	u4190
  2236   001B26                     u4191:
  2237   001B26  EF99  F00D         	goto	l6024
  2238   001B2A                     u4190:
  2239   001B2A                     
  2240                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 34:         ret = (Std_ReturnType)0x00;
  2241   001B2A  0E00               	movlw	0
  2242   001B2C  6E24               	movwf	lcd_4bit_intialize@ret^0,c
  2243                           
  2244                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:     }
  2245   001B2E  EF1E  F00E         	goto	l6060
  2246   001B32                     l6024:
  2247                           
  2248                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 37:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  2249   001B32  C01F  F017         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  2250   001B36  C020  F018         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
  2251   001B3A  EC5E  F015         	call	_gpio_pin_intialize	;wreg free
  2252   001B3E  6E24               	movwf	lcd_4bit_intialize@ret^0,c
  2253                           
  2254                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 38:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  2255   001B40  0E01               	movlw	1
  2256   001B42  241F               	addwf	lcd_4bit_intialize@lcd^0,w,c
  2257   001B44  6E17               	movwf	gpio_pin_intialize@_pin_config^0,c
  2258   001B46  0E00               	movlw	0
  2259   001B48  2020               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  2260   001B4A  6E18               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  2261   001B4C  EC5E  F015         	call	_gpio_pin_intialize	;wreg free
  2262   001B50  6E24               	movwf	lcd_4bit_intialize@ret^0,c
  2263   001B52                     
  2264                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 39:         for(l_data_pins_counter=0; l_data_pins_cou
      +                          nter<4; l_data_pins_counter++){
  2265   001B52  0E00               	movlw	0
  2266   001B54  6E23               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  2267   001B56                     l6032:
  2268   001B56  5023               	movf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
  2269   001B58  241F               	addwf	lcd_4bit_intialize@lcd^0,w,c
  2270   001B5A  6E21               	movwf	??_lcd_4bit_intialize^0,c
  2271   001B5C  0E00               	movlw	0
  2272   001B5E  2020               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  2273   001B60  6E22               	movwf	(??_lcd_4bit_intialize+1)^0,c
  2274   001B62  0E02               	movlw	2
  2275   001B64  2421               	addwf	??_lcd_4bit_intialize^0,w,c
  2276   001B66  6E17               	movwf	gpio_pin_intialize@_pin_config^0,c
  2277   001B68  0E00               	movlw	0
  2278   001B6A  2022               	addwfc	(??_lcd_4bit_intialize+1)^0,w,c
  2279   001B6C  6E18               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  2280   001B6E  EC5E  F015         	call	_gpio_pin_intialize	;wreg free
  2281   001B72                     
  2282                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 41:         }
  2283   001B72  2A23               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
  2284   001B74  0E03               	movlw	3
  2285   001B76  6423               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
  2286   001B78  EFC0  F00D         	goto	u4201
  2287   001B7C  EFC2  F00D         	goto	u4200
  2288   001B80                     u4201:
  2289   001B80  EFAB  F00D         	goto	l6032
  2290   001B84                     u4200:
  2291   001B84                     
  2292                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 42:         _delay((unsigned long)((20)*(4000000UL/400
      +                          0.0)));
  2293   001B84  0E1A               	movlw	26
  2294   001B86  6E21               	movwf	??_lcd_4bit_intialize^0,c
  2295   001B88  0EF8               	movlw	248
  2296   001B8A                     u6527:
  2297   001B8A  2EE8               	decfsz	wreg,f,c
  2298   001B8C  D7FE               	bra	u6527
  2299   001B8E  2E21               	decfsz	??_lcd_4bit_intialize^0,f,c
  2300   001B90  D7FC               	bra	u6527
  2301   001B92  D000               	nop2	
  2302   001B94  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2303   001B98  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  2304   001B9C  0E38               	movlw	56
  2305   001B9E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2306   001BA0  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2307   001BA4                     
  2308                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 44:         _delay((unsigned long)((5)*(4000000UL/4000
      +                          .0)));
  2309   001BA4  0E07               	movlw	7
  2310   001BA6  6E21               	movwf	??_lcd_4bit_intialize^0,c
  2311   001BA8  0E7D               	movlw	125
  2312   001BAA                     u6537:
  2313   001BAA  2EE8               	decfsz	wreg,f,c
  2314   001BAC  D7FE               	bra	u6537
  2315   001BAE  2E21               	decfsz	??_lcd_4bit_intialize^0,f,c
  2316   001BB0  D7FC               	bra	u6537
  2317   001BB2  F000               	nop	
  2318   001BB4  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2319   001BB8  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  2320   001BBC  0E38               	movlw	56
  2321   001BBE  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2322   001BC0  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2323   001BC4                     
  2324                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 46:         _delay((unsigned long)((150)*(4000000UL/40
      +                          00000.0)));
  2325   001BC4  0E32               	movlw	50
  2326   001BC6                     u6547:
  2327   001BC6  2EE8               	decfsz	wreg,f,c
  2328   001BC8  D7FE               	bra	u6547
  2329   001BCA  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2330   001BCE  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  2331   001BD2  0E38               	movlw	56
  2332   001BD4  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2333   001BD6  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2334   001BDA  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2335   001BDE  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  2336   001BE2  0E01               	movlw	1
  2337   001BE4  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2338   001BE6  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2339   001BEA  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2340   001BEE  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  2341   001BF2  0E02               	movlw	2
  2342   001BF4  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2343   001BF6  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2344   001BFA  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2345   001BFE  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  2346   001C02  0E06               	movlw	6
  2347   001C04  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2348   001C06  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2349   001C0A  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2350   001C0E  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  2351   001C12  0E0C               	movlw	12
  2352   001C14  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2353   001C16  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2354   001C1A  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2355   001C1E  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  2356   001C22  0E28               	movlw	40
  2357   001C24  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2358   001C26  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2359   001C2A                     
  2360                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 54:         ret = lcd_4bit_send_command(lcd, 0x80);
  2361   001C2A  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2362   001C2E  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  2363   001C32  0E80               	movlw	128
  2364   001C34  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  2365   001C36  EC25  F015         	call	_lcd_4bit_send_command	;wreg free
  2366   001C3A  6E24               	movwf	lcd_4bit_intialize@ret^0,c
  2367   001C3C                     l6060:
  2368                           
  2369                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 56:     return ret;
  2370   001C3C  5024               	movf	lcd_4bit_intialize@ret^0,w,c
  2371   001C3E  0012               	return		;funcret
  2372   001C40                     __end_of_lcd_4bit_intialize:
  2373                           	callstack 0
  2374                           
  2375 ;; *************** function _lcd_4bit_send_command *****************
  2376 ;; Defined at:
  2377 ;;		line 67 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  lcd             2   26[COMRAM] PTR const struct .
  2380 ;;		 -> lcd_1(6), 
  2381 ;;  command         1   28[COMRAM] unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  ret             1   29[COMRAM] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      unsigned char 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2393 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;Total ram usage:        4 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; Hardware stack levels required when called: 6
  2400 ;; This function calls:
  2401 ;;		_gpio_pin_write_logic
  2402 ;;		_lcd_4bit_send_enable_signal
  2403 ;;		_lcd_send_4bits
  2404 ;; This function is called by:
  2405 ;;		_lcd_4bit_intialize
  2406 ;;		_lcd_4bit_set_cursor
  2407 ;;		_main
  2408 ;;		_lcd_4bit_send_custom_char
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text7
  2413   002A4A                     __ptext7:
  2414                           	callstack 0
  2415   002A4A                     _lcd_4bit_send_command:
  2416                           	callstack 22
  2417   002A4A                     
  2418                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:     if(((void*)0) == lcd){
  2419   002A4A  501B               	movf	lcd_4bit_send_command@lcd^0,w,c
  2420   002A4C  101C               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  2421   002A4E  A4D8               	btfss	status,2,c
  2422   002A50  EF2C  F015         	goto	u3801
  2423   002A54  EF2E  F015         	goto	u3800
  2424   002A58                     u3801:
  2425   002A58  EF32  F015         	goto	l5692
  2426   002A5C                     u3800:
  2427   002A5C                     
  2428                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = (Std_ReturnType)0x00;
  2429   002A5C  0E00               	movlw	0
  2430   002A5E  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  2431                           
  2432                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:     }
  2433   002A60  EF5C  F015         	goto	l5694
  2434   002A64                     l5692:
  2435                           
  2436                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 75:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  2437   002A64  C01B  F00D         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2438   002A68  C01C  F00E         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  2439   002A6C  0E00               	movlw	0
  2440   002A6E  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  2441   002A70  ECB6  F00E         	call	_gpio_pin_write_logic	;wreg free
  2442   002A74  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  2443                           
  2444                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 77:         ret = lcd_send_4bits(lcd, command >> 4);
  2445   002A76  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2446   002A7A  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  2447   002A7E  381D               	swapf	lcd_4bit_send_command@command^0,w,c
  2448   002A80  0B0F               	andlw	15
  2449   002A82  6E19               	movwf	lcd_send_4bits@_data_command^0,c
  2450   002A84  EC94  F015         	call	_lcd_send_4bits	;wreg free
  2451   002A88  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  2452                           
  2453                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 79:         ret = lcd_4bit_send_enable_signal(lcd);
  2454   002A8A  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2455   002A8E  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  2456   002A92  EC03  F017         	call	_lcd_4bit_send_enable_signal	;wreg free
  2457   002A96  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  2458                           
  2459                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 81:         ret = lcd_send_4bits(lcd, command);
  2460   002A98  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2461   002A9C  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  2462   002AA0  C01D  F019         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  2463   002AA4  EC94  F015         	call	_lcd_send_4bits	;wreg free
  2464   002AA8  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  2465                           
  2466                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 83:         ret = lcd_4bit_send_enable_signal(lcd);
  2467   002AAA  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2468   002AAE  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  2469   002AB2  EC03  F017         	call	_lcd_4bit_send_enable_signal	;wreg free
  2470   002AB6  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  2471   002AB8                     l5694:
  2472                           
  2473                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 85:     return ret;
  2474   002AB8  501E               	movf	lcd_4bit_send_command@ret^0,w,c
  2475   002ABA  0012               	return		;funcret
  2476   002ABC                     __end_of_lcd_4bit_send_command:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _lcd_send_4bits *****************
  2480 ;; Defined at:
  2481 ;;		line 500 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  lcd             2   22[COMRAM] PTR const struct .
  2484 ;;		 -> lcd_1(6), 
  2485 ;;  _data_comman    1   24[COMRAM] unsigned char 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  ret             1   25[COMRAM] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      unsigned char 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2497 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;Total ram usage:        4 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 5
  2504 ;; This function calls:
  2505 ;;		_gpio_pin_write_logic
  2506 ;; This function is called by:
  2507 ;;		_lcd_4bit_send_command
  2508 ;;		_lcd_4bit_send_char_data
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text8
  2513   002B28                     __ptext8:
  2514                           	callstack 0
  2515   002B28                     _lcd_send_4bits:
  2516                           	callstack 22
  2517   002B28  0E02               	movlw	2
  2518   002B2A  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  2519   002B2C  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2520   002B2E  0E00               	movlw	0
  2521   002B30  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2522   002B32  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2523   002B34  5019               	movf	lcd_send_4bits@_data_command^0,w,c
  2524   002B36  0B01               	andlw	1
  2525   002B38  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  2526   002B3A  ECB6  F00E         	call	_gpio_pin_write_logic	;wreg free
  2527   002B3E  0E03               	movlw	3
  2528   002B40  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  2529   002B42  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2530   002B44  0E00               	movlw	0
  2531   002B46  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2532   002B48  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2533   002B4A  90D8               	bcf	status,0,c
  2534   002B4C  3019               	rrcf	lcd_send_4bits@_data_command^0,w,c
  2535   002B4E  0B01               	andlw	1
  2536   002B50  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  2537   002B52  ECB6  F00E         	call	_gpio_pin_write_logic	;wreg free
  2538   002B56  0E04               	movlw	4
  2539   002B58  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  2540   002B5A  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2541   002B5C  0E00               	movlw	0
  2542   002B5E  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2543   002B60  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2544   002B62  4019               	rrncf	lcd_send_4bits@_data_command^0,w,c
  2545   002B64  42E8               	rrncf	wreg,f,c
  2546   002B66  0B3F               	andlw	63
  2547   002B68  0B01               	andlw	1
  2548   002B6A  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  2549   002B6C  ECB6  F00E         	call	_gpio_pin_write_logic	;wreg free
  2550   002B70                     
  2551                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 505:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  2552   002B70  0E05               	movlw	5
  2553   002B72  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  2554   002B74  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2555   002B76  0E00               	movlw	0
  2556   002B78  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2557   002B7A  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2558   002B7C  3819               	swapf	lcd_send_4bits@_data_command^0,w,c
  2559   002B7E  46E8               	rlncf	wreg,f,c
  2560   002B80  0B1F               	andlw	31
  2561   002B82  0B01               	andlw	1
  2562   002B84  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  2563   002B86  ECB6  F00E         	call	_gpio_pin_write_logic	;wreg free
  2564   002B8A  6E1A               	movwf	lcd_send_4bits@ret^0,c
  2565                           
  2566                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 506:     return ret;
  2567   002B8C  501A               	movf	lcd_send_4bits@ret^0,w,c
  2568   002B8E  0012               	return		;funcret
  2569   002B90                     __end_of_lcd_send_4bits:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2573 ;; Defined at:
  2574 ;;		line 516 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  lcd             2   22[COMRAM] PTR const struct .
  2577 ;;		 -> lcd_1(6), 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  ret             1   24[COMRAM] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      unsigned char 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;Total ram usage:        3 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 5
  2596 ;; This function calls:
  2597 ;;		_gpio_pin_write_logic
  2598 ;; This function is called by:
  2599 ;;		_lcd_4bit_send_command
  2600 ;;		_lcd_4bit_send_char_data
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text9
  2605   002E06                     __ptext9:
  2606                           	callstack 0
  2607   002E06                     _lcd_4bit_send_enable_signal:
  2608                           	callstack 22
  2609   002E06  0E01               	movlw	1
  2610   002E08  2417               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2611   002E0A  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2612   002E0C  0E00               	movlw	0
  2613   002E0E  2018               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  2614   002E10  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2615   002E12  0E01               	movlw	1
  2616   002E14  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  2617   002E16  ECB6  F00E         	call	_gpio_pin_write_logic	;wreg free
  2618   002E1A                     
  2619                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 519:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  2620   002E1A  D000               	nop2		;2 cycle nop
  2621   002E1C  D000               	nop2		;2 cycle nop
  2622   002E1E  F000               	nop	
  2623   002E20                     
  2624                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 520:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  2625   002E20  0E01               	movlw	1
  2626   002E22  2417               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2627   002E24  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2628   002E26  0E00               	movlw	0
  2629   002E28  2018               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  2630   002E2A  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2631   002E2C  0E00               	movlw	0
  2632   002E2E  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  2633   002E30  ECB6  F00E         	call	_gpio_pin_write_logic	;wreg free
  2634   002E34  6E19               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2635                           
  2636                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 521:     return ret;
  2637   002E36  5019               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  2638   002E38  0012               	return		;funcret
  2639   002E3A                     __end_of_lcd_4bit_send_enable_signal:
  2640                           	callstack 0
  2641                           
  2642 ;; *************** function _convert_uint16_to_string *****************
  2643 ;; Defined at:
  2644 ;;		line 439 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  value           2    0[BANK1 ] unsigned short 
  2647 ;;  str             2    2[BANK1 ] PTR unsigned char 
  2648 ;;		 -> adc_res_4_txt(6), adc_res_3_txt(6), adc_res_2_txt(6), adc_res_1_txt(6), 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  Temp_String     6    4[BANK1 ] unsigned char [6]
  2651 ;;  DataCounter     1   11[BANK1 ] unsigned char 
  2652 ;;  ret             1   10[BANK1 ] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      unsigned char 
  2655 ;; Registers used:
  2656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:       12 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 12
  2669 ;; This function calls:
  2670 ;;		_memset
  2671 ;;		_sprintf
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text10
  2678   002348                     __ptext10:
  2679                           	callstack 0
  2680   002348                     _convert_uint16_to_string:
  2681                           	callstack 18
  2682   002348                     
  2683                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 440:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2684   002348  0E01               	movlw	1
  2685   00234A  0101               	movlb	1	; () banked
  2686   00234C  6F30               	movwf	convert_uint16_to_string@ret& (0+255),b
  2687   00234E                     
  2688                           ; BSR set to: 1
  2689                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 441:     uint8 Temp_String[6] = {0};
  2690   00234E  EE21  F02A         	lfsr	2,convert_uint16_to_string@Temp_String
  2691   002352  0E05               	movlw	5
  2692   002354                     u6321:
  2693   002354  6ADE               	clrf	postinc2,c
  2694   002356  06E8               	decf	wreg,f,c
  2695   002358  E2FD               	bc	u6321
  2696   00235A                     
  2697                           ; BSR set to: 1
  2698                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 442:     uint8 DataCounter = 0;
  2699   00235A  0E00               	movlw	0
  2700   00235C  6F31               	movwf	convert_uint16_to_string@DataCounter& (0+255),b
  2701   00235E                     
  2702                           ; BSR set to: 1
  2703                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 443:     if(((void*)0) == str){
  2704   00235E  5128               	movf	convert_uint16_to_string@str& (0+255),w,b
  2705   002360  1129               	iorwf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2706   002362  A4D8               	btfss	status,2,c
  2707   002364  EFB6  F011         	goto	u6331
  2708   002368  EFB8  F011         	goto	u6330
  2709   00236C                     u6331:
  2710   00236C  EFBC  F011         	goto	l7882
  2711   002370                     u6330:
  2712   002370                     
  2713                           ; BSR set to: 1
  2714                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 444:         ret = (Std_ReturnType)0x00;
  2715   002370  0E00               	movlw	0
  2716   002372  6F30               	movwf	convert_uint16_to_string@ret& (0+255),b
  2717                           
  2718                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 445:     }
  2719   002374  EF00  F012         	goto	l7894
  2720   002378                     l7882:
  2721                           
  2722                           ; BSR set to: 1
  2723                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 447:         memset(str, ' ', 5);
  2724   002378  C128  F00D         	movff	convert_uint16_to_string@str,memset@dest
  2725   00237C  C129  F00E         	movff	convert_uint16_to_string@str+1,memset@dest+1
  2726   002380  0E00               	movlw	0
  2727   002382  6E10               	movwf	(memset@c+1)^0,c
  2728   002384  0E20               	movlw	32
  2729   002386  6E0F               	movwf	memset@c^0,c
  2730   002388  0E00               	movlw	0
  2731   00238A  6E12               	movwf	(memset@n+1)^0,c
  2732   00238C  0E05               	movlw	5
  2733   00238E  6E11               	movwf	memset@n^0,c
  2734   002390  EC2D  F00C         	call	_memset	;wreg free
  2735   002394                     
  2736                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 448:         str[5] = '\0';
  2737   002394  0101               	movlb	1	; () banked
  2738   002396  EE20 F005          	lfsr	2,5
  2739   00239A  5128               	movf	convert_uint16_to_string@str& (0+255),w,b
  2740   00239C  26D9               	addwf	fsr2l,f,c
  2741   00239E  5129               	movf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2742   0023A0  22DA               	addwfc	fsr2h,f,c
  2743   0023A2  6ADF               	clrf	indf2,c
  2744   0023A4                     
  2745                           ; BSR set to: 1
  2746                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 449:         sprintf((char *)Temp_String, "%i", value)
      +                          ;
  2747   0023A4  0E2A               	movlw	low convert_uint16_to_string@Temp_String
  2748   0023A6  6E4B               	movwf	sprintf@s^0,c
  2749   0023A8  0E01               	movlw	high convert_uint16_to_string@Temp_String
  2750   0023AA  6E4C               	movwf	(sprintf@s+1)^0,c
  2751   0023AC  0E3B               	movlw	low STR_1
  2752   0023AE  6E4D               	movwf	sprintf@fmt^0,c
  2753   0023B0  0E10               	movlw	high STR_1
  2754   0023B2  6E4E               	movwf	(sprintf@fmt+1)^0,c
  2755   0023B4  C126  F04F         	movff	convert_uint16_to_string@value,?_sprintf+4
  2756   0023B8  C127  F050         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  2757   0023BC  ECF0  F015         	call	_sprintf	;wreg free
  2758                           
  2759                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 450:         while(Temp_String[DataCounter] != '\0'){
  2760   0023C0  EFF1  F011         	goto	l7892
  2761   0023C4                     l7888:
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 451:             str[DataCounter] = Temp_String[DataCo
      +                          unter];
  2765   0023C4  0E2A               	movlw	low convert_uint16_to_string@Temp_String
  2766   0023C6  2531               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2767   0023C8  6ED9               	movwf	fsr2l,c
  2768   0023CA  6ADA               	clrf	fsr2h,c
  2769   0023CC  0E01               	movlw	high convert_uint16_to_string@Temp_String
  2770   0023CE  22DA               	addwfc	fsr2h,f,c
  2771   0023D0  5131               	movf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2772   0023D2  2528               	addwf	convert_uint16_to_string@str& (0+255),w,b
  2773   0023D4  6EE1               	movwf	fsr1l,c
  2774   0023D6  0E00               	movlw	0
  2775   0023D8  2129               	addwfc	(convert_uint16_to_string@str+1)& (0+255),w,b
  2776   0023DA  6EE2               	movwf	fsr1h,c
  2777   0023DC  CFDF FFE7          	movff	indf2,indf1
  2778   0023E0                     
  2779                           ; BSR set to: 1
  2780                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 452:             DataCounter++;
  2781   0023E0  2B31               	incf	convert_uint16_to_string@DataCounter& (0+255),f,b
  2782   0023E2                     l7892:
  2783                           
  2784                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 450:         while(Temp_String[DataCounter] != '\0'){
  2785   0023E2  0E2A               	movlw	low convert_uint16_to_string@Temp_String
  2786   0023E4  0101               	movlb	1	; () banked
  2787   0023E6  2531               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2788   0023E8  6ED9               	movwf	fsr2l,c
  2789   0023EA  6ADA               	clrf	fsr2h,c
  2790   0023EC  0E01               	movlw	high convert_uint16_to_string@Temp_String
  2791   0023EE  22DA               	addwfc	fsr2h,f,c
  2792   0023F0  50DF               	movf	indf2,w,c
  2793   0023F2  A4D8               	btfss	status,2,c
  2794   0023F4  EFFE  F011         	goto	u6341
  2795   0023F8  EF00  F012         	goto	u6340
  2796   0023FC                     u6341:
  2797   0023FC  EFE2  F011         	goto	l7888
  2798   002400                     u6340:
  2799   002400                     l7894:
  2800                           
  2801                           ; BSR set to: 1
  2802                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 455:     return ret;
  2803   002400  5130               	movf	convert_uint16_to_string@ret& (0+255),w,b
  2804   002402                     
  2805                           ; BSR set to: 1
  2806   002402  0012               	return		;funcret
  2807   002404                     __end_of_convert_uint16_to_string:
  2808                           	callstack 0
  2809                           
  2810 ;; *************** function _sprintf *****************
  2811 ;; Defined at:
  2812 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  s               2   74[COMRAM] PTR unsigned char 
  2815 ;;		 -> convert_uint16_to_string@Temp_String(6), 
  2816 ;;  fmt             2   76[COMRAM] PTR const unsigned char 
  2817 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  f              12   84[COMRAM] struct _IO_FILE
  2820 ;;  ap              2   82[COMRAM] PTR void [1]
  2821 ;;		 -> ?_sprintf(2), 
  2822 ;;  ret             2    0        int 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  2   74[COMRAM] int 
  2825 ;; Registers used:
  2826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:       22 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 11
  2839 ;; This function calls:
  2840 ;;		_vfprintf
  2841 ;; This function is called by:
  2842 ;;		_convert_uint16_to_string
  2843 ;;		_convert_uint8_to_string
  2844 ;;		_convert_uint32_to_string
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text11
  2849   002BE0                     __ptext11:
  2850                           	callstack 0
  2851   002BE0                     _sprintf:
  2852                           	callstack 18
  2853   002BE0  0E4F               	movlw	low (?_sprintf+4)
  2854   002BE2  6E53               	movwf	sprintf@ap^0,c
  2855   002BE4  0E00               	movlw	high (?_sprintf+4)
  2856   002BE6  6E54               	movwf	(sprintf@ap+1)^0,c
  2857   002BE8  C04B  F055         	movff	sprintf@s,sprintf@f
  2858   002BEC  C04C  F056         	movff	sprintf@s+1,sprintf@f+1
  2859   002BF0  0E00               	movlw	0
  2860   002BF2  6E59               	movwf	(sprintf@f+4)^0,c
  2861   002BF4  0E00               	movlw	0
  2862   002BF6  6E58               	movwf	(sprintf@f+3)^0,c
  2863   002BF8  0E00               	movlw	0
  2864   002BFA  6E60               	movwf	(sprintf@f+11)^0,c
  2865   002BFC  0E00               	movlw	0
  2866   002BFE  6E5F               	movwf	(sprintf@f+10)^0,c
  2867   002C00  0E55               	movlw	low sprintf@f
  2868   002C02  6E43               	movwf	vfprintf@fp^0,c
  2869   002C04  0E00               	movlw	high sprintf@f
  2870   002C06  6E44               	movwf	(vfprintf@fp+1)^0,c
  2871   002C08  C04D  F045         	movff	sprintf@fmt,vfprintf@fmt
  2872   002C0C  C04E  F046         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2873   002C10  0E53               	movlw	low sprintf@ap
  2874   002C12  6E47               	movwf	vfprintf@ap^0,c
  2875   002C14  0E00               	movlw	high sprintf@ap
  2876   002C16  6E48               	movwf	(vfprintf@ap+1)^0,c
  2877   002C18  ECC8  F015         	call	_vfprintf	;wreg free
  2878   002C1C  5058               	movf	(sprintf@f+3)^0,w,c
  2879   002C1E  244B               	addwf	sprintf@s^0,w,c
  2880   002C20  6ED9               	movwf	fsr2l,c
  2881   002C22  5059               	movf	(sprintf@f+4)^0,w,c
  2882   002C24  204C               	addwfc	(sprintf@s+1)^0,w,c
  2883   002C26  6EDA               	movwf	fsr2h,c
  2884   002C28  6ADF               	clrf	indf2,c
  2885   002C2A  0012               	return		;funcret
  2886   002C2C                     __end_of_sprintf:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _vfprintf *****************
  2890 ;; Defined at:
  2891 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2894 ;;		 -> sprintf@f(12), 
  2895 ;;  fmt             2   68[COMRAM] PTR const unsigned char 
  2896 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2897 ;;  ap              2   70[COMRAM] PTR PTR void 
  2898 ;;		 -> sprintf@ap(2), 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  cfmt            2   72[COMRAM] PTR unsigned char 
  2901 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  2   66[COMRAM] int 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2911 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;Total ram usage:        8 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 10
  2918 ;; This function calls:
  2919 ;;		_vfpfcnvrt
  2920 ;; This function is called by:
  2921 ;;		_sprintf
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text12
  2926   002B90                     __ptext12:
  2927                           	callstack 0
  2928   002B90                     _vfprintf:
  2929                           	callstack 18
  2930   002B90                     
  2931                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2932   002B90  C045  F049         	movff	vfprintf@fmt,vfprintf@cfmt
  2933   002B94  C046  F04A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2936   002B98  EFDC  F015         	goto	l7822
  2937   002B9C                     l7820:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2940   002B9C  C043  F035         	movff	vfprintf@fp,vfpfcnvrt@fp
  2941   002BA0  C044  F036         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2942   002BA4  0E49               	movlw	low vfprintf@cfmt
  2943   002BA6  6E37               	movwf	vfpfcnvrt@fmt^0,c
  2944   002BA8  0E00               	movlw	high vfprintf@cfmt
  2945   002BAA  6E38               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2946   002BAC  C047  F039         	movff	vfprintf@ap,vfpfcnvrt@ap
  2947   002BB0  C048  F03A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2948   002BB4  EC20  F00E         	call	_vfpfcnvrt	;wreg free
  2949   002BB8                     l7822:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2952   002BB8  C049  FFF6         	movff	vfprintf@cfmt,tblptrl
  2953   002BBC  C04A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2954   002BC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2955   002BC0  6AF8               	clrf	tblptru,c
  2956   002BC2                     	endif
  2957   002BC2                     	if	0	;tblptru may be non-zero
  2958   002BC2                     	endif
  2959   002BC2  0008               	tblrd		*
  2960   002BC4  50F5               	movf	tablat,w,c
  2961   002BC6  0900               	iorlw	0
  2962   002BC8  A4D8               	btfss	status,2,c
  2963   002BCA  EFE9  F015         	goto	u6261
  2964   002BCE  EFEB  F015         	goto	u6260
  2965   002BD2                     u6261:
  2966   002BD2  EFCE  F015         	goto	l7820
  2967   002BD6                     u6260:
  2968   002BD6                     
  2969                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2970   002BD6  0E00               	movlw	0
  2971   002BD8  6E44               	movwf	(?_vfprintf+1)^0,c
  2972   002BDA  0E00               	movlw	0
  2973   002BDC  6E43               	movwf	?_vfprintf^0,c
  2974   002BDE  0012               	return		;funcret
  2975   002BE0                     __end_of_vfprintf:
  2976                           	callstack 0
  2977                           
  2978 ;; *************** function _vfpfcnvrt *****************
  2979 ;; Defined at:
  2980 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  fp              2   52[COMRAM] PTR struct _IO_FILE
  2983 ;;		 -> sprintf@f(12), 
  2984 ;;  fmt             2   54[COMRAM] PTR PTR unsigned char 
  2985 ;;		 -> vfprintf@cfmt(2), 
  2986 ;;  ap              2   56[COMRAM] PTR PTR void 
  2987 ;;		 -> sprintf@ap(2), 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  convarg         4   60[COMRAM] struct .
  2990 ;;  cp              2   64[COMRAM] PTR unsigned char 
  2991 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2992 ;;  i               2    0        int 
  2993 ;;  done            2    0        int 
  2994 ;;  c               1    0        unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3004 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;Total ram usage:       14 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 9
  3011 ;; This function calls:
  3012 ;;		_dtoa
  3013 ;;		_fputc
  3014 ;; This function is called by:
  3015 ;;		_vfprintf
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text13
  3020   001C40                     __ptext13:
  3021                           	callstack 0
  3022   001C40                     _vfpfcnvrt:
  3023                           	callstack 18
  3024   001C40                     
  3025                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  3026   001C40  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3027   001C44  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3028   001C48  CFDE FFF6          	movff	postinc2,tblptrl
  3029   001C4C  CFDD FFF7          	movff	postdec2,tblptrh
  3030   001C50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3031   001C50  6AF8               	clrf	tblptru,c
  3032   001C52                     	endif
  3033   001C52                     	if	0	;tblptru may be non-zero
  3034   001C52                     	endif
  3035   001C52  0008               	tblrd		*
  3036   001C54  50F5               	movf	tablat,w,c
  3037   001C56  0A25               	xorlw	37
  3038   001C58  A4D8               	btfss	status,2,c
  3039   001C5A  EF31  F00E         	goto	u6231
  3040   001C5E  EF33  F00E         	goto	u6230
  3041   001C62                     u6231:
  3042   001C62  EFA0  F00E         	goto	l7812
  3043   001C66                     u6230:
  3044   001C66                     
  3045                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  3046   001C66  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3047   001C6A  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3048   001C6E  2ADE               	incf	postinc2,f,c
  3049   001C70  0E00               	movlw	0
  3050   001C72  22DD               	addwfc	postdec2,f,c
  3051   001C74                     
  3052                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  3053   001C74  0E00               	movlw	0
  3054   001C76  0100               	movlb	0	; () banked
  3055   001C78  6F81               	movwf	(_width+1)& (0+255),b
  3056   001C7A  0E00               	movlw	0
  3057   001C7C  6F80               	movwf	_width& (0+255),b
  3058   001C7E  C080  F0B0         	movff	_width,_flags
  3059   001C82                     
  3060                           ; BSR set to: 0
  3061                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  3062   001C82  6982               	setf	_prec& (0+255),b
  3063   001C84  6983               	setf	(_prec+1)& (0+255),b
  3064   001C86                     
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  3067   001C86  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3068   001C8A  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3069   001C8E  CFDE F041          	movff	postinc2,vfpfcnvrt@cp
  3070   001C92  CFDD F042          	movff	postdec2,vfpfcnvrt@cp+1
  3071   001C96                     
  3072                           ; BSR set to: 0
  3073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3074   001C96  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3075   001C9A  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3076   001C9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3077   001C9E  6AF8               	clrf	tblptru,c
  3078   001CA0                     	endif
  3079   001CA0                     	if	0	;tblptru may be non-zero
  3080   001CA0                     	endif
  3081   001CA0  0008               	tblrd		*
  3082   001CA2  50F5               	movf	tablat,w,c
  3083   001CA4  0A64               	xorlw	100
  3084   001CA6  B4D8               	btfsc	status,2,c
  3085   001CA8  EF58  F00E         	goto	u6241
  3086   001CAC  EF5A  F00E         	goto	u6240
  3087   001CB0                     u6241:
  3088   001CB0  EF69  F00E         	goto	l7802
  3089   001CB4                     u6240:
  3090   001CB4                     
  3091                           ; BSR set to: 0
  3092   001CB4  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3093   001CB8  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3094   001CBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3095   001CBC  6AF8               	clrf	tblptru,c
  3096   001CBE                     	endif
  3097   001CBE                     	if	0	;tblptru may be non-zero
  3098   001CBE                     	endif
  3099   001CBE  0008               	tblrd		*
  3100   001CC0  50F5               	movf	tablat,w,c
  3101   001CC2  0A69               	xorlw	105
  3102   001CC4  A4D8               	btfss	status,2,c
  3103   001CC6  EF67  F00E         	goto	u6251
  3104   001CCA  EF69  F00E         	goto	u6250
  3105   001CCE                     u6251:
  3106   001CCE  EF97  F00E         	goto	l7808
  3107   001CD2                     u6250:
  3108   001CD2                     l7802:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3112   001CD2  C039  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3113   001CD6  C03A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3114   001CDA  CFDF F03B          	movff	indf2,??_vfpfcnvrt
  3115   001CDE  0E02               	movlw	2
  3116   001CE0  26DE               	addwf	postinc2,f,c
  3117   001CE2  CFDF F03C          	movff	indf2,??_vfpfcnvrt+1
  3118   001CE6  0E00               	movlw	0
  3119   001CE8  22DD               	addwfc	postdec2,f,c
  3120   001CEA  C03B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3121   001CEE  C03C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3122   001CF2  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg
  3123   001CF6  CFDD F03E          	movff	postdec2,vfpfcnvrt@convarg+1
  3124                           
  3125                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  3126   001CFA  0E01               	movlw	1
  3127   001CFC  2441               	addwf	vfpfcnvrt@cp^0,w,c
  3128   001CFE  6E3B               	movwf	??_vfpfcnvrt^0,c
  3129   001D00  0E00               	movlw	0
  3130   001D02  2042               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3131   001D04  6E3C               	movwf	(??_vfpfcnvrt+1)^0,c
  3132   001D06  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3133   001D0A  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3134   001D0E  C03B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3135   001D12  C03C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3136   001D16                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3139   001D16  C035  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  3140   001D1A  C036  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3141   001D1E  C03D  F02A         	movff	vfpfcnvrt@convarg,dtoa@d
  3142   001D22  C03E  F02B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3143   001D26  EC62  F00B         	call	_dtoa	;wreg free
  3144   001D2A  EFB5  F00E         	goto	l2424
  3145   001D2E                     l7808:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  3148   001D2E  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3149   001D32  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3150   001D36  2ADE               	incf	postinc2,f,c
  3151   001D38  0E00               	movlw	0
  3152   001D3A  22DD               	addwfc	postdec2,f,c
  3153   001D3C  EFB5  F00E         	goto	l2424
  3154   001D40                     l7812:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  3157   001D40  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3158   001D44  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3159   001D48  CFDE FFF6          	movff	postinc2,tblptrl
  3160   001D4C  CFDD FFF7          	movff	postdec2,tblptrh
  3161   001D50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3162   001D50  6AF8               	clrf	tblptru,c
  3163   001D52                     	endif
  3164   001D52                     	if	0	;tblptru may be non-zero
  3165   001D52                     	endif
  3166   001D52  0008               	tblrd		*
  3167   001D54  50F5               	movf	tablat,w,c
  3168   001D56  6E0D               	movwf	fputc@c^0,c
  3169   001D58  6A0E               	clrf	(fputc@c+1)^0,c
  3170   001D5A  C035  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  3171   001D5E  C036  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3172   001D62  ECB8  F00F         	call	_fputc	;wreg free
  3173   001D66  EF97  F00E         	goto	l7808
  3174   001D6A                     l2424:
  3175   001D6A  0012               	return		;funcret
  3176   001D6C                     __end_of_vfpfcnvrt:
  3177                           	callstack 0
  3178                           
  3179 ;; *************** function _dtoa *****************
  3180 ;; Defined at:
  3181 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  3184 ;;		 -> sprintf@f(12), 
  3185 ;;  d               2   41[COMRAM] int 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  i               2   50[COMRAM] int 
  3188 ;;  w               2   47[COMRAM] int 
  3189 ;;  p               2   45[COMRAM] int 
  3190 ;;  s               1   49[COMRAM] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;Total ram usage:       13 bytes
  3205 ;; Hardware stack levels used: 1
  3206 ;; Hardware stack levels required when called: 8
  3207 ;; This function calls:
  3208 ;;		___awdiv
  3209 ;;		___awmod
  3210 ;;		_abs
  3211 ;;		_pad
  3212 ;; This function is called by:
  3213 ;;		_vfpfcnvrt
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text14
  3218   0016C4                     __ptext14:
  3219                           	callstack 0
  3220   0016C4                     _dtoa:
  3221                           	callstack 18
  3222   0016C4                     
  3223                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  3224   0016C4  BE2B               	btfsc	(dtoa@d+1)^0,7,c
  3225   0016C6  EF67  F00B         	goto	u6131
  3226   0016CA  EF6A  F00B         	goto	u6130
  3227   0016CE                     u6131:
  3228   0016CE  0E01               	movlw	1
  3229   0016D0  EF6B  F00B         	goto	u6140
  3230   0016D4                     u6130:
  3231   0016D4  0E00               	movlw	0
  3232   0016D6                     u6140:
  3233   0016D6  6E32               	movwf	dtoa@s^0,c
  3234   0016D8                     
  3235                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  3236   0016D8  5032               	movf	dtoa@s^0,w,c
  3237   0016DA  B4D8               	btfsc	status,2,c
  3238   0016DC  EF72  F00B         	goto	u6151
  3239   0016E0  EF74  F00B         	goto	u6150
  3240   0016E4                     u6151:
  3241   0016E4  EF78  F00B         	goto	l7744
  3242   0016E8                     u6150:
  3243   0016E8                     
  3244                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  3245   0016E8  6C2A               	negf	dtoa@d^0,c
  3246   0016EA  1E2B               	comf	(dtoa@d+1)^0,f,c
  3247   0016EC  B0D8               	btfsc	status,0,c
  3248   0016EE  2A2B               	incf	(dtoa@d+1)^0,f,c
  3249   0016F0                     l7744:
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  3252   0016F0  0100               	movlb	0	; () banked
  3253   0016F2  BF83               	btfsc	(_prec+1)& (0+255),7,b
  3254   0016F4  EF80  F00B         	goto	u6160
  3255   0016F8  EF7E  F00B         	goto	u6161
  3256   0016FC                     u6161:
  3257   0016FC  EF86  F00B         	goto	l2403
  3258   001700                     u6160:
  3259   001700                     
  3260                           ; BSR set to: 0
  3261   001700  0E00               	movlw	0
  3262   001702  6E2F               	movwf	(dtoa@p+1)^0,c
  3263   001704  0E01               	movlw	1
  3264   001706  6E2E               	movwf	dtoa@p^0,c
  3265   001708  EF8A  F00B         	goto	l2405
  3266   00170C                     l2403:
  3267                           
  3268                           ; BSR set to: 0
  3269   00170C  C082  F02E         	movff	_prec,dtoa@p
  3270   001710  C083  F02F         	movff	_prec+1,dtoa@p+1
  3271   001714                     l2405:
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  3275   001714  C080  F030         	movff	_width,dtoa@w
  3276   001718  C081  F031         	movff	_width+1,dtoa@w+1
  3277   00171C                     
  3278                           ; BSR set to: 0
  3279                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  3280   00171C  5032               	movf	dtoa@s^0,w,c
  3281   00171E  B4D8               	btfsc	status,2,c
  3282   001720  EF94  F00B         	goto	u6171
  3283   001724  EF96  F00B         	goto	u6170
  3284   001728                     u6171:
  3285   001728  EFAD  F00B         	goto	l2406
  3286   00172C                     u6170:
  3287   00172C                     
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  3290   00172C  0630               	decf	dtoa@w^0,f,c
  3291   00172E  A0D8               	btfss	status,0,c
  3292   001730  0631               	decf	(dtoa@w+1)^0,f,c
  3293   001732                     
  3294                           ; BSR set to: 0
  3295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  3296   001732  5032               	movf	dtoa@s^0,w,c
  3297   001734  A4D8               	btfss	status,2,c
  3298   001736  EF9F  F00B         	goto	u6181
  3299   00173A  EFA1  F00B         	goto	u6180
  3300   00173E                     u6181:
  3301   00173E  EFA7  F00B         	goto	l7756
  3302   001742                     u6180:
  3303   001742                     
  3304                           ; BSR set to: 0
  3305   001742  0E00               	movlw	0
  3306   001744  6E2D               	movwf	(_dtoa$4588+1)^0,c
  3307   001746  0E2B               	movlw	43
  3308   001748  6E2C               	movwf	_dtoa$4588^0,c
  3309   00174A  EFAB  F00B         	goto	l7758
  3310   00174E                     l7756:
  3311                           
  3312                           ; BSR set to: 0
  3313   00174E  0E00               	movlw	0
  3314   001750  6E2D               	movwf	(_dtoa$4588+1)^0,c
  3315   001752  0E2D               	movlw	45
  3316   001754  6E2C               	movwf	_dtoa$4588^0,c
  3317   001756                     l7758:
  3318                           
  3319                           ; BSR set to: 0
  3320   001756  C02C  F032         	movff	_dtoa$4588,dtoa@s
  3321   00175A                     l2406:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  3325   00175A  0E00               	movlw	0
  3326   00175C  6E34               	movwf	(dtoa@i+1)^0,c
  3327   00175E  0E1F               	movlw	31
  3328   001760  6E33               	movwf	dtoa@i^0,c
  3329   001762                     
  3330                           ; BSR set to: 0
  3331                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  3332   001762  0E00               	movlw	0
  3333   001764  0101               	movlb	1	; () banked
  3334   001766  6F25               	movwf	(_dbuf+31)& (0+255),b
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3337   001768  EFE6  F00B         	goto	l7772
  3338   00176C                     l7762:
  3339                           
  3340                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  3341   00176C  0633               	decf	dtoa@i^0,f,c
  3342   00176E  A0D8               	btfss	status,0,c
  3343   001770  0634               	decf	(dtoa@i+1)^0,f,c
  3344   001772                     
  3345                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3346   001772  0E06               	movlw	low _dbuf
  3347   001774  2433               	addwf	dtoa@i^0,w,c
  3348   001776  6ED9               	movwf	fsr2l,c
  3349   001778  0E01               	movlw	high _dbuf
  3350   00177A  2034               	addwfc	(dtoa@i+1)^0,w,c
  3351   00177C  6EDA               	movwf	fsr2h,c
  3352   00177E  C02A  F00D         	movff	dtoa@d,___awmod@dividend
  3353   001782  C02B  F00E         	movff	dtoa@d+1,___awmod@dividend+1
  3354   001786  0E00               	movlw	0
  3355   001788  6E10               	movwf	(___awmod@divisor+1)^0,c
  3356   00178A  0E0A               	movlw	10
  3357   00178C  6E0F               	movwf	___awmod@divisor^0,c
  3358   00178E  ECB9  F012         	call	___awmod	;wreg free
  3359   001792  C00D  F013         	movff	?___awmod,abs@a
  3360   001796  C00E  F014         	movff	?___awmod+1,abs@a+1
  3361   00179A  ECC6  F016         	call	_abs	;wreg free
  3362   00179E  5013               	movf	?_abs^0,w,c
  3363   0017A0  0F30               	addlw	48
  3364   0017A2  6EDF               	movwf	indf2,c
  3365   0017A4                     
  3366                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  3367   0017A4  062E               	decf	dtoa@p^0,f,c
  3368   0017A6  A0D8               	btfss	status,0,c
  3369   0017A8  062F               	decf	(dtoa@p+1)^0,f,c
  3370   0017AA                     
  3371                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  3372   0017AA  0630               	decf	dtoa@w^0,f,c
  3373   0017AC  A0D8               	btfss	status,0,c
  3374   0017AE  0631               	decf	(dtoa@w+1)^0,f,c
  3375   0017B0                     
  3376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3377   0017B0  C02A  F00D         	movff	dtoa@d,___awdiv@dividend
  3378   0017B4  C02B  F00E         	movff	dtoa@d+1,___awdiv@dividend+1
  3379   0017B8  0E00               	movlw	0
  3380   0017BA  6E10               	movwf	(___awdiv@divisor+1)^0,c
  3381   0017BC  0E0A               	movlw	10
  3382   0017BE  6E0F               	movwf	___awdiv@divisor^0,c
  3383   0017C0  EC80  F010         	call	___awdiv	;wreg free
  3384   0017C4  C00D  F02A         	movff	?___awdiv,dtoa@d
  3385   0017C8  C00E  F02B         	movff	?___awdiv+1,dtoa@d+1
  3386   0017CC                     l7772:
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3389   0017CC  BE34               	btfsc	(dtoa@i+1)^0,7,c
  3390   0017CE  EFF1  F00B         	goto	u6191
  3391   0017D2  5034               	movf	(dtoa@i+1)^0,w,c
  3392   0017D4  E108               	bnz	u6190
  3393   0017D6  0433               	decf	dtoa@i^0,w,c
  3394   0017D8  A0D8               	btfss	status,0,c
  3395   0017DA  EFF1  F00B         	goto	u6191
  3396   0017DE  EFF3  F00B         	goto	u6190
  3397   0017E2                     u6191:
  3398   0017E2  EF09  F00C         	goto	l7778
  3399   0017E6                     u6190:
  3400   0017E6  502A               	movf	dtoa@d^0,w,c
  3401   0017E8  102B               	iorwf	(dtoa@d+1)^0,w,c
  3402   0017EA  A4D8               	btfss	status,2,c
  3403   0017EC  EFFA  F00B         	goto	u6201
  3404   0017F0  EFFC  F00B         	goto	u6200
  3405   0017F4                     u6201:
  3406   0017F4  EFB6  F00B         	goto	l7762
  3407   0017F8                     u6200:
  3408   0017F8  BE2F               	btfsc	(dtoa@p+1)^0,7,c
  3409   0017FA  EF09  F00C         	goto	u6210
  3410   0017FE  502F               	movf	(dtoa@p+1)^0,w,c
  3411   001800  E106               	bnz	u6211
  3412   001802  042E               	decf	dtoa@p^0,w,c
  3413   001804  B0D8               	btfsc	status,0,c
  3414   001806  EF07  F00C         	goto	u6211
  3415   00180A  EF09  F00C         	goto	u6210
  3416   00180E                     u6211:
  3417   00180E  EFB6  F00B         	goto	l7762
  3418   001812                     u6210:
  3419   001812                     l7778:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3422   001812  5032               	movf	dtoa@s^0,w,c
  3423   001814  B4D8               	btfsc	status,2,c
  3424   001816  EF0F  F00C         	goto	u6221
  3425   00181A  EF11  F00C         	goto	u6220
  3426   00181E                     u6221:
  3427   00181E  EF1C  F00C         	goto	l7784
  3428   001822                     u6220:
  3429   001822                     
  3430                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3431   001822  0633               	decf	dtoa@i^0,f,c
  3432   001824  A0D8               	btfss	status,0,c
  3433   001826  0634               	decf	(dtoa@i+1)^0,f,c
  3434   001828                     
  3435                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3436   001828  0E06               	movlw	low _dbuf
  3437   00182A  2433               	addwf	dtoa@i^0,w,c
  3438   00182C  6ED9               	movwf	fsr2l,c
  3439   00182E  0E01               	movlw	high _dbuf
  3440   001830  2034               	addwfc	(dtoa@i+1)^0,w,c
  3441   001832  6EDA               	movwf	fsr2h,c
  3442   001834  C032  FFDF         	movff	dtoa@s,indf2
  3443   001838                     l7784:
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3446   001838  C028  F01D         	movff	dtoa@fp,pad@fp
  3447   00183C  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  3448   001840  0E06               	movlw	low _dbuf
  3449   001842  2433               	addwf	dtoa@i^0,w,c
  3450   001844  6E1F               	movwf	pad@buf^0,c
  3451   001846  0E01               	movlw	high _dbuf
  3452   001848  2034               	addwfc	(dtoa@i+1)^0,w,c
  3453   00184A  6E20               	movwf	(pad@buf+1)^0,c
  3454   00184C  C030  F021         	movff	dtoa@w,pad@p
  3455   001850  C031  F022         	movff	dtoa@w+1,pad@p+1
  3456   001854  EC39  F014         	call	_pad	;wreg free
  3457   001858  0012               	return		;funcret
  3458   00185A                     __end_of_dtoa:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function _pad *****************
  3462 ;; Defined at:
  3463 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  3466 ;;		 -> sprintf@f(12), 
  3467 ;;  buf             2   30[COMRAM] PTR unsigned char 
  3468 ;;		 -> dbuf(32), 
  3469 ;;  p               2   32[COMRAM] int 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  w               2   37[COMRAM] int 
  3472 ;;  i               2   35[COMRAM] int 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3482 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;Total ram usage:       11 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 7
  3489 ;; This function calls:
  3490 ;;		_fputc
  3491 ;;		_fputs
  3492 ;; This function is called by:
  3493 ;;		_dtoa
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text15
  3498   002872                     __ptext15:
  3499                           	callstack 0
  3500   002872                     _pad:
  3501                           	callstack 18
  3502   002872                     
  3503                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3504   002872  BE22               	btfsc	(pad@p+1)^0,7,c
  3505   002874  EF3E  F014         	goto	u6101
  3506   002878  EF40  F014         	goto	u6100
  3507   00287C                     u6101:
  3508   00287C  EF46  F014         	goto	l7724
  3509   002880                     u6100:
  3510   002880  C021  F026         	movff	pad@p,pad@w
  3511   002884  C022  F027         	movff	pad@p+1,pad@w+1
  3512   002888  EF4A  F014         	goto	l2394
  3513   00288C                     l7724:
  3514   00288C  0E00               	movlw	0
  3515   00288E  6E27               	movwf	(pad@w+1)^0,c
  3516   002890  0E00               	movlw	0
  3517   002892  6E26               	movwf	pad@w^0,c
  3518   002894                     l2394:
  3519                           
  3520                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3521   002894  0E00               	movlw	0
  3522   002896  6E25               	movwf	(pad@i+1)^0,c
  3523   002898  0E00               	movlw	0
  3524   00289A  6E24               	movwf	pad@i^0,c
  3525                           
  3526                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3527   00289C  EF5C  F014         	goto	l7730
  3528   0028A0                     l7726:
  3529                           
  3530                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3531   0028A0  0E00               	movlw	0
  3532   0028A2  6E0E               	movwf	(fputc@c+1)^0,c
  3533   0028A4  0E20               	movlw	32
  3534   0028A6  6E0D               	movwf	fputc@c^0,c
  3535   0028A8  C01D  F00F         	movff	pad@fp,fputc@fp
  3536   0028AC  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  3537   0028B0  ECB8  F00F         	call	_fputc	;wreg free
  3538   0028B4                     
  3539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3540   0028B4  4A24               	infsnz	pad@i^0,f,c
  3541   0028B6  2A25               	incf	(pad@i+1)^0,f,c
  3542   0028B8                     l7730:
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3545   0028B8  5026               	movf	pad@w^0,w,c
  3546   0028BA  5C24               	subwf	pad@i^0,w,c
  3547   0028BC  5025               	movf	(pad@i+1)^0,w,c
  3548   0028BE  0A80               	xorlw	128
  3549   0028C0  6E23               	movwf	??_pad^0,c
  3550   0028C2  5027               	movf	(pad@w+1)^0,w,c
  3551   0028C4  0A80               	xorlw	128
  3552   0028C6  5823               	subwfb	??_pad^0,w,c
  3553   0028C8  A0D8               	btfss	status,0,c
  3554   0028CA  EF69  F014         	goto	u6111
  3555   0028CE  EF6B  F014         	goto	u6110
  3556   0028D2                     u6111:
  3557   0028D2  EF50  F014         	goto	l7726
  3558   0028D6                     u6110:
  3559   0028D6                     
  3560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3561   0028D6  C01F  F016         	movff	pad@buf,fputs@s
  3562   0028DA  C020  F017         	movff	pad@buf+1,fputs@s+1
  3563   0028DE  C01D  F018         	movff	pad@fp,fputs@fp
  3564   0028E2  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  3565   0028E6  EC60  F016         	call	_fputs	;wreg free
  3566   0028EA  0012               	return		;funcret
  3567   0028EC                     __end_of_pad:
  3568                           	callstack 0
  3569                           
  3570 ;; *************** function _fputs *****************
  3571 ;; Defined at:
  3572 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  s               2   21[COMRAM] PTR const unsigned char 
  3575 ;;		 -> dbuf(32), 
  3576 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  3577 ;;		 -> sprintf@f(12), 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  i               2   26[COMRAM] int 
  3580 ;;  c               1   25[COMRAM] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  2   21[COMRAM] int 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;Total ram usage:        7 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 6
  3597 ;; This function calls:
  3598 ;;		_fputc
  3599 ;; This function is called by:
  3600 ;;		_pad
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text16
  3605   002CC0                     __ptext16:
  3606                           	callstack 0
  3607   002CC0                     _fputs:
  3608                           	callstack 18
  3609   002CC0  0E00               	movlw	0
  3610   002CC2  6E1C               	movwf	(fputs@i+1)^0,c
  3611   002CC4  0E00               	movlw	0
  3612   002CC6  6E1B               	movwf	fputs@i^0,c
  3613   002CC8  EF71  F016         	goto	l7638
  3614   002CCC                     l7634:
  3615   002CCC  C01A  F00D         	movff	fputs@c,fputc@c
  3616   002CD0  6A0E               	clrf	(fputc@c+1)^0,c
  3617   002CD2  C018  F00F         	movff	fputs@fp,fputc@fp
  3618   002CD6  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  3619   002CDA  ECB8  F00F         	call	_fputc	;wreg free
  3620   002CDE  4A1B               	infsnz	fputs@i^0,f,c
  3621   002CE0  2A1C               	incf	(fputs@i+1)^0,f,c
  3622   002CE2                     l7638:
  3623   002CE2  501B               	movf	fputs@i^0,w,c
  3624   002CE4  2416               	addwf	fputs@s^0,w,c
  3625   002CE6  6ED9               	movwf	fsr2l,c
  3626   002CE8  501C               	movf	(fputs@i+1)^0,w,c
  3627   002CEA  2017               	addwfc	(fputs@s+1)^0,w,c
  3628   002CEC  6EDA               	movwf	fsr2h,c
  3629   002CEE  50DF               	movf	indf2,w,c
  3630   002CF0  6E1A               	movwf	fputs@c^0,c
  3631   002CF2  501A               	movf	fputs@c^0,w,c
  3632   002CF4  A4D8               	btfss	status,2,c
  3633   002CF6  EF7F  F016         	goto	u5971
  3634   002CFA  EF81  F016         	goto	u5970
  3635   002CFE                     u5971:
  3636   002CFE  EF66  F016         	goto	l7634
  3637   002D02                     u5970:
  3638   002D02  0012               	return		;funcret
  3639   002D04                     __end_of_fputs:
  3640                           	callstack 0
  3641                           
  3642 ;; *************** function _fputc *****************
  3643 ;; Defined at:
  3644 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  c               2   12[COMRAM] int 
  3647 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  3648 ;;		 -> sprintf@f(12), 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  2   12[COMRAM] int 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;Total ram usage:        9 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; Hardware stack levels required when called: 5
  3667 ;; This function calls:
  3668 ;;		_putch
  3669 ;; This function is called by:
  3670 ;;		_pad
  3671 ;;		_vfpfcnvrt
  3672 ;;		_fputs
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text17
  3677   001F70                     __ptext17:
  3678                           	callstack 0
  3679   001F70                     _fputc:
  3680                           	callstack 21
  3681   001F70  500F               	movf	fputc@fp^0,w,c
  3682   001F72  1010               	iorwf	(fputc@fp+1)^0,w,c
  3683   001F74  B4D8               	btfsc	status,2,c
  3684   001F76  EFBF  F00F         	goto	u5931
  3685   001F7A  EFC1  F00F         	goto	u5930
  3686   001F7E                     u5931:
  3687   001F7E  EFCA  F00F         	goto	l7622
  3688   001F82                     u5930:
  3689   001F82  500F               	movf	fputc@fp^0,w,c
  3690   001F84  1010               	iorwf	(fputc@fp+1)^0,w,c
  3691   001F86  A4D8               	btfss	status,2,c
  3692   001F88  EFC8  F00F         	goto	u5941
  3693   001F8C  EFCA  F00F         	goto	u5940
  3694   001F90                     u5941:
  3695   001F90  EFCF  F00F         	goto	l7624
  3696   001F94                     u5940:
  3697   001F94                     l7622:
  3698   001F94  500D               	movf	fputc@c^0,w,c
  3699   001F96  ECB7  F017         	call	_putch
  3700   001F9A  EF1C  F010         	goto	l2449
  3701   001F9E                     l7624:
  3702   001F9E  EE20 F00A          	lfsr	2,10
  3703   001FA2  500F               	movf	fputc@fp^0,w,c
  3704   001FA4  26D9               	addwf	fsr2l,f,c
  3705   001FA6  5010               	movf	(fputc@fp+1)^0,w,c
  3706   001FA8  22DA               	addwfc	fsr2h,f,c
  3707   001FAA  50DE               	movf	postinc2,w,c
  3708   001FAC  10DE               	iorwf	postinc2,w,c
  3709   001FAE  B4D8               	btfsc	status,2,c
  3710   001FB0  EFDC  F00F         	goto	u5951
  3711   001FB4  EFDE  F00F         	goto	u5950
  3712   001FB8                     u5951:
  3713   001FB8  EFF9  F00F         	goto	l7628
  3714   001FBC                     u5950:
  3715   001FBC  EE20 F00A          	lfsr	2,10
  3716   001FC0  500F               	movf	fputc@fp^0,w,c
  3717   001FC2  26D9               	addwf	fsr2l,f,c
  3718   001FC4  5010               	movf	(fputc@fp+1)^0,w,c
  3719   001FC6  22DA               	addwfc	fsr2h,f,c
  3720   001FC8  EE10 F003          	lfsr	1,3
  3721   001FCC  500F               	movf	fputc@fp^0,w,c
  3722   001FCE  26E1               	addwf	fsr1l,f,c
  3723   001FD0  5010               	movf	(fputc@fp+1)^0,w,c
  3724   001FD2  22E2               	addwfc	fsr1h,f,c
  3725   001FD4  50DE               	movf	postinc2,w,c
  3726   001FD6  5CE6               	subwf	postinc1,w,c
  3727   001FD8  50E6               	movf	postinc1,w,c
  3728   001FDA  0A80               	xorlw	128
  3729   001FDC  6E15               	movwf	(??_fputc+4)^0,c
  3730   001FDE  50DE               	movf	postinc2,w,c
  3731   001FE0  0A80               	xorlw	128
  3732   001FE2  5815               	subwfb	(??_fputc+4)^0,w,c
  3733   001FE4  B0D8               	btfsc	status,0,c
  3734   001FE6  EFF7  F00F         	goto	u5961
  3735   001FEA  EFF9  F00F         	goto	u5960
  3736   001FEE                     u5961:
  3737   001FEE  EF1C  F010         	goto	l2449
  3738   001FF2                     u5960:
  3739   001FF2                     l7628:
  3740   001FF2  EE20 F003          	lfsr	2,3
  3741   001FF6  500F               	movf	fputc@fp^0,w,c
  3742   001FF8  26D9               	addwf	fsr2l,f,c
  3743   001FFA  5010               	movf	(fputc@fp+1)^0,w,c
  3744   001FFC  22DA               	addwfc	fsr2h,f,c
  3745   001FFE  CFDE F011          	movff	postinc2,??_fputc
  3746   002002  CFDD F012          	movff	postdec2,??_fputc+1
  3747   002006  C00F  FFD9         	movff	fputc@fp,fsr2l
  3748   00200A  C010  FFDA         	movff	fputc@fp+1,fsr2h
  3749   00200E  CFDE F013          	movff	postinc2,??_fputc+2
  3750   002012  CFDD F014          	movff	postdec2,??_fputc+3
  3751   002016  5011               	movf	??_fputc^0,w,c
  3752   002018  2413               	addwf	(??_fputc+2)^0,w,c
  3753   00201A  6ED9               	movwf	fsr2l,c
  3754   00201C  5012               	movf	(??_fputc+1)^0,w,c
  3755   00201E  2014               	addwfc	(??_fputc+3)^0,w,c
  3756   002020  6EDA               	movwf	fsr2h,c
  3757   002022  C00D  FFDF         	movff	fputc@c,indf2
  3758   002026  EE20 F003          	lfsr	2,3
  3759   00202A  500F               	movf	fputc@fp^0,w,c
  3760   00202C  26D9               	addwf	fsr2l,f,c
  3761   00202E  5010               	movf	(fputc@fp+1)^0,w,c
  3762   002030  22DA               	addwfc	fsr2h,f,c
  3763   002032  2ADE               	incf	postinc2,f,c
  3764   002034  0E00               	movlw	0
  3765   002036  22DD               	addwfc	postdec2,f,c
  3766   002038                     l2449:
  3767   002038  0012               	return		;funcret
  3768   00203A                     __end_of_fputc:
  3769                           	callstack 0
  3770                           
  3771 ;; *************** function _putch *****************
  3772 ;; Defined at:
  3773 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  c               1    wreg     unsigned char 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  c               1    0[COMRAM] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;Total ram usage:        0 bytes
  3792 ;; Hardware stack levels used: 1
  3793 ;; Hardware stack levels required when called: 4
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_fputc
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text18
  3802   002F6E                     __ptext18:
  3803                           	callstack 0
  3804   002F6E                     _putch:
  3805                           	callstack 21
  3806   002F6E  0012               	return		;funcret
  3807   002F70                     __end_of_putch:
  3808                           	callstack 0
  3809                           
  3810 ;; *************** function _abs *****************
  3811 ;; Defined at:
  3812 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  a               2   18[COMRAM] int 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  2   18[COMRAM] int 
  3819 ;; Registers used:
  3820 ;;		wreg, status,2, status,0
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;Total ram usage:        4 bytes
  3831 ;; Hardware stack levels used: 1
  3832 ;; Hardware stack levels required when called: 4
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_dtoa
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text19
  3841   002D8C                     __ptext19:
  3842                           	callstack 0
  3843   002D8C                     _abs:
  3844                           	callstack 21
  3845   002D8C  BE14               	btfsc	(abs@a+1)^0,7,c
  3846   002D8E  EFD3  F016         	goto	u6120
  3847   002D92  5014               	movf	(abs@a+1)^0,w,c
  3848   002D94  E106               	bnz	u6121
  3849   002D96  0413               	decf	abs@a^0,w,c
  3850   002D98  B0D8               	btfsc	status,0,c
  3851   002D9A  EFD1  F016         	goto	u6121
  3852   002D9E  EFD3  F016         	goto	u6120
  3853   002DA2                     u6121:
  3854   002DA2  EFE1  F016         	goto	l2434
  3855   002DA6                     u6120:
  3856   002DA6  C013  F015         	movff	abs@a,??_abs
  3857   002DAA  C014  F016         	movff	abs@a+1,??_abs+1
  3858   002DAE  1E15               	comf	??_abs^0,f,c
  3859   002DB0  1E16               	comf	(??_abs+1)^0,f,c
  3860   002DB2  4A15               	infsnz	??_abs^0,f,c
  3861   002DB4  2A16               	incf	(??_abs+1)^0,f,c
  3862   002DB6  C015  F013         	movff	??_abs,?_abs
  3863   002DBA  C016  F014         	movff	??_abs+1,?_abs+1
  3864   002DBE  EFE5  F016         	goto	l2437
  3865   002DC2                     l2434:
  3866   002DC2  C013  F013         	movff	abs@a,?_abs
  3867   002DC6  C014  F014         	movff	abs@a+1,?_abs+1
  3868   002DCA                     l2437:
  3869   002DCA  0012               	return		;funcret
  3870   002DCC                     __end_of_abs:
  3871                           	callstack 0
  3872                           
  3873 ;; *************** function ___awmod *****************
  3874 ;; Defined at:
  3875 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  dividend        2   12[COMRAM] int 
  3878 ;;  divisor         2   14[COMRAM] int 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  sign            1   17[COMRAM] unsigned char 
  3881 ;;  counter         1   16[COMRAM] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  2   12[COMRAM] int 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3891 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;Total ram usage:        6 bytes
  3896 ;; Hardware stack levels used: 1
  3897 ;; Hardware stack levels required when called: 4
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_dtoa
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text20
  3906   002572                     __ptext20:
  3907                           	callstack 0
  3908   002572                     ___awmod:
  3909                           	callstack 21
  3910   002572  0E00               	movlw	0
  3911   002574  6E12               	movwf	___awmod@sign^0,c
  3912   002576  BE0E               	btfsc	(___awmod@dividend+1)^0,7,c
  3913   002578  EFC2  F012         	goto	u6040
  3914   00257C  EFC0  F012         	goto	u6041
  3915   002580                     u6041:
  3916   002580  EFC8  F012         	goto	l7692
  3917   002584                     u6040:
  3918   002584  6C0D               	negf	___awmod@dividend^0,c
  3919   002586  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3920   002588  B0D8               	btfsc	status,0,c
  3921   00258A  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3922   00258C  0E01               	movlw	1
  3923   00258E  6E12               	movwf	___awmod@sign^0,c
  3924   002590                     l7692:
  3925   002590  BE10               	btfsc	(___awmod@divisor+1)^0,7,c
  3926   002592  EFCF  F012         	goto	u6050
  3927   002596  EFCD  F012         	goto	u6051
  3928   00259A                     u6051:
  3929   00259A  EFD3  F012         	goto	l7696
  3930   00259E                     u6050:
  3931   00259E  6C0F               	negf	___awmod@divisor^0,c
  3932   0025A0  1E10               	comf	(___awmod@divisor+1)^0,f,c
  3933   0025A2  B0D8               	btfsc	status,0,c
  3934   0025A4  2A10               	incf	(___awmod@divisor+1)^0,f,c
  3935   0025A6                     l7696:
  3936   0025A6  500F               	movf	___awmod@divisor^0,w,c
  3937   0025A8  1010               	iorwf	(___awmod@divisor+1)^0,w,c
  3938   0025AA  B4D8               	btfsc	status,2,c
  3939   0025AC  EFDA  F012         	goto	u6061
  3940   0025B0  EFDC  F012         	goto	u6060
  3941   0025B4                     u6061:
  3942   0025B4  EF00  F013         	goto	l7712
  3943   0025B8                     u6060:
  3944   0025B8  0E01               	movlw	1
  3945   0025BA  6E11               	movwf	___awmod@counter^0,c
  3946   0025BC  EFE4  F012         	goto	l7702
  3947   0025C0                     l7700:
  3948   0025C0  90D8               	bcf	status,0,c
  3949   0025C2  360F               	rlcf	___awmod@divisor^0,f,c
  3950   0025C4  3610               	rlcf	(___awmod@divisor+1)^0,f,c
  3951   0025C6  2A11               	incf	___awmod@counter^0,f,c
  3952   0025C8                     l7702:
  3953   0025C8  AE10               	btfss	(___awmod@divisor+1)^0,7,c
  3954   0025CA  EFE9  F012         	goto	u6071
  3955   0025CE  EFEB  F012         	goto	u6070
  3956   0025D2                     u6071:
  3957   0025D2  EFE0  F012         	goto	l7700
  3958   0025D6                     u6070:
  3959   0025D6                     l7704:
  3960   0025D6  500F               	movf	___awmod@divisor^0,w,c
  3961   0025D8  5C0D               	subwf	___awmod@dividend^0,w,c
  3962   0025DA  5010               	movf	(___awmod@divisor+1)^0,w,c
  3963   0025DC  580E               	subwfb	(___awmod@dividend+1)^0,w,c
  3964   0025DE  A0D8               	btfss	status,0,c
  3965   0025E0  EFF4  F012         	goto	u6081
  3966   0025E4  EFF6  F012         	goto	u6080
  3967   0025E8                     u6081:
  3968   0025E8  EFFA  F012         	goto	l7708
  3969   0025EC                     u6080:
  3970   0025EC  500F               	movf	___awmod@divisor^0,w,c
  3971   0025EE  5E0D               	subwf	___awmod@dividend^0,f,c
  3972   0025F0  5010               	movf	(___awmod@divisor+1)^0,w,c
  3973   0025F2  5A0E               	subwfb	(___awmod@dividend+1)^0,f,c
  3974   0025F4                     l7708:
  3975   0025F4  90D8               	bcf	status,0,c
  3976   0025F6  3210               	rrcf	(___awmod@divisor+1)^0,f,c
  3977   0025F8  320F               	rrcf	___awmod@divisor^0,f,c
  3978   0025FA  2E11               	decfsz	___awmod@counter^0,f,c
  3979   0025FC  EFEB  F012         	goto	l7704
  3980   002600                     l7712:
  3981   002600  5012               	movf	___awmod@sign^0,w,c
  3982   002602  B4D8               	btfsc	status,2,c
  3983   002604  EF06  F013         	goto	u6091
  3984   002608  EF08  F013         	goto	u6090
  3985   00260C                     u6091:
  3986   00260C  EF0C  F013         	goto	l7716
  3987   002610                     u6090:
  3988   002610  6C0D               	negf	___awmod@dividend^0,c
  3989   002612  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3990   002614  B0D8               	btfsc	status,0,c
  3991   002616  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3992   002618                     l7716:
  3993   002618  C00D  F00D         	movff	___awmod@dividend,?___awmod
  3994   00261C  C00E  F00E         	movff	___awmod@dividend+1,?___awmod+1
  3995   002620  0012               	return		;funcret
  3996   002622                     __end_of___awmod:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function ___awdiv *****************
  4000 ;; Defined at:
  4001 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  dividend        2   12[COMRAM] int 
  4004 ;;  divisor         2   14[COMRAM] int 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  quotient        2   18[COMRAM] int 
  4007 ;;  sign            1   17[COMRAM] unsigned char 
  4008 ;;  counter         1   16[COMRAM] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  2   12[COMRAM] int 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;Total ram usage:        8 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 4
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_dtoa
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text21
  4033   002100                     __ptext21:
  4034                           	callstack 0
  4035   002100                     ___awdiv:
  4036                           	callstack 21
  4037   002100  0E00               	movlw	0
  4038   002102  6E12               	movwf	___awdiv@sign^0,c
  4039   002104  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  4040   002106  EF89  F010         	goto	u5980
  4041   00210A  EF87  F010         	goto	u5981
  4042   00210E                     u5981:
  4043   00210E  EF8F  F010         	goto	l7648
  4044   002112                     u5980:
  4045   002112  6C0F               	negf	___awdiv@divisor^0,c
  4046   002114  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  4047   002116  B0D8               	btfsc	status,0,c
  4048   002118  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  4049   00211A  0E01               	movlw	1
  4050   00211C  6E12               	movwf	___awdiv@sign^0,c
  4051   00211E                     l7648:
  4052   00211E  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  4053   002120  EF96  F010         	goto	u5990
  4054   002124  EF94  F010         	goto	u5991
  4055   002128                     u5991:
  4056   002128  EF9C  F010         	goto	l7654
  4057   00212C                     u5990:
  4058   00212C  6C0D               	negf	___awdiv@dividend^0,c
  4059   00212E  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  4060   002130  B0D8               	btfsc	status,0,c
  4061   002132  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  4062   002134  0E01               	movlw	1
  4063   002136  1A12               	xorwf	___awdiv@sign^0,f,c
  4064   002138                     l7654:
  4065   002138  0E00               	movlw	0
  4066   00213A  6E14               	movwf	(___awdiv@quotient+1)^0,c
  4067   00213C  0E00               	movlw	0
  4068   00213E  6E13               	movwf	___awdiv@quotient^0,c
  4069   002140  500F               	movf	___awdiv@divisor^0,w,c
  4070   002142  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  4071   002144  B4D8               	btfsc	status,2,c
  4072   002146  EFA7  F010         	goto	u6001
  4073   00214A  EFA9  F010         	goto	u6000
  4074   00214E                     u6001:
  4075   00214E  EFD1  F010         	goto	l7676
  4076   002152                     u6000:
  4077   002152  0E01               	movlw	1
  4078   002154  6E11               	movwf	___awdiv@counter^0,c
  4079   002156  EFB1  F010         	goto	l7662
  4080   00215A                     l7660:
  4081   00215A  90D8               	bcf	status,0,c
  4082   00215C  360F               	rlcf	___awdiv@divisor^0,f,c
  4083   00215E  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  4084   002160  2A11               	incf	___awdiv@counter^0,f,c
  4085   002162                     l7662:
  4086   002162  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  4087   002164  EFB6  F010         	goto	u6011
  4088   002168  EFB8  F010         	goto	u6010
  4089   00216C                     u6011:
  4090   00216C  EFAD  F010         	goto	l7660
  4091   002170                     u6010:
  4092   002170                     l7664:
  4093   002170  90D8               	bcf	status,0,c
  4094   002172  3613               	rlcf	___awdiv@quotient^0,f,c
  4095   002174  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  4096   002176  500F               	movf	___awdiv@divisor^0,w,c
  4097   002178  5C0D               	subwf	___awdiv@dividend^0,w,c
  4098   00217A  5010               	movf	(___awdiv@divisor+1)^0,w,c
  4099   00217C  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  4100   00217E  A0D8               	btfss	status,0,c
  4101   002180  EFC4  F010         	goto	u6021
  4102   002184  EFC6  F010         	goto	u6020
  4103   002188                     u6021:
  4104   002188  EFCB  F010         	goto	l7672
  4105   00218C                     u6020:
  4106   00218C  500F               	movf	___awdiv@divisor^0,w,c
  4107   00218E  5E0D               	subwf	___awdiv@dividend^0,f,c
  4108   002190  5010               	movf	(___awdiv@divisor+1)^0,w,c
  4109   002192  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  4110   002194  8013               	bsf	___awdiv@quotient^0,0,c
  4111   002196                     l7672:
  4112   002196  90D8               	bcf	status,0,c
  4113   002198  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  4114   00219A  320F               	rrcf	___awdiv@divisor^0,f,c
  4115   00219C  2E11               	decfsz	___awdiv@counter^0,f,c
  4116   00219E  EFB8  F010         	goto	l7664
  4117   0021A2                     l7676:
  4118   0021A2  5012               	movf	___awdiv@sign^0,w,c
  4119   0021A4  B4D8               	btfsc	status,2,c
  4120   0021A6  EFD7  F010         	goto	u6031
  4121   0021AA  EFD9  F010         	goto	u6030
  4122   0021AE                     u6031:
  4123   0021AE  EFDD  F010         	goto	l7680
  4124   0021B2                     u6030:
  4125   0021B2  6C13               	negf	___awdiv@quotient^0,c
  4126   0021B4  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  4127   0021B6  B0D8               	btfsc	status,0,c
  4128   0021B8  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  4129   0021BA                     l7680:
  4130   0021BA  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  4131   0021BE  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  4132   0021C2  0012               	return		;funcret
  4133   0021C4                     __end_of___awdiv:
  4134                           	callstack 0
  4135                           
  4136 ;; *************** function _memset *****************
  4137 ;; Defined at:
  4138 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  dest            2   12[COMRAM] PTR void 
  4141 ;;		 -> adc_res_4_txt(6), adc_res_3_txt(6), adc_res_2_txt(6), adc_res_1_txt(6), 
  4142 ;;  c               2   14[COMRAM] int 
  4143 ;;  n               2   16[COMRAM] unsigned int 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  s               2   22[COMRAM] PTR unsigned char 
  4146 ;;		 -> adc_res_4_txt(6), adc_res_3_txt(6), adc_res_2_txt(6), adc_res_1_txt(6), 
  4147 ;;  k               2   20[COMRAM] unsigned int 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2   12[COMRAM] PTR void 
  4150 ;; Registers used:
  4151 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4157 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;Total ram usage:       12 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; Hardware stack levels required when called: 4
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_convert_uint16_to_string
  4168 ;;		_convert_uint8_to_string
  4169 ;;		_convert_uint32_to_string
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text22
  4174   00185A                     __ptext22:
  4175                           	callstack 0
  4176   00185A                     _memset:
  4177                           	callstack 25
  4178   00185A  C00D  F017         	movff	memset@dest,memset@s
  4179   00185E  C00E  F018         	movff	memset@dest+1,memset@s+1
  4180   001862  5011               	movf	memset@n^0,w,c
  4181   001864  1012               	iorwf	(memset@n+1)^0,w,c
  4182   001866  A4D8               	btfss	status,2,c
  4183   001868  EF38  F00C         	goto	u6271
  4184   00186C  EF3A  F00C         	goto	u6270
  4185   001870                     u6271:
  4186   001870  EF3C  F00C         	goto	l7832
  4187   001874                     u6270:
  4188   001874  EFE7  F00C         	goto	l2359
  4189   001878                     l7832:
  4190   001878  C017  FFD9         	movff	memset@s,fsr2l
  4191   00187C  C018  FFDA         	movff	memset@s+1,fsr2h
  4192   001880  C00F  FFDF         	movff	memset@c,indf2
  4193   001884  5011               	movf	memset@n^0,w,c
  4194   001886  2417               	addwf	memset@s^0,w,c
  4195   001888  6E13               	movwf	??_memset^0,c
  4196   00188A  5012               	movf	(memset@n+1)^0,w,c
  4197   00188C  2018               	addwfc	(memset@s+1)^0,w,c
  4198   00188E  6E14               	movwf	(??_memset+1)^0,c
  4199   001890  0EFF               	movlw	255
  4200   001892  2413               	addwf	??_memset^0,w,c
  4201   001894  6ED9               	movwf	fsr2l,c
  4202   001896  0EFF               	movlw	255
  4203   001898  2014               	addwfc	(??_memset+1)^0,w,c
  4204   00189A  6EDA               	movwf	fsr2h,c
  4205   00189C  C00F  FFDF         	movff	memset@c,indf2
  4206   0018A0  5012               	movf	(memset@n+1)^0,w,c
  4207   0018A2  E107               	bnz	u6281
  4208   0018A4  0E03               	movlw	3
  4209   0018A6  5C11               	subwf	memset@n^0,w,c
  4210   0018A8  B0D8               	btfsc	status,0,c
  4211   0018AA  EF59  F00C         	goto	u6281
  4212   0018AE  EF5B  F00C         	goto	u6280
  4213   0018B2                     u6281:
  4214   0018B2  EF5D  F00C         	goto	l7838
  4215   0018B6                     u6280:
  4216   0018B6  EFE7  F00C         	goto	l2359
  4217   0018BA                     l7838:
  4218   0018BA  EE20 F001          	lfsr	2,1
  4219   0018BE  5017               	movf	memset@s^0,w,c
  4220   0018C0  26D9               	addwf	fsr2l,f,c
  4221   0018C2  5018               	movf	(memset@s+1)^0,w,c
  4222   0018C4  22DA               	addwfc	fsr2h,f,c
  4223   0018C6  C00F  FFDF         	movff	memset@c,indf2
  4224   0018CA  EE20 F002          	lfsr	2,2
  4225   0018CE  5017               	movf	memset@s^0,w,c
  4226   0018D0  26D9               	addwf	fsr2l,f,c
  4227   0018D2  5018               	movf	(memset@s+1)^0,w,c
  4228   0018D4  22DA               	addwfc	fsr2h,f,c
  4229   0018D6  C00F  FFDF         	movff	memset@c,indf2
  4230   0018DA  5011               	movf	memset@n^0,w,c
  4231   0018DC  2417               	addwf	memset@s^0,w,c
  4232   0018DE  6E13               	movwf	??_memset^0,c
  4233   0018E0  5012               	movf	(memset@n+1)^0,w,c
  4234   0018E2  2018               	addwfc	(memset@s+1)^0,w,c
  4235   0018E4  6E14               	movwf	(??_memset+1)^0,c
  4236   0018E6  0EFE               	movlw	254
  4237   0018E8  2413               	addwf	??_memset^0,w,c
  4238   0018EA  6ED9               	movwf	fsr2l,c
  4239   0018EC  0EFF               	movlw	255
  4240   0018EE  2014               	addwfc	(??_memset+1)^0,w,c
  4241   0018F0  6EDA               	movwf	fsr2h,c
  4242   0018F2  C00F  FFDF         	movff	memset@c,indf2
  4243   0018F6  5011               	movf	memset@n^0,w,c
  4244   0018F8  2417               	addwf	memset@s^0,w,c
  4245   0018FA  6E13               	movwf	??_memset^0,c
  4246   0018FC  5012               	movf	(memset@n+1)^0,w,c
  4247   0018FE  2018               	addwfc	(memset@s+1)^0,w,c
  4248   001900  6E14               	movwf	(??_memset+1)^0,c
  4249   001902  0EFD               	movlw	253
  4250   001904  2413               	addwf	??_memset^0,w,c
  4251   001906  6ED9               	movwf	fsr2l,c
  4252   001908  0EFF               	movlw	255
  4253   00190A  2014               	addwfc	(??_memset+1)^0,w,c
  4254   00190C  6EDA               	movwf	fsr2h,c
  4255   00190E  C00F  FFDF         	movff	memset@c,indf2
  4256   001912  5012               	movf	(memset@n+1)^0,w,c
  4257   001914  E107               	bnz	u6291
  4258   001916  0E07               	movlw	7
  4259   001918  5C11               	subwf	memset@n^0,w,c
  4260   00191A  B0D8               	btfsc	status,0,c
  4261   00191C  EF92  F00C         	goto	u6291
  4262   001920  EF94  F00C         	goto	u6290
  4263   001924                     u6291:
  4264   001924  EF96  F00C         	goto	l7844
  4265   001928                     u6290:
  4266   001928  EFE7  F00C         	goto	l2359
  4267   00192C                     l7844:
  4268   00192C  EE20 F003          	lfsr	2,3
  4269   001930  5017               	movf	memset@s^0,w,c
  4270   001932  26D9               	addwf	fsr2l,f,c
  4271   001934  5018               	movf	(memset@s+1)^0,w,c
  4272   001936  22DA               	addwfc	fsr2h,f,c
  4273   001938  C00F  FFDF         	movff	memset@c,indf2
  4274   00193C  5011               	movf	memset@n^0,w,c
  4275   00193E  2417               	addwf	memset@s^0,w,c
  4276   001940  6E13               	movwf	??_memset^0,c
  4277   001942  5012               	movf	(memset@n+1)^0,w,c
  4278   001944  2018               	addwfc	(memset@s+1)^0,w,c
  4279   001946  6E14               	movwf	(??_memset+1)^0,c
  4280   001948  0EFC               	movlw	252
  4281   00194A  2413               	addwf	??_memset^0,w,c
  4282   00194C  6ED9               	movwf	fsr2l,c
  4283   00194E  0EFF               	movlw	255
  4284   001950  2014               	addwfc	(??_memset+1)^0,w,c
  4285   001952  6EDA               	movwf	fsr2h,c
  4286   001954  C00F  FFDF         	movff	memset@c,indf2
  4287   001958  5012               	movf	(memset@n+1)^0,w,c
  4288   00195A  E107               	bnz	u6301
  4289   00195C  0E09               	movlw	9
  4290   00195E  5C11               	subwf	memset@n^0,w,c
  4291   001960  B0D8               	btfsc	status,0,c
  4292   001962  EFB5  F00C         	goto	u6301
  4293   001966  EFB7  F00C         	goto	u6300
  4294   00196A                     u6301:
  4295   00196A  EFB9  F00C         	goto	l7850
  4296   00196E                     u6300:
  4297   00196E  EFE7  F00C         	goto	l2359
  4298   001972                     l7850:
  4299   001972  C017  F013         	movff	memset@s,??_memset
  4300   001976  C018  F014         	movff	memset@s+1,??_memset+1
  4301   00197A  1E13               	comf	??_memset^0,f,c
  4302   00197C  1E14               	comf	(??_memset+1)^0,f,c
  4303   00197E  4A13               	infsnz	??_memset^0,f,c
  4304   001980  2A14               	incf	(??_memset+1)^0,f,c
  4305   001982  0E03               	movlw	3
  4306   001984  1413               	andwf	??_memset^0,w,c
  4307   001986  6E15               	movwf	memset@k^0,c
  4308   001988  6A16               	clrf	(memset@k+1)^0,c
  4309   00198A  5015               	movf	memset@k^0,w,c
  4310   00198C  2617               	addwf	memset@s^0,f,c
  4311   00198E  5016               	movf	(memset@k+1)^0,w,c
  4312   001990  2218               	addwfc	(memset@s+1)^0,f,c
  4313   001992  5015               	movf	memset@k^0,w,c
  4314   001994  5E11               	subwf	memset@n^0,f,c
  4315   001996  5016               	movf	(memset@k+1)^0,w,c
  4316   001998  5A12               	subwfb	(memset@n+1)^0,f,c
  4317   00199A  0EFC               	movlw	252
  4318   00199C  1611               	andwf	memset@n^0,f,c
  4319   00199E  0EFF               	movlw	255
  4320   0019A0  1612               	andwf	(memset@n+1)^0,f,c
  4321   0019A2  EFDE  F00C         	goto	l7858
  4322   0019A6                     l7852:
  4323   0019A6  C017  FFD9         	movff	memset@s,fsr2l
  4324   0019AA  C018  FFDA         	movff	memset@s+1,fsr2h
  4325   0019AE  C00F  FFDF         	movff	memset@c,indf2
  4326   0019B2  0611               	decf	memset@n^0,f,c
  4327   0019B4  A0D8               	btfss	status,0,c
  4328   0019B6  0612               	decf	(memset@n+1)^0,f,c
  4329   0019B8  4A17               	infsnz	memset@s^0,f,c
  4330   0019BA  2A18               	incf	(memset@s+1)^0,f,c
  4331   0019BC                     l7858:
  4332   0019BC  5011               	movf	memset@n^0,w,c
  4333   0019BE  1012               	iorwf	(memset@n+1)^0,w,c
  4334   0019C0  A4D8               	btfss	status,2,c
  4335   0019C2  EFE5  F00C         	goto	u6311
  4336   0019C6  EFE7  F00C         	goto	u6310
  4337   0019CA                     u6311:
  4338   0019CA  EFD3  F00C         	goto	l7852
  4339   0019CE                     u6310:
  4340   0019CE                     l2359:
  4341   0019CE  0012               	return		;funcret
  4342   0019D0                     __end_of_memset:
  4343                           	callstack 0
  4344                           
  4345 ;; *************** function _button_read_state *****************
  4346 ;; Defined at:
  4347 ;;		line 35 in file "ECU_Layer/button/ecu_button.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  btn             2   22[COMRAM] PTR const struct .
  4350 ;;		 -> btn_high1(3), btn_high(3), 
  4351 ;;  btn_state       2   24[COMRAM] PTR enum E3028
  4352 ;;		 -> btn_high1_con(1), btn_high_con(1), 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  Pin_Logic_St    1   28[COMRAM] enum E2968
  4355 ;;  ret             1   27[COMRAM] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      unsigned char 
  4358 ;; Registers used:
  4359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;Total ram usage:        7 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; Hardware stack levels required when called: 5
  4372 ;; This function calls:
  4373 ;;		_gpio_pin_read_logic
  4374 ;; This function is called by:
  4375 ;;		_main
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text23
  4380   00203A                     __ptext23:
  4381                           	callstack 0
  4382   00203A                     _button_read_state:
  4383                           	callstack 25
  4384   00203A                     
  4385                           ;ECU_Layer/button/ecu_button.c: 37:     logic_t Pin_Logic_Status = GPIO_LOW;
  4386   00203A  0E00               	movlw	0
  4387   00203C  6E1D               	movwf	button_read_state@Pin_Logic_Status^0,c
  4388   00203E                     
  4389                           ;ECU_Layer/button/ecu_button.c: 38:     if((((void*)0) == btn) || (((void*)0) == btn_sta
      +                          te)){
  4390   00203E  5017               	movf	button_read_state@btn^0,w,c
  4391   002040  1018               	iorwf	(button_read_state@btn+1)^0,w,c
  4392   002042  B4D8               	btfsc	status,2,c
  4393   002044  EF26  F010         	goto	u4131
  4394   002048  EF28  F010         	goto	u4130
  4395   00204C                     u4131:
  4396   00204C  EF31  F010         	goto	l5994
  4397   002050                     u4130:
  4398   002050  5019               	movf	button_read_state@btn_state^0,w,c
  4399   002052  101A               	iorwf	(button_read_state@btn_state+1)^0,w,c
  4400   002054  A4D8               	btfss	status,2,c
  4401   002056  EF2F  F010         	goto	u4141
  4402   00205A  EF31  F010         	goto	u4140
  4403   00205E                     u4141:
  4404   00205E  EF35  F010         	goto	l5996
  4405   002062                     u4140:
  4406   002062                     l5994:
  4407                           
  4408                           ;ECU_Layer/button/ecu_button.c: 39:         ret = (Std_ReturnType)0x00;
  4409   002062  0E00               	movlw	0
  4410   002064  6E1C               	movwf	button_read_state@ret^0,c
  4411                           
  4412                           ;ECU_Layer/button/ecu_button.c: 40:     }
  4413   002066  EF7E  F010         	goto	l29
  4414   00206A                     l5996:
  4415   00206A  C017  F00D         	movff	button_read_state@btn,gpio_pin_read_logic@_pin_config
  4416   00206E  C018  F00E         	movff	button_read_state@btn+1,gpio_pin_read_logic@_pin_config+1
  4417   002072  0E1D               	movlw	low button_read_state@Pin_Logic_Status
  4418   002074  6E0F               	movwf	gpio_pin_read_logic@logic^0,c
  4419   002076  0E00               	movlw	high button_read_state@Pin_Logic_Status
  4420   002078  6E10               	movwf	(gpio_pin_read_logic@logic+1)^0,c
  4421   00207A  EC02  F012         	call	_gpio_pin_read_logic	;wreg free
  4422   00207E                     
  4423                           ;ECU_Layer/button/ecu_button.c: 43:         if(BUTTON_ACTIVE_HIGH == btn->button_connect
      +                          ion){
  4424   00207E  EE20 F002          	lfsr	2,2
  4425   002082  5017               	movf	button_read_state@btn^0,w,c
  4426   002084  26D9               	addwf	fsr2l,f,c
  4427   002086  5018               	movf	(button_read_state@btn+1)^0,w,c
  4428   002088  22DA               	addwfc	fsr2h,f,c
  4429   00208A  50DF               	movf	indf2,w,c
  4430   00208C  A4D8               	btfss	status,2,c
  4431   00208E  EF4B  F010         	goto	u4151
  4432   002092  EF4D  F010         	goto	u4150
  4433   002096                     u4151:
  4434   002096  EF64  F010         	goto	l6006
  4435   00209A                     u4150:
  4436   00209A                     
  4437                           ;ECU_Layer/button/ecu_button.c: 44:             if(GPIO_HIGH == Pin_Logic_Status){
  4438   00209A  041D               	decf	button_read_state@Pin_Logic_Status^0,w,c
  4439   00209C  A4D8               	btfss	status,2,c
  4440   00209E  EF53  F010         	goto	u4161
  4441   0020A2  EF55  F010         	goto	u4160
  4442   0020A6                     u4161:
  4443   0020A6  EF5C  F010         	goto	l6004
  4444   0020AA                     u4160:
  4445   0020AA                     l6002:
  4446                           
  4447                           ;ECU_Layer/button/ecu_button.c: 45:                 *btn_state = BUTTON_PRESSED;
  4448   0020AA  C019  FFD9         	movff	button_read_state@btn_state,fsr2l
  4449   0020AE  C01A  FFDA         	movff	button_read_state@btn_state+1,fsr2h
  4450   0020B2  6ADF               	clrf	indf2,c
  4451                           
  4452                           ;ECU_Layer/button/ecu_button.c: 46:             }
  4453   0020B4  EF7C  F010         	goto	l6014
  4454   0020B8                     l6004:
  4455                           
  4456                           ;ECU_Layer/button/ecu_button.c: 48:                *btn_state = BUTTON_RELEASED;
  4457   0020B8  C019  FFD9         	movff	button_read_state@btn_state,fsr2l
  4458   0020BC  C01A  FFDA         	movff	button_read_state@btn_state+1,fsr2h
  4459   0020C0  0E01               	movlw	1
  4460   0020C2  6EDF               	movwf	indf2,c
  4461   0020C4  EF7C  F010         	goto	l6014
  4462   0020C8                     l6006:
  4463   0020C8  EE20 F002          	lfsr	2,2
  4464   0020CC  5017               	movf	button_read_state@btn^0,w,c
  4465   0020CE  26D9               	addwf	fsr2l,f,c
  4466   0020D0  5018               	movf	(button_read_state@btn+1)^0,w,c
  4467   0020D2  22DA               	addwfc	fsr2h,f,c
  4468   0020D4  04DE               	decf	postinc2,w,c
  4469   0020D6  A4D8               	btfss	status,2,c
  4470   0020D8  EF70  F010         	goto	u4171
  4471   0020DC  EF72  F010         	goto	u4170
  4472   0020E0                     u4171:
  4473   0020E0  EF7C  F010         	goto	l6014
  4474   0020E4                     u4170:
  4475   0020E4                     
  4476                           ;ECU_Layer/button/ecu_button.c: 52:             if(GPIO_HIGH == Pin_Logic_Status){
  4477   0020E4  041D               	decf	button_read_state@Pin_Logic_Status^0,w,c
  4478   0020E6  A4D8               	btfss	status,2,c
  4479   0020E8  EF78  F010         	goto	u4181
  4480   0020EC  EF7A  F010         	goto	u4180
  4481   0020F0                     u4181:
  4482   0020F0  EF55  F010         	goto	l6002
  4483   0020F4                     u4180:
  4484   0020F4  EF5C  F010         	goto	l6004
  4485   0020F8                     l6014:
  4486                           
  4487                           ;ECU_Layer/button/ecu_button.c: 60:         ret = (Std_ReturnType)0x01;
  4488   0020F8  0E01               	movlw	1
  4489   0020FA  6E1C               	movwf	button_read_state@ret^0,c
  4490   0020FC                     l29:
  4491                           
  4492                           ;ECU_Layer/button/ecu_button.c: 62:     return ret;
  4493   0020FC  501C               	movf	button_read_state@ret^0,w,c
  4494   0020FE  0012               	return		;funcret
  4495   002100                     __end_of_button_read_state:
  4496                           	callstack 0
  4497                           
  4498 ;; *************** function _gpio_pin_read_logic *****************
  4499 ;; Defined at:
  4500 ;;		line 107 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;  _pin_config     2   12[COMRAM] PTR const struct .
  4503 ;;		 -> btn_high1(3), btn_high(3), 
  4504 ;;  logic           2   14[COMRAM] PTR enum E2968
  4505 ;;		 -> keypad_read_switch@status_pin(1), button_read_state@Pin_Logic_Status(1), 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  ret             1   21[COMRAM] unsigned char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      unsigned char 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;Total ram usage:       10 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 4
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_button_read_state
  4528 ;;		_keypad_read_switch
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text24
  4533   002404                     __ptext24:
  4534                           	callstack 0
  4535   002404                     _gpio_pin_read_logic:
  4536                           	callstack 25
  4537   002404                     
  4538                           ;MCAL_Layer/GPIO/hal_gpio.c: 108:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4539   002404  0E01               	movlw	1
  4540   002406  6E16               	movwf	gpio_pin_read_logic@ret^0,c
  4541   002408                     
  4542                           ;MCAL_Layer/GPIO/hal_gpio.c: 109:     if(((void*)0) == _pin_config || ((void*)0) == logi
      +                          c || _pin_config->pin > 8 -1){
  4543   002408  500D               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  4544   00240A  100E               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
  4545   00240C  B4D8               	btfsc	status,2,c
  4546   00240E  EF0B  F012         	goto	u3881
  4547   002412  EF0D  F012         	goto	u3880
  4548   002416                     u3881:
  4549   002416  EF27  F012         	goto	l5786
  4550   00241A                     u3880:
  4551   00241A  500F               	movf	gpio_pin_read_logic@logic^0,w,c
  4552   00241C  1010               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
  4553   00241E  B4D8               	btfsc	status,2,c
  4554   002420  EF14  F012         	goto	u3891
  4555   002424  EF16  F012         	goto	u3890
  4556   002428                     u3891:
  4557   002428  EF27  F012         	goto	l5786
  4558   00242C                     u3890:
  4559   00242C  C00D  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  4560   002430  C00E  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  4561   002434  30DF               	rrcf	223,w,c
  4562   002436  32E8               	rrcf	wreg,f,c
  4563   002438  32E8               	rrcf	wreg,f,c
  4564   00243A  0B07               	andlw	7
  4565   00243C  6E11               	movwf	??_gpio_pin_read_logic^0,c
  4566   00243E  0E07               	movlw	7
  4567   002440  6411               	cpfsgt	??_gpio_pin_read_logic^0,c
  4568   002442  EF25  F012         	goto	u3901
  4569   002446  EF27  F012         	goto	u3900
  4570   00244A                     u3901:
  4571   00244A  EF2B  F012         	goto	l5788
  4572   00244E                     u3900:
  4573   00244E                     l5786:
  4574                           
  4575                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:         ret = (Std_ReturnType)0x00;
  4576   00244E  0E00               	movlw	0
  4577   002450  6E16               	movwf	gpio_pin_read_logic@ret^0,c
  4578                           
  4579                           ;MCAL_Layer/GPIO/hal_gpio.c: 111:     }
  4580   002452  EF5C  F012         	goto	l5790
  4581   002456                     l5788:
  4582                           
  4583                           ;MCAL_Layer/GPIO/hal_gpio.c: 113:         *logic = ((*port_registers[_pin_config->port] 
      +                          >> _pin_config->pin) & (uint8)1);
  4584   002456  C00D  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  4585   00245A  C00E  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  4586   00245E  30DF               	rrcf	223,w,c
  4587   002460  32E8               	rrcf	wreg,f,c
  4588   002462  32E8               	rrcf	wreg,f,c
  4589   002464  0B07               	andlw	7
  4590   002466  6E11               	movwf	??_gpio_pin_read_logic^0,c
  4591   002468  C00D  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  4592   00246C  C00E  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  4593   002470  50DF               	movf	223,w,c
  4594   002472  0B07               	andlw	7
  4595   002474  6E12               	movwf	(??_gpio_pin_read_logic+1)^0,c
  4596   002476  5012               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  4597   002478  0D02               	mullw	2
  4598   00247A  0E32               	movlw	low _port_registers
  4599   00247C  24F3               	addwf	243,w,c
  4600   00247E  6ED9               	movwf	fsr2l,c
  4601   002480  0E01               	movlw	high _port_registers
  4602   002482  20F4               	addwfc	prodh,w,c
  4603   002484  6EDA               	movwf	fsr2h,c
  4604   002486  CFDE F013          	movff	postinc2,??_gpio_pin_read_logic+2
  4605   00248A  CFDD F014          	movff	postdec2,??_gpio_pin_read_logic+3
  4606   00248E  C013  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  4607   002492  C014  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  4608   002496  50DF               	movf	indf2,w,c
  4609   002498  6E15               	movwf	(??_gpio_pin_read_logic+4)^0,c
  4610   00249A  2A11               	incf	??_gpio_pin_read_logic^0,f,c
  4611   00249C  EF52  F012         	goto	u3914
  4612   0024A0                     u3915:
  4613   0024A0  90D8               	bcf	status,0,c
  4614   0024A2  3215               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  4615   0024A4                     u3914:
  4616   0024A4  2E11               	decfsz	??_gpio_pin_read_logic^0,f,c
  4617   0024A6  EF50  F012         	goto	u3915
  4618   0024AA  5015               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  4619   0024AC  0B01               	andlw	1
  4620   0024AE  C00F  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
  4621   0024B2  C010  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
  4622   0024B6  6EDF               	movwf	indf2,c
  4623   0024B8                     l5790:
  4624                           
  4625                           ;MCAL_Layer/GPIO/hal_gpio.c: 115:     return ret;
  4626   0024B8  5016               	movf	gpio_pin_read_logic@ret^0,w,c
  4627   0024BA  0012               	return		;funcret
  4628   0024BC                     __end_of_gpio_pin_read_logic:
  4629                           	callstack 0
  4630                           
  4631 ;; *************** function _application_intialize *****************
  4632 ;; Defined at:
  4633 ;;		line 182 in file "application.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  ret             1    0        unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;Total ram usage:        0 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 7
  4654 ;; This function calls:
  4655 ;;		_button_initialize
  4656 ;;		_led_initialize
  4657 ;; This function is called by:
  4658 ;;		_main
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text25
  4663   002C2C                     __ptext25:
  4664                           	callstack 0
  4665   002C2C                     _application_intialize:
  4666                           	callstack 23
  4667   002C2C  0E6D               	movlw	low _led1
  4668   002C2E  6E1B               	movwf	led_initialize@led^0,c
  4669   002C30  0E00               	movlw	high _led1
  4670   002C32  6E1C               	movwf	(led_initialize@led+1)^0,c
  4671   002C34  ECFB  F013         	call	_led_initialize	;wreg free
  4672   002C38  0E6C               	movlw	low _led2
  4673   002C3A  6E1B               	movwf	led_initialize@led^0,c
  4674   002C3C  0E00               	movlw	high _led2
  4675   002C3E  6E1C               	movwf	(led_initialize@led+1)^0,c
  4676   002C40  ECFB  F013         	call	_led_initialize	;wreg free
  4677   002C44  0E6B               	movlw	low _led3
  4678   002C46  6E1B               	movwf	led_initialize@led^0,c
  4679   002C48  0E00               	movlw	high _led3
  4680   002C4A  6E1C               	movwf	(led_initialize@led+1)^0,c
  4681   002C4C  ECFB  F013         	call	_led_initialize	;wreg free
  4682   002C50  0E6A               	movlw	low _led4
  4683   002C52  6E1B               	movwf	led_initialize@led^0,c
  4684   002C54  0E00               	movlw	high _led4
  4685   002C56  6E1C               	movwf	(led_initialize@led+1)^0,c
  4686   002C58  ECFB  F013         	call	_led_initialize	;wreg free
  4687   002C5C  0EF7               	movlw	low _btn_high1
  4688   002C5E  6E16               	movwf	button_initialize@btn^0,c
  4689   002C60  0E00               	movlw	high _btn_high1
  4690   002C62  6E17               	movwf	(button_initialize@btn+1)^0,c
  4691   002C64  EC35  F017         	call	_button_initialize	;wreg free
  4692   002C68  0EFA               	movlw	low _btn_high
  4693   002C6A  6E16               	movwf	button_initialize@btn^0,c
  4694   002C6C  0E00               	movlw	high _btn_high
  4695   002C6E  6E17               	movwf	(button_initialize@btn+1)^0,c
  4696   002C70  EC35  F017         	call	_button_initialize	;wreg free
  4697   002C74  0012               	return		;funcret
  4698   002C76                     __end_of_application_intialize:
  4699                           	callstack 0
  4700                           
  4701 ;; *************** function _led_initialize *****************
  4702 ;; Defined at:
  4703 ;;		line 16 in file "ECU_Layer/LED/ecu_led.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  led             2   26[COMRAM] PTR const struct .
  4706 ;;		 -> led4(1), led2(1), led3(1), led1(1), 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  pin_obj         1   30[COMRAM] struct .
  4709 ;;  ret             1   29[COMRAM] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      unsigned char 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;Total ram usage:        5 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; Hardware stack levels required when called: 6
  4726 ;; This function calls:
  4727 ;;		_gpio_pin_intialize
  4728 ;; This function is called by:
  4729 ;;		_application_intialize
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text26
  4734   0027F6                     __ptext26:
  4735                           	callstack 0
  4736   0027F6                     _led_initialize:
  4737                           	callstack 23
  4738   0027F6                     
  4739                           ;ECU_Layer/LED/ecu_led.c: 17:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4740   0027F6  0E01               	movlw	1
  4741   0027F8  6E1E               	movwf	led_initialize@ret^0,c
  4742   0027FA                     
  4743                           ;ECU_Layer/LED/ecu_led.c: 18:     if(((void*)0) == led){
  4744   0027FA  501B               	movf	led_initialize@led^0,w,c
  4745   0027FC  101C               	iorwf	(led_initialize@led+1)^0,w,c
  4746   0027FE  A4D8               	btfss	status,2,c
  4747   002800  EF04  F014         	goto	u4011
  4748   002804  EF06  F014         	goto	u4010
  4749   002808                     u4011:
  4750   002808  EF0A  F014         	goto	l277
  4751   00280C                     u4010:
  4752   00280C                     
  4753                           ;ECU_Layer/LED/ecu_led.c: 19:         ret = (Std_ReturnType)0x00;
  4754   00280C  0E00               	movlw	0
  4755   00280E  6E1E               	movwf	led_initialize@ret^0,c
  4756                           
  4757                           ;ECU_Layer/LED/ecu_led.c: 20:     }
  4758   002810  EF37  F014         	goto	l5922
  4759   002814                     l277:
  4760                           
  4761                           ;ECU_Layer/LED/ecu_led.c: 22:         pin_config_t pin_obj = { .port = led->port_name, .
      +                          pin = led->pin,
  4762   002814  C072  F01F         	movff	led_initialize@F3048,led_initialize@pin_obj
  4763   002818  C01B  FFD9         	movff	led_initialize@led,fsr2l
  4764   00281C  C01C  FFDA         	movff	led_initialize@led+1,fsr2h
  4765   002820  50DF               	movf	223,w,c
  4766   002822  0B0F               	andlw	15
  4767   002824  6E1D               	movwf	??_led_initialize^0,c
  4768   002826  501F               	movf	led_initialize@pin_obj^0,w,c
  4769   002828  181D               	xorwf	??_led_initialize^0,w,c
  4770   00282A  0BF8               	andlw	-8
  4771   00282C  181D               	xorwf	??_led_initialize^0,w,c
  4772   00282E  6E1F               	movwf	led_initialize@pin_obj^0,c
  4773   002830  C01B  FFD9         	movff	led_initialize@led,fsr2l
  4774   002834  C01C  FFDA         	movff	led_initialize@led+1,fsr2h
  4775   002838  38DF               	swapf	223,w,c
  4776   00283A  0B07               	andlw	7
  4777   00283C  6E1D               	movwf	??_led_initialize^0,c
  4778   00283E  461D               	rlncf	??_led_initialize^0,f,c
  4779   002840  461D               	rlncf	??_led_initialize^0,f,c
  4780   002842  461D               	rlncf	??_led_initialize^0,f,c
  4781   002844  501F               	movf	led_initialize@pin_obj^0,w,c
  4782   002846  181D               	xorwf	??_led_initialize^0,w,c
  4783   002848  0BC7               	andlw	-57
  4784   00284A  181D               	xorwf	??_led_initialize^0,w,c
  4785   00284C  6E1F               	movwf	led_initialize@pin_obj^0,c
  4786   00284E  9C1F               	bcf	led_initialize@pin_obj^0,6,c
  4787   002850  C01B  FFD9         	movff	led_initialize@led,fsr2l
  4788   002854  C01C  FFDA         	movff	led_initialize@led+1,fsr2h
  4789   002858  AEDF               	btfss	indf2,7,c
  4790   00285A  D002               	bra	u4025
  4791   00285C  8E1F               	bsf	led_initialize@pin_obj^0,7,c
  4792   00285E  D001               	bra	u4027
  4793   002860                     u4025:
  4794   002860  9E1F               	bcf	led_initialize@pin_obj^0,7,c
  4795   002862                     u4027:
  4796   002862                     
  4797                           ;ECU_Layer/LED/ecu_led.c: 24:         gpio_pin_intialize(&pin_obj);
  4798   002862  0E1F               	movlw	low led_initialize@pin_obj
  4799   002864  6E17               	movwf	gpio_pin_intialize@_pin_config^0,c
  4800   002866  0E00               	movlw	high led_initialize@pin_obj
  4801   002868  6E18               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4802   00286A  EC5E  F015         	call	_gpio_pin_intialize	;wreg free
  4803   00286E                     l5922:
  4804                           
  4805                           ;ECU_Layer/LED/ecu_led.c: 26:     return ret;
  4806   00286E  501E               	movf	led_initialize@ret^0,w,c
  4807   002870  0012               	return		;funcret
  4808   002872                     __end_of_led_initialize:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function _gpio_pin_intialize *****************
  4812 ;; Defined at:
  4813 ;;		line 146 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  _pin_config     2   22[COMRAM] PTR const struct .
  4816 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  ret             1   25[COMRAM] unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      unsigned char 
  4821 ;; Registers used:
  4822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;Total ram usage:        4 bytes
  4833 ;; Hardware stack levels used: 1
  4834 ;; Hardware stack levels required when called: 5
  4835 ;; This function calls:
  4836 ;;		_gpio_pin_direction_intialize
  4837 ;;		_gpio_pin_write_logic
  4838 ;; This function is called by:
  4839 ;;		_lcd_4bit_intialize
  4840 ;;		_led_initialize
  4841 ;;		_seven_segement_intialize
  4842 ;;		_lcd_8bit_intialize
  4843 ;;		_dc_motor_initialize
  4844 ;;		_keypad_initialize
  4845 ;;		_relay_initialize
  4846 ;;		_CCP_Init
  4847 ;;		_spi_pins_configuration_for_master
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text27
  4852   002ABC                     __ptext27:
  4853                           	callstack 0
  4854   002ABC                     _gpio_pin_intialize:
  4855                           	callstack 24
  4856   002ABC                     
  4857                           ;MCAL_Layer/GPIO/hal_gpio.c: 148:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1){
  4858   002ABC  5017               	movf	gpio_pin_intialize@_pin_config^0,w,c
  4859   002ABE  1018               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  4860   002AC0  B4D8               	btfsc	status,2,c
  4861   002AC2  EF65  F015         	goto	u3781
  4862   002AC6  EF67  F015         	goto	u3780
  4863   002ACA                     u3781:
  4864   002ACA  EF78  F015         	goto	l5678
  4865   002ACE                     u3780:
  4866   002ACE  C017  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  4867   002AD2  C018  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  4868   002AD6  30DF               	rrcf	223,w,c
  4869   002AD8  32E8               	rrcf	wreg,f,c
  4870   002ADA  32E8               	rrcf	wreg,f,c
  4871   002ADC  0B07               	andlw	7
  4872   002ADE  6E19               	movwf	??_gpio_pin_intialize^0,c
  4873   002AE0  0E07               	movlw	7
  4874   002AE2  6419               	cpfsgt	??_gpio_pin_intialize^0,c
  4875   002AE4  EF76  F015         	goto	u3791
  4876   002AE8  EF78  F015         	goto	u3790
  4877   002AEC                     u3791:
  4878   002AEC  EF7C  F015         	goto	l5680
  4879   002AF0                     u3790:
  4880   002AF0                     l5678:
  4881                           
  4882                           ;MCAL_Layer/GPIO/hal_gpio.c: 149:         ret = (Std_ReturnType)0x00;
  4883   002AF0  0E00               	movlw	0
  4884   002AF2  6E1A               	movwf	gpio_pin_intialize@ret^0,c
  4885                           
  4886                           ;MCAL_Layer/GPIO/hal_gpio.c: 150:     }
  4887   002AF4  EF92  F015         	goto	l5682
  4888   002AF8                     l5680:
  4889                           
  4890                           ;MCAL_Layer/GPIO/hal_gpio.c: 152:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
  4891   002AF8  C017  F00D         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  4892   002AFC  C018  F00E         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  4893   002B00  ECE8  F00C         	call	_gpio_pin_direction_intialize	;wreg free
  4894   002B04  6E1A               	movwf	gpio_pin_intialize@ret^0,c
  4895                           
  4896                           ;MCAL_Layer/GPIO/hal_gpio.c: 153:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
  4897   002B06  C017  F00D         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  4898   002B0A  C018  F00E         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  4899   002B0E  C017  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  4900   002B12  C018  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  4901   002B16  0E00               	movlw	0
  4902   002B18  BEDF               	btfsc	indf2,7,c
  4903   002B1A  0E01               	movlw	1
  4904   002B1C  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4905   002B1E  ECB6  F00E         	call	_gpio_pin_write_logic	;wreg free
  4906   002B22  6E1A               	movwf	gpio_pin_intialize@ret^0,c
  4907   002B24                     l5682:
  4908                           
  4909                           ;MCAL_Layer/GPIO/hal_gpio.c: 155:     return ret;
  4910   002B24  501A               	movf	gpio_pin_intialize@ret^0,w,c
  4911   002B26  0012               	return		;funcret
  4912   002B28                     __end_of_gpio_pin_intialize:
  4913                           	callstack 0
  4914                           
  4915 ;; *************** function _gpio_pin_write_logic *****************
  4916 ;; Defined at:
  4917 ;;		line 78 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  _pin_config     2   12[COMRAM] PTR const struct .
  4920 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  4921 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  4922 ;;  logic           1   14[COMRAM] enum E2968
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  ret             1   21[COMRAM] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      unsigned char 
  4927 ;; Registers used:
  4928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4934 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;Total ram usage:       10 bytes
  4939 ;; Hardware stack levels used: 1
  4940 ;; Hardware stack levels required when called: 4
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_lcd_4bit_send_command
  4945 ;;		_lcd_4bit_send_char_data
  4946 ;;		_lcd_send_4bits
  4947 ;;		_lcd_4bit_send_enable_signal
  4948 ;;		_led_turn_on
  4949 ;;		_led_turn_off
  4950 ;;		_gpio_pin_intialize
  4951 ;;		_seven_segement_write_number
  4952 ;;		_lcd_8bit_send_command
  4953 ;;		_lcd_8bit_send_char_data
  4954 ;;		_lcd_8bit_send_enable_signal
  4955 ;;		_dc_motor_move_right
  4956 ;;		_dc_motor_move_left
  4957 ;;		_dc_motor_stop
  4958 ;;		_keypad_read_switch
  4959 ;;		_relay_turn_on
  4960 ;;		_relay_turn_off
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text28
  4965   001D6C                     __ptext28:
  4966                           	callstack 0
  4967   001D6C                     _gpio_pin_write_logic:
  4968                           	callstack 25
  4969   001D6C                     
  4970                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4971   001D6C  0E01               	movlw	1
  4972   001D6E  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  4973   001D70                     
  4974                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  4975   001D70  500D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4976   001D72  100E               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  4977   001D74  B4D8               	btfsc	status,2,c
  4978   001D76  EFBF  F00E         	goto	u3551
  4979   001D7A  EFC1  F00E         	goto	u3550
  4980   001D7E                     u3551:
  4981   001D7E  EFD2  F00E         	goto	l5528
  4982   001D82                     u3550:
  4983   001D82  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4984   001D86  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4985   001D8A  30DF               	rrcf	223,w,c
  4986   001D8C  32E8               	rrcf	wreg,f,c
  4987   001D8E  32E8               	rrcf	wreg,f,c
  4988   001D90  0B07               	andlw	7
  4989   001D92  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4990   001D94  0E07               	movlw	7
  4991   001D96  6410               	cpfsgt	??_gpio_pin_write_logic^0,c
  4992   001D98  EFD0  F00E         	goto	u3561
  4993   001D9C  EFD2  F00E         	goto	u3560
  4994   001DA0                     u3561:
  4995   001DA0  EF35  F00F         	goto	l5536
  4996   001DA4                     u3560:
  4997   001DA4                     l5528:
  4998                           
  4999                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:         ret = (Std_ReturnType)0x00;
  5000   001DA4  0E00               	movlw	0
  5001   001DA6  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  5002                           
  5003                           ;MCAL_Layer/GPIO/hal_gpio.c: 82:     }
  5004   001DA8  EF4A  F00F         	goto	l5538
  5005   001DAC                     l5530:
  5006                           
  5007                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  5008   001DAC  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5009   001DB0  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5010   001DB4  30DF               	rrcf	223,w,c
  5011   001DB6  32E8               	rrcf	wreg,f,c
  5012   001DB8  32E8               	rrcf	wreg,f,c
  5013   001DBA  0B07               	andlw	7
  5014   001DBC  6E10               	movwf	??_gpio_pin_write_logic^0,c
  5015   001DBE  0E01               	movlw	1
  5016   001DC0  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5017   001DC2  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  5018   001DC4  EFE6  F00E         	goto	u3574
  5019   001DC8                     u3575:
  5020   001DC8  90D8               	bcf	status,0,c
  5021   001DCA  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5022   001DCC                     u3574:
  5023   001DCC  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  5024   001DCE  EFE4  F00E         	goto	u3575
  5025   001DD2  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5026   001DD4  0AFF               	xorlw	255
  5027   001DD6  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5028   001DD8  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5029   001DDC  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5030   001DE0  50DF               	movf	223,w,c
  5031   001DE2  0B07               	andlw	7
  5032   001DE4  6E13               	movwf	(??_gpio_pin_write_logic+3)^0,c
  5033   001DE6  5013               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  5034   001DE8  0D02               	mullw	2
  5035   001DEA  0ED5               	movlw	low _lat_registers
  5036   001DEC  24F3               	addwf	243,w,c
  5037   001DEE  6ED9               	movwf	fsr2l,c
  5038   001DF0  0E00               	movlw	high _lat_registers
  5039   001DF2  20F4               	addwfc	prodh,w,c
  5040   001DF4  6EDA               	movwf	fsr2h,c
  5041   001DF6  CFDE F014          	movff	postinc2,??_gpio_pin_write_logic+4
  5042   001DFA  CFDD F015          	movff	postdec2,??_gpio_pin_write_logic+5
  5043   001DFE  C014  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5044   001E02  C015  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5045   001E06  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5046   001E08  16DF               	andwf	indf2,f,c
  5047                           
  5048                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
  5049   001E0A  EF4A  F00F         	goto	l5538
  5050   001E0E                     l5532:
  5051                           
  5052                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  5053   001E0E  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5054   001E12  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5055   001E16  30DF               	rrcf	223,w,c
  5056   001E18  32E8               	rrcf	wreg,f,c
  5057   001E1A  32E8               	rrcf	wreg,f,c
  5058   001E1C  0B07               	andlw	7
  5059   001E1E  6E10               	movwf	??_gpio_pin_write_logic^0,c
  5060   001E20  0E01               	movlw	1
  5061   001E22  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5062   001E24  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  5063   001E26  EF17  F00F         	goto	u3584
  5064   001E2A                     u3585:
  5065   001E2A  90D8               	bcf	status,0,c
  5066   001E2C  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5067   001E2E                     u3584:
  5068   001E2E  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  5069   001E30  EF15  F00F         	goto	u3585
  5070   001E34  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5071   001E38  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5072   001E3C  50DF               	movf	223,w,c
  5073   001E3E  0B07               	andlw	7
  5074   001E40  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5075   001E42  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5076   001E44  0D02               	mullw	2
  5077   001E46  0ED5               	movlw	low _lat_registers
  5078   001E48  24F3               	addwf	243,w,c
  5079   001E4A  6ED9               	movwf	fsr2l,c
  5080   001E4C  0E00               	movlw	high _lat_registers
  5081   001E4E  20F4               	addwfc	prodh,w,c
  5082   001E50  6EDA               	movwf	fsr2h,c
  5083   001E52  CFDE F013          	movff	postinc2,??_gpio_pin_write_logic+3
  5084   001E56  CFDD F014          	movff	postdec2,??_gpio_pin_write_logic+4
  5085   001E5A  C013  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5086   001E5E  C014  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5087   001E62  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5088   001E64  12DF               	iorwf	indf2,f,c
  5089                           
  5090                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:                 break;
  5091   001E66  EF4A  F00F         	goto	l5538
  5092   001E6A                     l5536:
  5093   001E6A  500F               	movf	gpio_pin_write_logic@logic^0,w,c
  5094   001E6C  6E10               	movwf	??_gpio_pin_write_logic^0,c
  5095   001E6E  6A11               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5096                           
  5097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5098                           ; Switch size 1, requested type "simple"
  5099                           ; Number of cases is 1, Range of values is 0 to 0
  5100                           ; switch strategies available:
  5101                           ; Name         Instructions Cycles
  5102                           ; simple_byte            4     3 (average)
  5103                           ;	Chosen strategy is simple_byte
  5104   001E70  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5105   001E72  0A00               	xorlw	0	; case 0
  5106   001E74  B4D8               	btfsc	status,2,c
  5107   001E76  EF3F  F00F         	goto	l8112
  5108   001E7A  EFD2  F00E         	goto	l5528
  5109   001E7E                     l8112:
  5110                           
  5111                           ; Switch size 1, requested type "simple"
  5112                           ; Number of cases is 2, Range of values is 0 to 1
  5113                           ; switch strategies available:
  5114                           ; Name         Instructions Cycles
  5115                           ; simple_byte            7     4 (average)
  5116                           ;	Chosen strategy is simple_byte
  5117   001E7E  5010               	movf	??_gpio_pin_write_logic^0,w,c
  5118   001E80  0A00               	xorlw	0	; case 0
  5119   001E82  B4D8               	btfsc	status,2,c
  5120   001E84  EFD6  F00E         	goto	l5530
  5121   001E88  0A01               	xorlw	1	; case 1
  5122   001E8A  B4D8               	btfsc	status,2,c
  5123   001E8C  EF07  F00F         	goto	l5532
  5124   001E90  EFD2  F00E         	goto	l5528
  5125   001E94                     l5538:
  5126                           
  5127                           ;MCAL_Layer/GPIO/hal_gpio.c: 94:     return ret;
  5128   001E94  5016               	movf	gpio_pin_write_logic@ret^0,w,c
  5129   001E96  0012               	return		;funcret
  5130   001E98                     __end_of_gpio_pin_write_logic:
  5131                           	callstack 0
  5132                           
  5133 ;; *************** function _button_initialize *****************
  5134 ;; Defined at:
  5135 ;;		line 16 in file "ECU_Layer/button/ecu_button.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  btn             2   21[COMRAM] PTR const struct .
  5138 ;;		 -> btn_high1(3), btn_high(3), 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  ret             1   23[COMRAM] unsigned char 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      unsigned char 
  5143 ;; Registers used:
  5144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;Total ram usage:        3 bytes
  5155 ;; Hardware stack levels used: 1
  5156 ;; Hardware stack levels required when called: 5
  5157 ;; This function calls:
  5158 ;;		_gpio_pin_direction_intialize
  5159 ;; This function is called by:
  5160 ;;		_application_intialize
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text29
  5165   002E6A                     __ptext29:
  5166                           	callstack 0
  5167   002E6A                     _button_initialize:
  5168                           	callstack 24
  5169   002E6A                     
  5170                           ;ECU_Layer/button/ecu_button.c: 18:     if(((void*)0) == btn){
  5171   002E6A  5016               	movf	button_initialize@btn^0,w,c
  5172   002E6C  1017               	iorwf	(button_initialize@btn+1)^0,w,c
  5173   002E6E  A4D8               	btfss	status,2,c
  5174   002E70  EF3C  F017         	goto	u3871
  5175   002E74  EF3E  F017         	goto	u3870
  5176   002E78                     u3871:
  5177   002E78  EF42  F017         	goto	l5772
  5178   002E7C                     u3870:
  5179   002E7C                     
  5180                           ;ECU_Layer/button/ecu_button.c: 19:         ret = (Std_ReturnType)0x00;
  5181   002E7C  0E00               	movlw	0
  5182   002E7E  6E18               	movwf	button_initialize@ret^0,c
  5183                           
  5184                           ;ECU_Layer/button/ecu_button.c: 20:     }
  5185   002E80  EF49  F017         	goto	l5774
  5186   002E84                     l5772:
  5187                           
  5188                           ;ECU_Layer/button/ecu_button.c: 22:         ret = gpio_pin_direction_intialize(&(btn->bu
      +                          tton_pin));
  5189   002E84  C016  F00D         	movff	button_initialize@btn,gpio_pin_direction_intialize@_pin_config
  5190   002E88  C017  F00E         	movff	button_initialize@btn+1,gpio_pin_direction_intialize@_pin_config+1
  5191   002E8C  ECE8  F00C         	call	_gpio_pin_direction_intialize	;wreg free
  5192   002E90  6E18               	movwf	button_initialize@ret^0,c
  5193   002E92                     l5774:
  5194                           
  5195                           ;ECU_Layer/button/ecu_button.c: 24:     return ret;
  5196   002E92  5018               	movf	button_initialize@ret^0,w,c
  5197   002E94  0012               	return		;funcret
  5198   002E96                     __end_of_button_initialize:
  5199                           	callstack 0
  5200                           
  5201 ;; *************** function _gpio_pin_direction_intialize *****************
  5202 ;; Defined at:
  5203 ;;		line 28 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  _pin_config     2   12[COMRAM] PTR const struct .
  5206 ;;		 -> btn_high1(3), btn_high(3), lcd_1.lcd_data(4), lcd_1(6), 
  5207 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;  ret             1   20[COMRAM] unsigned char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      unsigned char 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;Total ram usage:        9 bytes
  5224 ;; Hardware stack levels used: 1
  5225 ;; Hardware stack levels required when called: 4
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_button_initialize
  5230 ;;		_gpio_pin_intialize
  5231 ;;		_keypad_initialize
  5232 ;;		_Interrupt_RBx_Init
  5233 ;;		_Interrupt_INTx_Pin_Init
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text30
  5238   0019D0                     __ptext30:
  5239                           	callstack 0
  5240   0019D0                     _gpio_pin_direction_intialize:
  5241                           	callstack 24
  5242   0019D0                     
  5243                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5244   0019D0  0E01               	movlw	1
  5245   0019D2  6E15               	movwf	gpio_pin_direction_intialize@ret^0,c
  5246   0019D4                     
  5247                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  5248   0019D4  500D               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5249   0019D6  100E               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  5250   0019D8  B4D8               	btfsc	status,2,c
  5251   0019DA  EFF1  F00C         	goto	u3691
  5252   0019DE  EFF3  F00C         	goto	u3690
  5253   0019E2                     u3691:
  5254   0019E2  EF04  F00D         	goto	l5602
  5255   0019E6                     u3690:
  5256   0019E6  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5257   0019EA  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5258   0019EE  30DF               	rrcf	223,w,c
  5259   0019F0  32E8               	rrcf	wreg,f,c
  5260   0019F2  32E8               	rrcf	wreg,f,c
  5261   0019F4  0B07               	andlw	7
  5262   0019F6  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  5263   0019F8  0E07               	movlw	7
  5264   0019FA  640F               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  5265   0019FC  EF02  F00D         	goto	u3701
  5266   001A00  EF04  F00D         	goto	u3700
  5267   001A04                     u3701:
  5268   001A04  EF67  F00D         	goto	l5610
  5269   001A08                     u3700:
  5270   001A08                     l5602:
  5271                           
  5272                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret = (Std_ReturnType)0x00;
  5273   001A08  0E00               	movlw	0
  5274   001A0A  6E15               	movwf	gpio_pin_direction_intialize@ret^0,c
  5275                           
  5276                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:     }
  5277   001A0C  EF88  F00D         	goto	l5612
  5278   001A10                     l5604:
  5279                           
  5280                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  5281   001A10  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5282   001A14  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5283   001A18  30DF               	rrcf	223,w,c
  5284   001A1A  32E8               	rrcf	wreg,f,c
  5285   001A1C  32E8               	rrcf	wreg,f,c
  5286   001A1E  0B07               	andlw	7
  5287   001A20  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  5288   001A22  0E01               	movlw	1
  5289   001A24  6E10               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5290   001A26  2A0F               	incf	??_gpio_pin_direction_intialize^0,f,c
  5291   001A28  EF18  F00D         	goto	u3714
  5292   001A2C                     u3715:
  5293   001A2C  90D8               	bcf	status,0,c
  5294   001A2E  3610               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5295   001A30                     u3714:
  5296   001A30  2E0F               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5297   001A32  EF16  F00D         	goto	u3715
  5298   001A36  5010               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5299   001A38  0AFF               	xorlw	255
  5300   001A3A  6E11               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5301   001A3C  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5302   001A40  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5303   001A44  50DF               	movf	223,w,c
  5304   001A46  0B07               	andlw	7
  5305   001A48  6E12               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  5306   001A4A  5012               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  5307   001A4C  0D02               	mullw	2
  5308   001A4E  0EDF               	movlw	low _tris_registers
  5309   001A50  24F3               	addwf	243,w,c
  5310   001A52  6ED9               	movwf	fsr2l,c
  5311   001A54  0E00               	movlw	high _tris_registers
  5312   001A56  20F4               	addwfc	prodh,w,c
  5313   001A58  6EDA               	movwf	fsr2h,c
  5314   001A5A  CFDE F013          	movff	postinc2,??_gpio_pin_direction_intialize+4
  5315   001A5E  CFDD F014          	movff	postdec2,??_gpio_pin_direction_intialize+5
  5316   001A62  C013  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  5317   001A66  C014  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  5318   001A6A  5011               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5319   001A6C  16DF               	andwf	indf2,f,c
  5320                           
  5321                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  5322   001A6E  EF88  F00D         	goto	l5612
  5323   001A72                     l5606:
  5324                           
  5325                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  5326   001A72  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5327   001A76  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5328   001A7A  30DF               	rrcf	223,w,c
  5329   001A7C  32E8               	rrcf	wreg,f,c
  5330   001A7E  32E8               	rrcf	wreg,f,c
  5331   001A80  0B07               	andlw	7
  5332   001A82  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  5333   001A84  0E01               	movlw	1
  5334   001A86  6E10               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5335   001A88  2A0F               	incf	??_gpio_pin_direction_intialize^0,f,c
  5336   001A8A  EF49  F00D         	goto	u3724
  5337   001A8E                     u3725:
  5338   001A8E  90D8               	bcf	status,0,c
  5339   001A90  3610               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5340   001A92                     u3724:
  5341   001A92  2E0F               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5342   001A94  EF47  F00D         	goto	u3725
  5343   001A98  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5344   001A9C  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5345   001AA0  50DF               	movf	223,w,c
  5346   001AA2  0B07               	andlw	7
  5347   001AA4  6E11               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5348   001AA6  5011               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5349   001AA8  0D02               	mullw	2
  5350   001AAA  0EDF               	movlw	low _tris_registers
  5351   001AAC  24F3               	addwf	243,w,c
  5352   001AAE  6ED9               	movwf	fsr2l,c
  5353   001AB0  0E00               	movlw	high _tris_registers
  5354   001AB2  20F4               	addwfc	prodh,w,c
  5355   001AB4  6EDA               	movwf	fsr2h,c
  5356   001AB6  CFDE F012          	movff	postinc2,??_gpio_pin_direction_intialize+3
  5357   001ABA  CFDD F013          	movff	postdec2,??_gpio_pin_direction_intialize+4
  5358   001ABE  C012  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  5359   001AC2  C013  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  5360   001AC6  5010               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5361   001AC8  12DF               	iorwf	indf2,f,c
  5362                           
  5363                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:                 break;
  5364   001ACA  EF88  F00D         	goto	l5612
  5365   001ACE                     l5610:
  5366   001ACE  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5367   001AD2  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5368   001AD6  BCDF               	btfsc	indf2,6,c
  5369   001AD8  EF70  F00D         	goto	u3731
  5370   001ADC  EF73  F00D         	goto	u3730
  5371   001AE0                     u3731:
  5372   001AE0  0E01               	movlw	1
  5373   001AE2  EF74  F00D         	goto	u3740
  5374   001AE6                     u3730:
  5375   001AE6  0E00               	movlw	0
  5376   001AE8                     u3740:
  5377   001AE8  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  5378   001AEA  6A10               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  5379                           
  5380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5381                           ; Switch size 1, requested type "simple"
  5382                           ; Number of cases is 1, Range of values is 0 to 0
  5383                           ; switch strategies available:
  5384                           ; Name         Instructions Cycles
  5385                           ; simple_byte            4     3 (average)
  5386                           ;	Chosen strategy is simple_byte
  5387   001AEC  5010               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5388   001AEE  0A00               	xorlw	0	; case 0
  5389   001AF0  B4D8               	btfsc	status,2,c
  5390   001AF2  EF7D  F00D         	goto	l8114
  5391   001AF6  EF04  F00D         	goto	l5602
  5392   001AFA                     l8114:
  5393                           
  5394                           ; Switch size 1, requested type "simple"
  5395                           ; Number of cases is 2, Range of values is 0 to 1
  5396                           ; switch strategies available:
  5397                           ; Name         Instructions Cycles
  5398                           ; simple_byte            7     4 (average)
  5399                           ;	Chosen strategy is simple_byte
  5400   001AFA  500F               	movf	??_gpio_pin_direction_intialize^0,w,c
  5401   001AFC  0A00               	xorlw	0	; case 0
  5402   001AFE  B4D8               	btfsc	status,2,c
  5403   001B00  EF08  F00D         	goto	l5604
  5404   001B04  0A01               	xorlw	1	; case 1
  5405   001B06  B4D8               	btfsc	status,2,c
  5406   001B08  EF39  F00D         	goto	l5606
  5407   001B0C  EF04  F00D         	goto	l5602
  5408   001B10                     l5612:
  5409                           
  5410                           ;MCAL_Layer/GPIO/hal_gpio.c: 44:     return ret;
  5411   001B10  5015               	movf	gpio_pin_direction_intialize@ret^0,w,c
  5412   001B12  0012               	return		;funcret
  5413   001B14                     __end_of_gpio_pin_direction_intialize:
  5414                           	callstack 0
  5415                           
  5416 ;; *************** function _ADC_StartConversion_Interrupt *****************
  5417 ;; Defined at:
  5418 ;;		line 237 in file "MCAL_Layer/ADC/hal_adc.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  _adc            2   20[COMRAM] PTR const struct .
  5421 ;;		 -> adc_1(7), 
  5422 ;;  channel         1   22[COMRAM] enum E3032
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  ret             1   23[COMRAM] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      unsigned char 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5434 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;Total ram usage:        4 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; Hardware stack levels required when called: 6
  5441 ;; This function calls:
  5442 ;;		_ADC_SelectChannel
  5443 ;;		_ADC_StartConversion
  5444 ;; This function is called by:
  5445 ;;		_main
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text31
  5450   002D04                     __ptext31:
  5451                           	callstack 0
  5452   002D04                     _ADC_StartConversion_Interrupt:
  5453                           	callstack 24
  5454   002D04                     
  5455                           ;MCAL_Layer/ADC/hal_adc.c: 239:     if(((void*)0) == _adc){
  5456   002D04  5015               	movf	ADC_StartConversion_Interrupt@_adc^0,w,c
  5457   002D06  1016               	iorwf	(ADC_StartConversion_Interrupt@_adc+1)^0,w,c
  5458   002D08  A4D8               	btfss	status,2,c
  5459   002D0A  EF89  F016         	goto	u4401
  5460   002D0E  EF8B  F016         	goto	u4400
  5461   002D12                     u4401:
  5462   002D12  EF8F  F016         	goto	l408
  5463   002D16                     u4400:
  5464   002D16                     
  5465                           ;MCAL_Layer/ADC/hal_adc.c: 240:         ret = (Std_ReturnType)0x00;
  5466   002D16  0E00               	movlw	0
  5467   002D18  6E18               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5468                           
  5469                           ;MCAL_Layer/ADC/hal_adc.c: 241:     }
  5470   002D1A  EFA2  F016         	goto	l6248
  5471   002D1E                     l408:
  5472                           
  5473                           ;MCAL_Layer/ADC/hal_adc.c: 244:         (PIR1bits.ADIF = 0);
  5474   002D1E  9C9E               	bcf	158,6,c	;volatile
  5475   002D20                     
  5476                           ;MCAL_Layer/ADC/hal_adc.c: 247:         ret = ADC_SelectChannel(_adc, channel);
  5477   002D20  C015  F010         	movff	ADC_StartConversion_Interrupt@_adc,ADC_SelectChannel@_adc
  5478   002D24  C016  F011         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_SelectChannel@_adc+1
  5479   002D28  C017  F012         	movff	ADC_StartConversion_Interrupt@channel,ADC_SelectChannel@channel
  5480   002D2C  ECE6  F016         	call	_ADC_SelectChannel	;wreg free
  5481   002D30  6E18               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5482                           
  5483                           ;MCAL_Layer/ADC/hal_adc.c: 249:         ret = ADC_StartConversion(_adc);
  5484   002D32  C015  F00D         	movff	ADC_StartConversion_Interrupt@_adc,ADC_StartConversion@_adc
  5485   002D36  C016  F00E         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_StartConversion@_adc+1
  5486   002D3A  EC5F  F017         	call	_ADC_StartConversion	;wreg free
  5487   002D3E  6E18               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5488   002D40                     
  5489                           ;MCAL_Layer/ADC/hal_adc.c: 250:         ret = (Std_ReturnType)0x01;
  5490   002D40  0E01               	movlw	1
  5491   002D42  6E18               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5492   002D44                     l6248:
  5493                           
  5494                           ;MCAL_Layer/ADC/hal_adc.c: 252:     return ret;
  5495   002D44  5018               	movf	ADC_StartConversion_Interrupt@ret^0,w,c
  5496   002D46  0012               	return		;funcret
  5497   002D48                     __end_of_ADC_StartConversion_Interrupt:
  5498                           	callstack 0
  5499                           
  5500 ;; *************** function _ADC_StartConversion *****************
  5501 ;; Defined at:
  5502 ;;		line 131 in file "MCAL_Layer/ADC/hal_adc.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  _adc            2   12[COMRAM] PTR const struct .
  5505 ;;		 -> adc_1(7), 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  ret             1   14[COMRAM] unsigned char 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      unsigned char 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5520 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;Total ram usage:        3 bytes
  5522 ;; Hardware stack levels used: 1
  5523 ;; Hardware stack levels required when called: 4
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_ADC_StartConversion_Interrupt
  5528 ;;		_ADC_GetConversion_Blocking
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text32
  5533   002EBE                     __ptext32:
  5534                           	callstack 0
  5535   002EBE                     _ADC_StartConversion:
  5536                           	callstack 25
  5537   002EBE                     
  5538                           ;MCAL_Layer/ADC/hal_adc.c: 133:     if(((void*)0) == _adc){
  5539   002EBE  500D               	movf	ADC_StartConversion@_adc^0,w,c
  5540   002EC0  100E               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
  5541   002EC2  A4D8               	btfss	status,2,c
  5542   002EC4  EF66  F017         	goto	u4081
  5543   002EC8  EF68  F017         	goto	u4080
  5544   002ECC                     u4081:
  5545   002ECC  EF6C  F017         	goto	l375
  5546   002ED0                     u4080:
  5547   002ED0                     
  5548                           ;MCAL_Layer/ADC/hal_adc.c: 134:         ret = (Std_ReturnType)0x00;
  5549   002ED0  0E00               	movlw	0
  5550   002ED2  6E0F               	movwf	ADC_StartConversion@ret^0,c
  5551                           
  5552                           ;MCAL_Layer/ADC/hal_adc.c: 135:     }
  5553   002ED4  EF6F  F017         	goto	l376
  5554   002ED8                     l375:
  5555                           
  5556                           ;MCAL_Layer/ADC/hal_adc.c: 137:         (ADCON0bits.GODONE = 1);
  5557   002ED8  82C2               	bsf	194,1,c	;volatile
  5558   002EDA                     
  5559                           ;MCAL_Layer/ADC/hal_adc.c: 138:         ret = (Std_ReturnType)0x01;
  5560   002EDA  0E01               	movlw	1
  5561   002EDC  6E0F               	movwf	ADC_StartConversion@ret^0,c
  5562   002EDE                     l376:
  5563                           
  5564                           ;MCAL_Layer/ADC/hal_adc.c: 140:     return ret;
  5565   002EDE  500F               	movf	ADC_StartConversion@ret^0,w,c
  5566   002EE0  0012               	return		;funcret
  5567   002EE2                     __end_of_ADC_StartConversion:
  5568                           	callstack 0
  5569                           
  5570 ;; *************** function _ADC_SelectChannel *****************
  5571 ;; Defined at:
  5572 ;;		line 108 in file "MCAL_Layer/ADC/hal_adc.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  _adc            2   15[COMRAM] PTR const struct .
  5575 ;;		 -> adc_1(7), 
  5576 ;;  channel         1   17[COMRAM] enum E3032
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  ret             1   19[COMRAM] unsigned char 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      unsigned char 
  5581 ;; Registers used:
  5582 ;;		wreg, status,2, status,0, cstack
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5588 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;Total ram usage:        5 bytes
  5593 ;; Hardware stack levels used: 1
  5594 ;; Hardware stack levels required when called: 5
  5595 ;; This function calls:
  5596 ;;		_adc_input_channel_port_configure
  5597 ;; This function is called by:
  5598 ;;		_ADC_StartConversion_Interrupt
  5599 ;;		_ADC_GetConversion_Blocking
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text33
  5604   002DCC                     __ptext33:
  5605                           	callstack 0
  5606   002DCC                     _ADC_SelectChannel:
  5607                           	callstack 24
  5608   002DCC                     
  5609                           ;MCAL_Layer/ADC/hal_adc.c: 110:     if(((void*)0) == _adc){
  5610   002DCC  5010               	movf	ADC_SelectChannel@_adc^0,w,c
  5611   002DCE  1011               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
  5612   002DD0  A4D8               	btfss	status,2,c
  5613   002DD2  EFED  F016         	goto	u4071
  5614   002DD6  EFEF  F016         	goto	u4070
  5615   002DDA                     u4071:
  5616   002DDA  EFF3  F016         	goto	l5944
  5617   002DDE                     u4070:
  5618   002DDE                     
  5619                           ;MCAL_Layer/ADC/hal_adc.c: 111:         ret = (Std_ReturnType)0x00;
  5620   002DDE  0E00               	movlw	0
  5621   002DE0  6E14               	movwf	ADC_SelectChannel@ret^0,c
  5622                           
  5623                           ;MCAL_Layer/ADC/hal_adc.c: 112:     }
  5624   002DE2  EF01  F017         	goto	l5950
  5625   002DE6                     l5944:
  5626                           
  5627                           ;MCAL_Layer/ADC/hal_adc.c: 115:         ADCON0bits.CHS = channel;
  5628   002DE6  C012  F013         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  5629   002DEA  4613               	rlncf	??_ADC_SelectChannel^0,f,c
  5630   002DEC  4613               	rlncf	??_ADC_SelectChannel^0,f,c
  5631   002DEE  50C2               	movf	194,w,c	;volatile
  5632   002DF0  1813               	xorwf	??_ADC_SelectChannel^0,w,c
  5633   002DF2  0BC3               	andlw	-61
  5634   002DF4  1813               	xorwf	??_ADC_SelectChannel^0,w,c
  5635   002DF6  6EC2               	movwf	194,c	;volatile
  5636   002DF8                     
  5637                           ;MCAL_Layer/ADC/hal_adc.c: 116:         adc_input_channel_port_configure(channel);
  5638   002DF8  5012               	movf	ADC_SelectChannel@channel^0,w,c
  5639   002DFA  EC4C  F00F         	call	_adc_input_channel_port_configure
  5640   002DFE                     
  5641                           ;MCAL_Layer/ADC/hal_adc.c: 117:         ret = (Std_ReturnType)0x01;
  5642   002DFE  0E01               	movlw	1
  5643   002E00  6E14               	movwf	ADC_SelectChannel@ret^0,c
  5644   002E02                     l5950:
  5645                           
  5646                           ;MCAL_Layer/ADC/hal_adc.c: 119:     return ret;
  5647   002E02  5014               	movf	ADC_SelectChannel@ret^0,w,c
  5648   002E04  0012               	return		;funcret
  5649   002E06                     __end_of_ADC_SelectChannel:
  5650                           	callstack 0
  5651                           
  5652 ;; *************** function _ADC_Init *****************
  5653 ;; Defined at:
  5654 ;;		line 29 in file "MCAL_Layer/ADC/hal_adc.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  _adc            2   15[COMRAM] PTR const struct .
  5657 ;;		 -> adc_1(7), 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  ret             1   18[COMRAM] unsigned char 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      unsigned char 
  5662 ;; Registers used:
  5663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;Total ram usage:        4 bytes
  5674 ;; Hardware stack levels used: 1
  5675 ;; Hardware stack levels required when called: 5
  5676 ;; This function calls:
  5677 ;;		_adc_input_channel_port_configure
  5678 ;;		_configure_voltage_reference
  5679 ;;		_select_result_format
  5680 ;; This function is called by:
  5681 ;;		_main
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text34
  5686   002288                     __ptext34:
  5687                           	callstack 0
  5688   002288                     _ADC_Init:
  5689                           	callstack 25
  5690   002288                     
  5691                           ;MCAL_Layer/ADC/hal_adc.c: 31:     if(((void*)0) == _adc){
  5692   002288  5010               	movf	ADC_Init@_adc^0,w,c
  5693   00228A  1011               	iorwf	(ADC_Init@_adc+1)^0,w,c
  5694   00228C  A4D8               	btfss	status,2,c
  5695   00228E  EF4B  F011         	goto	u4391
  5696   002292  EF4D  F011         	goto	u4390
  5697   002296                     u4391:
  5698   002296  EF51  F011         	goto	l360
  5699   00229A                     u4390:
  5700   00229A                     
  5701                           ;MCAL_Layer/ADC/hal_adc.c: 32:         ret = (Std_ReturnType)0x00;
  5702   00229A  0E00               	movlw	0
  5703   00229C  6E13               	movwf	ADC_Init@ret^0,c
  5704                           
  5705                           ;MCAL_Layer/ADC/hal_adc.c: 33:     }
  5706   00229E  EFA2  F011         	goto	l6234
  5707   0022A2                     l360:
  5708                           
  5709                           ;MCAL_Layer/ADC/hal_adc.c: 36:         (ADCON0bits.ADON = 0);
  5710   0022A2  90C2               	bcf	194,0,c	;volatile
  5711   0022A4                     
  5712                           ;MCAL_Layer/ADC/hal_adc.c: 38:         ADCON2bits.ACQT = _adc->acquisition_time;
  5713   0022A4  EE20 F003          	lfsr	2,3
  5714   0022A8  5010               	movf	ADC_Init@_adc^0,w,c
  5715   0022AA  26D9               	addwf	fsr2l,f,c
  5716   0022AC  5011               	movf	(ADC_Init@_adc+1)^0,w,c
  5717   0022AE  22DA               	addwfc	fsr2h,f,c
  5718   0022B0  50DF               	movf	indf2,w,c
  5719   0022B2  6E12               	movwf	??_ADC_Init^0,c
  5720   0022B4  4612               	rlncf	??_ADC_Init^0,f,c
  5721   0022B6  4612               	rlncf	??_ADC_Init^0,f,c
  5722   0022B8  4612               	rlncf	??_ADC_Init^0,f,c
  5723   0022BA  50C0               	movf	192,w,c	;volatile
  5724   0022BC  1812               	xorwf	??_ADC_Init^0,w,c
  5725   0022BE  0BC7               	andlw	-57
  5726   0022C0  1812               	xorwf	??_ADC_Init^0,w,c
  5727   0022C2  6EC0               	movwf	192,c	;volatile
  5728                           
  5729                           ;MCAL_Layer/ADC/hal_adc.c: 40:         ADCON2bits.ADCS = _adc->conversion_clock;
  5730   0022C4  EE20 F004          	lfsr	2,4
  5731   0022C8  5010               	movf	ADC_Init@_adc^0,w,c
  5732   0022CA  26D9               	addwf	fsr2l,f,c
  5733   0022CC  5011               	movf	(ADC_Init@_adc+1)^0,w,c
  5734   0022CE  22DA               	addwfc	fsr2h,f,c
  5735   0022D0  50DF               	movf	indf2,w,c
  5736   0022D2  6E12               	movwf	??_ADC_Init^0,c
  5737   0022D4  50C0               	movf	192,w,c	;volatile
  5738   0022D6  1812               	xorwf	??_ADC_Init^0,w,c
  5739   0022D8  0BF8               	andlw	-8
  5740   0022DA  1812               	xorwf	??_ADC_Init^0,w,c
  5741   0022DC  6EC0               	movwf	192,c	;volatile
  5742                           
  5743                           ;MCAL_Layer/ADC/hal_adc.c: 42:         ADCON0bits.CHS = _adc->adc_channel;
  5744   0022DE  EE20 F005          	lfsr	2,5
  5745   0022E2  5010               	movf	ADC_Init@_adc^0,w,c
  5746   0022E4  26D9               	addwf	fsr2l,f,c
  5747   0022E6  5011               	movf	(ADC_Init@_adc+1)^0,w,c
  5748   0022E8  22DA               	addwfc	fsr2h,f,c
  5749   0022EA  50DF               	movf	indf2,w,c
  5750   0022EC  6E12               	movwf	??_ADC_Init^0,c
  5751   0022EE  4612               	rlncf	??_ADC_Init^0,f,c
  5752   0022F0  4612               	rlncf	??_ADC_Init^0,f,c
  5753   0022F2  50C2               	movf	194,w,c	;volatile
  5754   0022F4  1812               	xorwf	??_ADC_Init^0,w,c
  5755   0022F6  0BC3               	andlw	-61
  5756   0022F8  1812               	xorwf	??_ADC_Init^0,w,c
  5757   0022FA  6EC2               	movwf	194,c	;volatile
  5758   0022FC                     
  5759                           ;MCAL_Layer/ADC/hal_adc.c: 43:         adc_input_channel_port_configure(_adc->adc_channe
      +                          l);
  5760   0022FC  EE20 F005          	lfsr	2,5
  5761   002300  5010               	movf	ADC_Init@_adc^0,w,c
  5762   002302  26D9               	addwf	fsr2l,f,c
  5763   002304  5011               	movf	(ADC_Init@_adc+1)^0,w,c
  5764   002306  22DA               	addwfc	fsr2h,f,c
  5765   002308  50DF               	movf	indf2,w,c
  5766   00230A  EC4C  F00F         	call	_adc_input_channel_port_configure
  5767   00230E                     
  5768                           ;MCAL_Layer/ADC/hal_adc.c: 46:         (INTCONbits.GIE = 1);
  5769   00230E  8EF2               	bsf	242,7,c	;volatile
  5770   002310                     
  5771                           ;MCAL_Layer/ADC/hal_adc.c: 47:         (INTCONbits.PEIE = 1);
  5772   002310  8CF2               	bsf	242,6,c	;volatile
  5773   002312                     
  5774                           ;MCAL_Layer/ADC/hal_adc.c: 48:         (PIE1bits.ADIE = 1);
  5775   002312  8C9D               	bsf	157,6,c	;volatile
  5776   002314                     
  5777                           ;MCAL_Layer/ADC/hal_adc.c: 49:         (PIR1bits.ADIF = 0);
  5778   002314  9C9E               	bcf	158,6,c	;volatile
  5779   002316                     
  5780                           ;MCAL_Layer/ADC/hal_adc.c: 61:         ADC_InterruptHandler = _adc->ADC_InterruptHandler
      +                          ;
  5781   002316  C010  FFD9         	movff	ADC_Init@_adc,fsr2l
  5782   00231A  C011  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  5783   00231E  CFDE F0AE          	movff	postinc2,_ADC_InterruptHandler
  5784   002322  CFDD F0AF          	movff	postdec2,_ADC_InterruptHandler+1
  5785   002326                     
  5786                           ;MCAL_Layer/ADC/hal_adc.c: 64:         select_result_format(_adc);
  5787   002326  C010  F00D         	movff	ADC_Init@_adc,select_result_format@_adc
  5788   00232A  C011  F00E         	movff	ADC_Init@_adc+1,select_result_format@_adc+1
  5789   00232E  ECA4  F016         	call	_select_result_format	;wreg free
  5790   002332                     
  5791                           ;MCAL_Layer/ADC/hal_adc.c: 66:         configure_voltage_reference(_adc);
  5792   002332  C010  F00D         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  5793   002336  C011  F00E         	movff	ADC_Init@_adc+1,configure_voltage_reference@_adc+1
  5794   00233A  EC3B  F016         	call	_configure_voltage_reference	;wreg free
  5795   00233E                     
  5796                           ;MCAL_Layer/ADC/hal_adc.c: 68:         (ADCON0bits.ADON = 1);
  5797   00233E  80C2               	bsf	194,0,c	;volatile
  5798   002340                     
  5799                           ;MCAL_Layer/ADC/hal_adc.c: 69:         ret = (Std_ReturnType)0x01;
  5800   002340  0E01               	movlw	1
  5801   002342  6E13               	movwf	ADC_Init@ret^0,c
  5802   002344                     l6234:
  5803                           
  5804                           ;MCAL_Layer/ADC/hal_adc.c: 71:     return ret;
  5805   002344  5013               	movf	ADC_Init@ret^0,w,c
  5806   002346  0012               	return		;funcret
  5807   002348                     __end_of_ADC_Init:
  5808                           	callstack 0
  5809                           
  5810 ;; *************** function _select_result_format *****************
  5811 ;; Defined at:
  5812 ;;		line 274 in file "MCAL_Layer/ADC/hal_adc.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  _adc            2   12[COMRAM] PTR const struct .
  5815 ;;		 -> adc_1(7), 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;		None
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  1    wreg      void 
  5820 ;; Registers used:
  5821 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;Total ram usage:        2 bytes
  5832 ;; Hardware stack levels used: 1
  5833 ;; Hardware stack levels required when called: 4
  5834 ;; This function calls:
  5835 ;;		Nothing
  5836 ;; This function is called by:
  5837 ;;		_ADC_Init
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text35
  5842   002D48                     __ptext35:
  5843                           	callstack 0
  5844   002D48                     _select_result_format:
  5845                           	callstack 25
  5846   002D48                     
  5847                           ;MCAL_Layer/ADC/hal_adc.c: 275:     if(0x01U == _adc->result_format){
  5848   002D48  EE20 F006          	lfsr	2,6
  5849   002D4C  500D               	movf	select_result_format@_adc^0,w,c
  5850   002D4E  26D9               	addwf	fsr2l,f,c
  5851   002D50  500E               	movf	(select_result_format@_adc+1)^0,w,c
  5852   002D52  22DA               	addwfc	fsr2h,f,c
  5853   002D54  A2DF               	btfss	indf2,1,c
  5854   002D56  EFAF  F016         	goto	u4031
  5855   002D5A  EFB1  F016         	goto	u4030
  5856   002D5E                     u4031:
  5857   002D5E  EFB4  F016         	goto	l5930
  5858   002D62                     u4030:
  5859   002D62                     
  5860                           ;MCAL_Layer/ADC/hal_adc.c: 276:         (ADCON2bits.ADFM = 1);
  5861   002D62  8EC0               	bsf	192,7,c	;volatile
  5862                           
  5863                           ;MCAL_Layer/ADC/hal_adc.c: 277:     }
  5864   002D64  EFC5  F016         	goto	l436
  5865   002D68                     l5930:
  5866   002D68  EE20 F006          	lfsr	2,6
  5867   002D6C  500D               	movf	select_result_format@_adc^0,w,c
  5868   002D6E  26D9               	addwf	fsr2l,f,c
  5869   002D70  500E               	movf	(select_result_format@_adc+1)^0,w,c
  5870   002D72  22DA               	addwfc	fsr2h,f,c
  5871   002D74  B2DF               	btfsc	indf2,1,c
  5872   002D76  EFBF  F016         	goto	u4041
  5873   002D7A  EFC1  F016         	goto	u4040
  5874   002D7E                     u4041:
  5875   002D7E  EFC4  F016         	goto	l434
  5876   002D82                     u4040:
  5877   002D82                     
  5878                           ;MCAL_Layer/ADC/hal_adc.c: 279:         (ADCON2bits.ADFM = 0);
  5879   002D82  9EC0               	bcf	192,7,c	;volatile
  5880                           
  5881                           ;MCAL_Layer/ADC/hal_adc.c: 280:     }
  5882   002D84  EFC5  F016         	goto	l436
  5883   002D88                     l434:
  5884                           
  5885                           ;MCAL_Layer/ADC/hal_adc.c: 282:         (ADCON2bits.ADFM = 1);
  5886   002D88  8EC0               	bsf	192,7,c	;volatile
  5887   002D8A                     l436:
  5888   002D8A  0012               	return		;funcret
  5889   002D8C                     __end_of_select_result_format:
  5890                           	callstack 0
  5891                           
  5892 ;; *************** function _configure_voltage_reference *****************
  5893 ;; Defined at:
  5894 ;;		line 286 in file "MCAL_Layer/ADC/hal_adc.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  _adc            2   12[COMRAM] PTR const struct .
  5897 ;;		 -> adc_1(7), 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;		None
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  1    wreg      void 
  5902 ;; Registers used:
  5903 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;Total ram usage:        2 bytes
  5914 ;; Hardware stack levels used: 1
  5915 ;; Hardware stack levels required when called: 4
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_ADC_Init
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text36
  5924   002C76                     __ptext36:
  5925                           	callstack 0
  5926   002C76                     _configure_voltage_reference:
  5927                           	callstack 25
  5928   002C76                     
  5929                           ;MCAL_Layer/ADC/hal_adc.c: 287:     if(0x01U == _adc->voltage_reference){
  5930   002C76  EE20 F006          	lfsr	2,6
  5931   002C7A  500D               	movf	configure_voltage_reference@_adc^0,w,c
  5932   002C7C  26D9               	addwf	fsr2l,f,c
  5933   002C7E  500E               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  5934   002C80  22DA               	addwfc	fsr2h,f,c
  5935   002C82  A0DF               	btfss	indf2,0,c
  5936   002C84  EF46  F016         	goto	u4051
  5937   002C88  EF48  F016         	goto	u4050
  5938   002C8C                     u4051:
  5939   002C8C  EF4C  F016         	goto	l5936
  5940   002C90                     u4050:
  5941   002C90  8AC1               	bsf	193,5,c	;volatile
  5942   002C92  88C1               	bsf	193,4,c	;volatile
  5943   002C94  EF5F  F016         	goto	l449
  5944   002C98                     l5936:
  5945   002C98  EE20 F006          	lfsr	2,6
  5946   002C9C  500D               	movf	configure_voltage_reference@_adc^0,w,c
  5947   002C9E  26D9               	addwf	fsr2l,f,c
  5948   002CA0  500E               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  5949   002CA2  22DA               	addwfc	fsr2h,f,c
  5950   002CA4  B0DF               	btfsc	indf2,0,c
  5951   002CA6  EF57  F016         	goto	u4061
  5952   002CAA  EF59  F016         	goto	u4060
  5953   002CAE                     u4061:
  5954   002CAE  EF5D  F016         	goto	l447
  5955   002CB2                     u4060:
  5956   002CB2  9AC1               	bcf	193,5,c	;volatile
  5957   002CB4  98C1               	bcf	193,4,c	;volatile
  5958   002CB6  EF5F  F016         	goto	l449
  5959   002CBA                     l447:
  5960   002CBA  9AC1               	bcf	193,5,c	;volatile
  5961   002CBC  98C1               	bcf	193,4,c	;volatile
  5962   002CBE                     l449:
  5963   002CBE  0012               	return		;funcret
  5964   002CC0                     __end_of_configure_voltage_reference:
  5965                           	callstack 0
  5966                           
  5967 ;; *************** function _adc_input_channel_port_configure *****************
  5968 ;; Defined at:
  5969 ;;		line 255 in file "MCAL_Layer/ADC/hal_adc.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  channel         1    wreg     enum E3032
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  channel         1   14[COMRAM] enum E3032
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  1    wreg      void 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;Total ram usage:        3 bytes
  5988 ;; Hardware stack levels used: 1
  5989 ;; Hardware stack levels required when called: 4
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_ADC_Init
  5994 ;;		_ADC_SelectChannel
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text37
  5999   001E98                     __ptext37:
  6000                           	callstack 0
  6001   001E98                     _adc_input_channel_port_configure:
  6002                           	callstack 24
  6003                           
  6004                           ;incstack = 0
  6005                           ;adc_input_channel_port_configure@channel stored from wreg
  6006   001E98  6E0F               	movwf	adc_input_channel_port_configure@channel^0,c
  6007   001E9A                     
  6008                           ;MCAL_Layer/ADC/hal_adc.c: 256:     switch(channel){
  6009   001E9A  EF76  F00F         	goto	l5726
  6010   001E9E                     l5700:
  6011   001E9E  8092               	bsf	146,0,c	;volatile
  6012   001EA0  EFB7  F00F         	goto	l429
  6013   001EA4                     l5702:
  6014   001EA4  8292               	bsf	146,1,c	;volatile
  6015   001EA6  EFB7  F00F         	goto	l429
  6016   001EAA                     l5704:
  6017   001EAA  8492               	bsf	146,2,c	;volatile
  6018   001EAC  EFB7  F00F         	goto	l429
  6019   001EB0                     l5706:
  6020   001EB0  8692               	bsf	146,3,c	;volatile
  6021   001EB2  EFB7  F00F         	goto	l429
  6022   001EB6                     l5708:
  6023   001EB6  8A92               	bsf	146,5,c	;volatile
  6024   001EB8  EFB7  F00F         	goto	l429
  6025   001EBC                     l5710:
  6026   001EBC  8096               	bsf	150,0,c	;volatile
  6027   001EBE  EFB7  F00F         	goto	l429
  6028   001EC2                     l5712:
  6029   001EC2  8296               	bsf	150,1,c	;volatile
  6030   001EC4  EFB7  F00F         	goto	l429
  6031   001EC8                     l5714:
  6032   001EC8  8496               	bsf	150,2,c	;volatile
  6033   001ECA  EFB7  F00F         	goto	l429
  6034   001ECE                     l5716:
  6035   001ECE  8493               	bsf	147,2,c	;volatile
  6036   001ED0  EFB7  F00F         	goto	l429
  6037   001ED4                     l5718:
  6038   001ED4  8693               	bsf	147,3,c	;volatile
  6039   001ED6  EFB7  F00F         	goto	l429
  6040   001EDA                     l5720:
  6041   001EDA  8293               	bsf	147,1,c	;volatile
  6042   001EDC  EFB7  F00F         	goto	l429
  6043   001EE0                     l5722:
  6044   001EE0  8893               	bsf	147,4,c	;volatile
  6045   001EE2  EFB7  F00F         	goto	l429
  6046   001EE6                     l5724:
  6047   001EE6  8093               	bsf	147,0,c	;volatile
  6048   001EE8  EFB7  F00F         	goto	l429
  6049   001EEC                     l5726:
  6050   001EEC  500F               	movf	adc_input_channel_port_configure@channel^0,w,c
  6051   001EEE  6E0D               	movwf	??_adc_input_channel_port_configure^0,c
  6052   001EF0  6A0E               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  6053                           
  6054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6055                           ; Switch size 1, requested type "simple"
  6056                           ; Number of cases is 1, Range of values is 0 to 0
  6057                           ; switch strategies available:
  6058                           ; Name         Instructions Cycles
  6059                           ; simple_byte            4     3 (average)
  6060                           ;	Chosen strategy is simple_byte
  6061   001EF2  500E               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  6062   001EF4  0A00               	xorlw	0	; case 0
  6063   001EF6  B4D8               	btfsc	status,2,c
  6064   001EF8  EF80  F00F         	goto	l8116
  6065   001EFC  EFB7  F00F         	goto	l429
  6066   001F00                     l8116:
  6067                           
  6068                           ; Switch size 1, requested type "simple"
  6069                           ; Number of cases is 13, Range of values is 0 to 12
  6070                           ; switch strategies available:
  6071                           ; Name         Instructions Cycles
  6072                           ; simple_byte           40    21 (average)
  6073                           ;	Chosen strategy is simple_byte
  6074   001F00  500D               	movf	??_adc_input_channel_port_configure^0,w,c
  6075   001F02  0A00               	xorlw	0	; case 0
  6076   001F04  B4D8               	btfsc	status,2,c
  6077   001F06  EF4F  F00F         	goto	l5700
  6078   001F0A  0A01               	xorlw	1	; case 1
  6079   001F0C  B4D8               	btfsc	status,2,c
  6080   001F0E  EF52  F00F         	goto	l5702
  6081   001F12  0A03               	xorlw	3	; case 2
  6082   001F14  B4D8               	btfsc	status,2,c
  6083   001F16  EF55  F00F         	goto	l5704
  6084   001F1A  0A01               	xorlw	1	; case 3
  6085   001F1C  B4D8               	btfsc	status,2,c
  6086   001F1E  EF58  F00F         	goto	l5706
  6087   001F22  0A07               	xorlw	7	; case 4
  6088   001F24  B4D8               	btfsc	status,2,c
  6089   001F26  EF5B  F00F         	goto	l5708
  6090   001F2A  0A01               	xorlw	1	; case 5
  6091   001F2C  B4D8               	btfsc	status,2,c
  6092   001F2E  EF5E  F00F         	goto	l5710
  6093   001F32  0A03               	xorlw	3	; case 6
  6094   001F34  B4D8               	btfsc	status,2,c
  6095   001F36  EF61  F00F         	goto	l5712
  6096   001F3A  0A01               	xorlw	1	; case 7
  6097   001F3C  B4D8               	btfsc	status,2,c
  6098   001F3E  EF64  F00F         	goto	l5714
  6099   001F42  0A0F               	xorlw	15	; case 8
  6100   001F44  B4D8               	btfsc	status,2,c
  6101   001F46  EF67  F00F         	goto	l5716
  6102   001F4A  0A01               	xorlw	1	; case 9
  6103   001F4C  B4D8               	btfsc	status,2,c
  6104   001F4E  EF6A  F00F         	goto	l5718
  6105   001F52  0A03               	xorlw	3	; case 10
  6106   001F54  B4D8               	btfsc	status,2,c
  6107   001F56  EF6D  F00F         	goto	l5720
  6108   001F5A  0A01               	xorlw	1	; case 11
  6109   001F5C  B4D8               	btfsc	status,2,c
  6110   001F5E  EF70  F00F         	goto	l5722
  6111   001F62  0A07               	xorlw	7	; case 12
  6112   001F64  B4D8               	btfsc	status,2,c
  6113   001F66  EF73  F00F         	goto	l5724
  6114   001F6A  EFB7  F00F         	goto	l429
  6115   001F6E                     l429:
  6116   001F6E  0012               	return		;funcret
  6117   001F70                     __end_of_adc_input_channel_port_configure:
  6118                           	callstack 0
  6119                           
  6120 ;; *************** function _InterruptManager *****************
  6121 ;; Defined at:
  6122 ;;		line 57 in file "MCAL_Layer/interrupt/mcal_interrupt_manager.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;		None
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;		None
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  1    wreg      void 
  6129 ;; Registers used:
  6130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;Total ram usage:        4 bytes
  6141 ;; Hardware stack levels used: 1
  6142 ;; Hardware stack levels required when called: 3
  6143 ;; This function calls:
  6144 ;;		_ADC_ISR
  6145 ;;		_EUSART_RX_ISR
  6146 ;;		_EUSART_TX_ISR
  6147 ;;		_INT0_ISR
  6148 ;;		_INT1_ISR
  6149 ;;		_INT2_ISR
  6150 ;;		_RB4_ISR
  6151 ;;		_RB5_ISR
  6152 ;;		_RB6_ISR
  6153 ;;		_RB7_ISR
  6154 ;; This function is called by:
  6155 ;;		Interrupt level 2
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           	psect	intcode
  6160   000008                     __pintcode:
  6161                           	callstack 0
  6162   000008                     _InterruptManager:
  6163                           	callstack 18
  6164                           
  6165                           ;incstack = 0
  6166   000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6167   00000A  EDDF  F009         	call	int_func,f	;refresh shadow registers
  6168                           
  6169                           	psect	intcode_body
  6170   0013BE                     __pintcode_body:
  6171                           	callstack 18
  6172   0013BE                     int_func:
  6173                           	callstack 18
  6174   0013BE  0006               	pop		; remove dummy address from shadow register refresh
  6175   0013C0  CFFA F009          	movff	pclath,??_InterruptManager
  6176   0013C4  CFFB F00A          	movff	pclatu,??_InterruptManager+1
  6177   0013C8  CFD9 F00B          	movff	fsr2l,??_InterruptManager+2
  6178   0013CC  CFDA F00C          	movff	fsr2h,??_InterruptManager+3
  6179   0013D0                     
  6180                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 59:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  6181   0013D0  A8F2               	btfss	242,4,c	;volatile
  6182   0013D2  EFED  F009         	goto	i2u522_41
  6183   0013D6  EFEF  F009         	goto	i2u522_40
  6184   0013DA                     i2u522_41:
  6185   0013DA  EFF8  F009         	goto	i2l1103
  6186   0013DE                     i2u522_40:
  6187   0013DE  A2F2               	btfss	242,1,c	;volatile
  6188   0013E0  EFF4  F009         	goto	i2u523_41
  6189   0013E4  EFF6  F009         	goto	i2u523_40
  6190   0013E8                     i2u523_41:
  6191   0013E8  EFF8  F009         	goto	i2l1103
  6192   0013EC                     i2u523_40:
  6193   0013EC                     
  6194                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 60:         INT0_ISR();
  6195   0013EC  ECB3  F017         	call	_INT0_ISR	;wreg free
  6196   0013F0                     i2l1103:
  6197                           
  6198                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 63:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
  6199   0013F0  A6F0               	btfss	240,3,c	;volatile
  6200   0013F2  EFFD  F009         	goto	i2u524_41
  6201   0013F6  EFFF  F009         	goto	i2u524_40
  6202   0013FA                     i2u524_41:
  6203   0013FA  EF08  F00A         	goto	i2l1105
  6204   0013FE                     i2u524_40:
  6205   0013FE  A0F0               	btfss	240,0,c	;volatile
  6206   001400  EF04  F00A         	goto	i2u525_41
  6207   001404  EF06  F00A         	goto	i2u525_40
  6208   001408                     i2u525_41:
  6209   001408  EF08  F00A         	goto	i2l1105
  6210   00140C                     i2u525_40:
  6211   00140C                     
  6212                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 64:         INT1_ISR();
  6213   00140C  ECB1  F017         	call	_INT1_ISR	;wreg free
  6214   001410                     i2l1105:
  6215                           
  6216                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 67:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  6217   001410  A8F0               	btfss	240,4,c	;volatile
  6218   001412  EF0D  F00A         	goto	i2u526_41
  6219   001416  EF0F  F00A         	goto	i2u526_40
  6220   00141A                     i2u526_41:
  6221   00141A  EF18  F00A         	goto	i2l1107
  6222   00141E                     i2u526_40:
  6223   00141E  A2F0               	btfss	240,1,c	;volatile
  6224   001420  EF14  F00A         	goto	i2u527_41
  6225   001424  EF16  F00A         	goto	i2u527_40
  6226   001428                     i2u527_41:
  6227   001428  EF18  F00A         	goto	i2l1107
  6228   00142C                     i2u527_40:
  6229   00142C                     
  6230                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 68:         INT2_ISR();
  6231   00142C  ECAF  F017         	call	_INT2_ISR	;wreg free
  6232   001430                     i2l1107:
  6233                           
  6234                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 74:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6235   001430  A6F2               	btfss	242,3,c	;volatile
  6236   001432  EF1D  F00A         	goto	i2u528_41
  6237   001436  EF1F  F00A         	goto	i2u528_40
  6238   00143A                     i2u528_41:
  6239   00143A  EF3A  F00A         	goto	i2l1109
  6240   00143E                     i2u528_40:
  6241   00143E  A0F2               	btfss	242,0,c	;volatile
  6242   001440  EF24  F00A         	goto	i2u529_41
  6243   001444  EF26  F00A         	goto	i2u529_40
  6244   001448                     i2u529_41:
  6245   001448  EF3A  F00A         	goto	i2l1109
  6246   00144C                     i2u529_40:
  6247   00144C  A881               	btfss	129,4,c	;volatile
  6248   00144E  EF2B  F00A         	goto	i2u530_41
  6249   001452  EF2D  F00A         	goto	i2u530_40
  6250   001456                     i2u530_41:
  6251   001456  EF3A  F00A         	goto	i2l1109
  6252   00145A                     i2u530_40:
  6253   00145A  0467               	decf	_RB4_Flag^0,w,c	;volatile
  6254   00145C  A4D8               	btfss	status,2,c
  6255   00145E  EF33  F00A         	goto	i2u531_41
  6256   001462  EF35  F00A         	goto	i2u531_40
  6257   001466                     i2u531_41:
  6258   001466  EF3A  F00A         	goto	i2l1109
  6259   00146A                     i2u531_40:
  6260   00146A                     
  6261                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 75:        (PORTBbits.RB4 == GPIO_HIGH) 
      +                          && (RB4_Flag == 1)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 76:         RB4_Flag
      +                           = 0;
  6262   00146A  0E00               	movlw	0
  6263   00146C  6E67               	movwf	_RB4_Flag^0,c	;volatile
  6264   00146E                     
  6265                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 77:         RB4_ISR(0);
  6266   00146E  0E00               	movlw	0
  6267   001470  EC98  F017         	call	_RB4_ISR
  6268   001474                     i2l1109:
  6269                           
  6270                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 80:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6271   001474  A6F2               	btfss	242,3,c	;volatile
  6272   001476  EF3F  F00A         	goto	i2u532_41
  6273   00147A  EF41  F00A         	goto	i2u532_40
  6274   00147E                     i2u532_41:
  6275   00147E  EF5C  F00A         	goto	i2l1111
  6276   001482                     i2u532_40:
  6277   001482  A0F2               	btfss	242,0,c	;volatile
  6278   001484  EF46  F00A         	goto	i2u533_41
  6279   001488  EF48  F00A         	goto	i2u533_40
  6280   00148C                     i2u533_41:
  6281   00148C  EF5C  F00A         	goto	i2l1111
  6282   001490                     i2u533_40:
  6283   001490  B881               	btfsc	129,4,c	;volatile
  6284   001492  EF4D  F00A         	goto	i2u534_41
  6285   001496  EF4F  F00A         	goto	i2u534_40
  6286   00149A                     i2u534_41:
  6287   00149A  EF5C  F00A         	goto	i2l1111
  6288   00149E                     i2u534_40:
  6289   00149E  5067               	movf	_RB4_Flag^0,w,c	;volatile
  6290   0014A0  A4D8               	btfss	status,2,c
  6291   0014A2  EF55  F00A         	goto	i2u535_41
  6292   0014A6  EF57  F00A         	goto	i2u535_40
  6293   0014AA                     i2u535_41:
  6294   0014AA  EF5C  F00A         	goto	i2l1111
  6295   0014AE                     i2u535_40:
  6296   0014AE                     
  6297                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 81:        (PORTBbits.RB4 == GPIO_LOW) &
      +                          & (RB4_Flag == 0)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 82:         RB4_Flag 
      +                          = 1;
  6298   0014AE  0E01               	movlw	1
  6299   0014B0  6E67               	movwf	_RB4_Flag^0,c	;volatile
  6300   0014B2                     
  6301                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 83:         RB4_ISR(1);
  6302   0014B2  0E01               	movlw	1
  6303   0014B4  EC98  F017         	call	_RB4_ISR
  6304   0014B8                     i2l1111:
  6305                           
  6306                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 86:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6307   0014B8  A6F2               	btfss	242,3,c	;volatile
  6308   0014BA  EF61  F00A         	goto	i2u536_41
  6309   0014BE  EF63  F00A         	goto	i2u536_40
  6310   0014C2                     i2u536_41:
  6311   0014C2  EF7E  F00A         	goto	i2l1113
  6312   0014C6                     i2u536_40:
  6313   0014C6  A0F2               	btfss	242,0,c	;volatile
  6314   0014C8  EF68  F00A         	goto	i2u537_41
  6315   0014CC  EF6A  F00A         	goto	i2u537_40
  6316   0014D0                     i2u537_41:
  6317   0014D0  EF7E  F00A         	goto	i2l1113
  6318   0014D4                     i2u537_40:
  6319   0014D4  AA81               	btfss	129,5,c	;volatile
  6320   0014D6  EF6F  F00A         	goto	i2u538_41
  6321   0014DA  EF71  F00A         	goto	i2u538_40
  6322   0014DE                     i2u538_41:
  6323   0014DE  EF7E  F00A         	goto	i2l1113
  6324   0014E2                     i2u538_40:
  6325   0014E2  0466               	decf	_RB5_Flag^0,w,c	;volatile
  6326   0014E4  A4D8               	btfss	status,2,c
  6327   0014E6  EF77  F00A         	goto	i2u539_41
  6328   0014EA  EF79  F00A         	goto	i2u539_40
  6329   0014EE                     i2u539_41:
  6330   0014EE  EF7E  F00A         	goto	i2l1113
  6331   0014F2                     i2u539_40:
  6332   0014F2                     
  6333                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 87:        (PORTBbits.RB5 == GPIO_HIGH) 
      +                          && (RB5_Flag == 1)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 88:         RB5_Flag
      +                           = 0;
  6334   0014F2  0E00               	movlw	0
  6335   0014F4  6E66               	movwf	_RB5_Flag^0,c	;volatile
  6336   0014F6                     
  6337                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 89:         RB5_ISR(0);
  6338   0014F6  0E00               	movlw	0
  6339   0014F8  EC8B  F017         	call	_RB5_ISR
  6340   0014FC                     i2l1113:
  6341                           
  6342                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 92:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6343   0014FC  A6F2               	btfss	242,3,c	;volatile
  6344   0014FE  EF83  F00A         	goto	i2u540_41
  6345   001502  EF85  F00A         	goto	i2u540_40
  6346   001506                     i2u540_41:
  6347   001506  EFA0  F00A         	goto	i2l1115
  6348   00150A                     i2u540_40:
  6349   00150A  A0F2               	btfss	242,0,c	;volatile
  6350   00150C  EF8A  F00A         	goto	i2u541_41
  6351   001510  EF8C  F00A         	goto	i2u541_40
  6352   001514                     i2u541_41:
  6353   001514  EFA0  F00A         	goto	i2l1115
  6354   001518                     i2u541_40:
  6355   001518  BA81               	btfsc	129,5,c	;volatile
  6356   00151A  EF91  F00A         	goto	i2u542_41
  6357   00151E  EF93  F00A         	goto	i2u542_40
  6358   001522                     i2u542_41:
  6359   001522  EFA0  F00A         	goto	i2l1115
  6360   001526                     i2u542_40:
  6361   001526  5066               	movf	_RB5_Flag^0,w,c	;volatile
  6362   001528  A4D8               	btfss	status,2,c
  6363   00152A  EF99  F00A         	goto	i2u543_41
  6364   00152E  EF9B  F00A         	goto	i2u543_40
  6365   001532                     i2u543_41:
  6366   001532  EFA0  F00A         	goto	i2l1115
  6367   001536                     i2u543_40:
  6368   001536                     
  6369                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 93:        (PORTBbits.RB5 == GPIO_LOW) &
      +                          & (RB5_Flag == 0)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 94:         RB5_Flag 
      +                          = 1;
  6370   001536  0E01               	movlw	1
  6371   001538  6E66               	movwf	_RB5_Flag^0,c	;volatile
  6372   00153A                     
  6373                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 95:         RB5_ISR(1);
  6374   00153A  0E01               	movlw	1
  6375   00153C  EC8B  F017         	call	_RB5_ISR
  6376   001540                     i2l1115:
  6377                           
  6378                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 98:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6379   001540  A6F2               	btfss	242,3,c	;volatile
  6380   001542  EFA5  F00A         	goto	i2u544_41
  6381   001546  EFA7  F00A         	goto	i2u544_40
  6382   00154A                     i2u544_41:
  6383   00154A  EFC2  F00A         	goto	i2l1117
  6384   00154E                     i2u544_40:
  6385   00154E  A0F2               	btfss	242,0,c	;volatile
  6386   001550  EFAC  F00A         	goto	i2u545_41
  6387   001554  EFAE  F00A         	goto	i2u545_40
  6388   001558                     i2u545_41:
  6389   001558  EFC2  F00A         	goto	i2l1117
  6390   00155C                     i2u545_40:
  6391   00155C  AC81               	btfss	129,6,c	;volatile
  6392   00155E  EFB3  F00A         	goto	i2u546_41
  6393   001562  EFB5  F00A         	goto	i2u546_40
  6394   001566                     i2u546_41:
  6395   001566  EFC2  F00A         	goto	i2l1117
  6396   00156A                     i2u546_40:
  6397   00156A  0465               	decf	_RB6_Flag^0,w,c	;volatile
  6398   00156C  A4D8               	btfss	status,2,c
  6399   00156E  EFBB  F00A         	goto	i2u547_41
  6400   001572  EFBD  F00A         	goto	i2u547_40
  6401   001576                     i2u547_41:
  6402   001576  EFC2  F00A         	goto	i2l1117
  6403   00157A                     i2u547_40:
  6404   00157A                     
  6405                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 99:        (PORTBbits.RB6 == GPIO_HIGH) 
      +                          && (RB6_Flag == 1)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 100:         RB6_Fla
      +                          g = 0;
  6406   00157A  0E00               	movlw	0
  6407   00157C  6E65               	movwf	_RB6_Flag^0,c	;volatile
  6408   00157E                     
  6409                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 101:         RB6_ISR(0);
  6410   00157E  0E00               	movlw	0
  6411   001580  EC7E  F017         	call	_RB6_ISR
  6412   001584                     i2l1117:
  6413                           
  6414                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 104:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  6415   001584  A6F2               	btfss	242,3,c	;volatile
  6416   001586  EFC7  F00A         	goto	i2u548_41
  6417   00158A  EFC9  F00A         	goto	i2u548_40
  6418   00158E                     i2u548_41:
  6419   00158E  EFE4  F00A         	goto	i2l1119
  6420   001592                     i2u548_40:
  6421   001592  A0F2               	btfss	242,0,c	;volatile
  6422   001594  EFCE  F00A         	goto	i2u549_41
  6423   001598  EFD0  F00A         	goto	i2u549_40
  6424   00159C                     i2u549_41:
  6425   00159C  EFE4  F00A         	goto	i2l1119
  6426   0015A0                     i2u549_40:
  6427   0015A0  BC81               	btfsc	129,6,c	;volatile
  6428   0015A2  EFD5  F00A         	goto	i2u550_41
  6429   0015A6  EFD7  F00A         	goto	i2u550_40
  6430   0015AA                     i2u550_41:
  6431   0015AA  EFE4  F00A         	goto	i2l1119
  6432   0015AE                     i2u550_40:
  6433   0015AE  5065               	movf	_RB6_Flag^0,w,c	;volatile
  6434   0015B0  A4D8               	btfss	status,2,c
  6435   0015B2  EFDD  F00A         	goto	i2u551_41
  6436   0015B6  EFDF  F00A         	goto	i2u551_40
  6437   0015BA                     i2u551_41:
  6438   0015BA  EFE4  F00A         	goto	i2l1119
  6439   0015BE                     i2u551_40:
  6440   0015BE                     
  6441                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 105:        (PORTBbits.RB6 == GPIO_LOW) 
      +                          && (RB6_Flag == 0)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 106:         RB6_Fla
      +                          g = 1;
  6442   0015BE  0E01               	movlw	1
  6443   0015C0  6E65               	movwf	_RB6_Flag^0,c	;volatile
  6444   0015C2                     
  6445                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 107:         RB6_ISR(1);
  6446   0015C2  0E01               	movlw	1
  6447   0015C4  EC7E  F017         	call	_RB6_ISR
  6448   0015C8                     i2l1119:
  6449                           
  6450                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 110:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  6451   0015C8  A6F2               	btfss	242,3,c	;volatile
  6452   0015CA  EFE9  F00A         	goto	i2u552_41
  6453   0015CE  EFEB  F00A         	goto	i2u552_40
  6454   0015D2                     i2u552_41:
  6455   0015D2  EF06  F00B         	goto	i2l1121
  6456   0015D6                     i2u552_40:
  6457   0015D6  A0F2               	btfss	242,0,c	;volatile
  6458   0015D8  EFF0  F00A         	goto	i2u553_41
  6459   0015DC  EFF2  F00A         	goto	i2u553_40
  6460   0015E0                     i2u553_41:
  6461   0015E0  EF06  F00B         	goto	i2l1121
  6462   0015E4                     i2u553_40:
  6463   0015E4  AE81               	btfss	129,7,c	;volatile
  6464   0015E6  EFF7  F00A         	goto	i2u554_41
  6465   0015EA  EFF9  F00A         	goto	i2u554_40
  6466   0015EE                     i2u554_41:
  6467   0015EE  EF06  F00B         	goto	i2l1121
  6468   0015F2                     i2u554_40:
  6469   0015F2  0464               	decf	_RB7_Flag^0,w,c	;volatile
  6470   0015F4  A4D8               	btfss	status,2,c
  6471   0015F6  EFFF  F00A         	goto	i2u555_41
  6472   0015FA  EF01  F00B         	goto	i2u555_40
  6473   0015FE                     i2u555_41:
  6474   0015FE  EF06  F00B         	goto	i2l1121
  6475   001602                     i2u555_40:
  6476   001602                     
  6477                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 111:        (PORTBbits.RB7 == GPIO_HIGH)
      +                           && (RB7_Flag == 1)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 112:         RB7_Fl
      +                          ag = 0;
  6478   001602  0E00               	movlw	0
  6479   001604  6E64               	movwf	_RB7_Flag^0,c	;volatile
  6480   001606                     
  6481                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 113:         RB7_ISR(0);
  6482   001606  0E00               	movlw	0
  6483   001608  EC71  F017         	call	_RB7_ISR
  6484   00160C                     i2l1121:
  6485                           
  6486                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 116:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  6487   00160C  A6F2               	btfss	242,3,c	;volatile
  6488   00160E  EF0B  F00B         	goto	i2u556_41
  6489   001612  EF0D  F00B         	goto	i2u556_40
  6490   001616                     i2u556_41:
  6491   001616  EF28  F00B         	goto	i2l1123
  6492   00161A                     i2u556_40:
  6493   00161A  A0F2               	btfss	242,0,c	;volatile
  6494   00161C  EF12  F00B         	goto	i2u557_41
  6495   001620  EF14  F00B         	goto	i2u557_40
  6496   001624                     i2u557_41:
  6497   001624  EF28  F00B         	goto	i2l1123
  6498   001628                     i2u557_40:
  6499   001628  BE81               	btfsc	129,7,c	;volatile
  6500   00162A  EF19  F00B         	goto	i2u558_41
  6501   00162E  EF1B  F00B         	goto	i2u558_40
  6502   001632                     i2u558_41:
  6503   001632  EF28  F00B         	goto	i2l1123
  6504   001636                     i2u558_40:
  6505   001636  5064               	movf	_RB7_Flag^0,w,c	;volatile
  6506   001638  A4D8               	btfss	status,2,c
  6507   00163A  EF21  F00B         	goto	i2u559_41
  6508   00163E  EF23  F00B         	goto	i2u559_40
  6509   001642                     i2u559_41:
  6510   001642  EF28  F00B         	goto	i2l1123
  6511   001646                     i2u559_40:
  6512   001646                     
  6513                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 117:        (PORTBbits.RB7 == GPIO_LOW) 
      +                          && (RB7_Flag == 0)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 118:         RB7_Fla
      +                          g = 1;
  6514   001646  0E01               	movlw	1
  6515   001648  6E64               	movwf	_RB7_Flag^0,c	;volatile
  6516   00164A                     
  6517                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 119:         RB7_ISR(1);
  6518   00164A  0E01               	movlw	1
  6519   00164C  EC71  F017         	call	_RB7_ISR
  6520   001650                     i2l1123:
  6521                           
  6522                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 130:       if((1 == PIE1bits.ADIE) && (1
      +                           == PIR1bits.ADIF)){
  6523   001650  AC9D               	btfss	157,6,c	;volatile
  6524   001652  EF2D  F00B         	goto	i2u560_41
  6525   001656  EF2F  F00B         	goto	i2u560_40
  6526   00165A                     i2u560_41:
  6527   00165A  EF38  F00B         	goto	i2l1125
  6528   00165E                     i2u560_40:
  6529   00165E  AC9E               	btfss	158,6,c	;volatile
  6530   001660  EF34  F00B         	goto	i2u561_41
  6531   001664  EF36  F00B         	goto	i2u561_40
  6532   001668                     i2u561_41:
  6533   001668  EF38  F00B         	goto	i2l1125
  6534   00166C                     i2u561_40:
  6535   00166C                     
  6536                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 131:       ADC_ISR();
  6537   00166C  EC1D  F017         	call	_ADC_ISR	;wreg free
  6538   001670                     i2l1125:
  6539                           
  6540                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 192:        if((1 == PIE1bits.TXIE) && (
      +                          1 == PIR1bits.TXIF)){
  6541   001670  A89D               	btfss	157,4,c	;volatile
  6542   001672  EF3D  F00B         	goto	i2u562_41
  6543   001676  EF3F  F00B         	goto	i2u562_40
  6544   00167A                     i2u562_41:
  6545   00167A  EF48  F00B         	goto	i2l1127
  6546   00167E                     i2u562_40:
  6547   00167E  A89E               	btfss	158,4,c	;volatile
  6548   001680  EF44  F00B         	goto	i2u563_41
  6549   001684  EF46  F00B         	goto	i2u563_40
  6550   001688                     i2u563_41:
  6551   001688  EF48  F00B         	goto	i2l1127
  6552   00168C                     i2u563_40:
  6553   00168C                     
  6554                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 193:         EUSART_TX_ISR();
  6555   00168C  ECB5  F017         	call	_EUSART_TX_ISR	;wreg free
  6556   001690                     i2l1127:
  6557                           
  6558                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 199:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
  6559   001690  AA9D               	btfss	157,5,c	;volatile
  6560   001692  EF4D  F00B         	goto	i2u564_41
  6561   001696  EF4F  F00B         	goto	i2u564_40
  6562   00169A                     i2u564_41:
  6563   00169A  EF58  F00B         	goto	i2l1130
  6564   00169E                     i2u564_40:
  6565   00169E  AA9E               	btfss	158,5,c	;volatile
  6566   0016A0  EF54  F00B         	goto	i2u565_41
  6567   0016A4  EF56  F00B         	goto	i2u565_40
  6568   0016A8                     i2u565_41:
  6569   0016A8  EF58  F00B         	goto	i2l1130
  6570   0016AC                     i2u565_40:
  6571   0016AC                     
  6572                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 200:         EUSART_RX_ISR();
  6573   0016AC  ECB8  F017         	call	_EUSART_RX_ISR	;wreg free
  6574   0016B0                     i2l1130:
  6575   0016B0  C00C  FFDA         	movff	??_InterruptManager+3,fsr2h
  6576   0016B4  C00B  FFD9         	movff	??_InterruptManager+2,fsr2l
  6577   0016B8  C00A  FFFB         	movff	??_InterruptManager+1,pclatu
  6578   0016BC  C009  FFFA         	movff	??_InterruptManager,pclath
  6579   0016C0  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6580   0016C2  0011               	retfie		f
  6581   0016C4                     __end_of_InterruptManager:
  6582                           	callstack 0
  6583                           
  6584 ;; *************** function _RB7_ISR *****************
  6585 ;; Defined at:
  6586 ;;		line 166 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  RB7_Source      1    wreg     unsigned char 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      void 
  6593 ;; Registers used:
  6594 ;;		wreg, status,2, status,0
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;Total ram usage:        1 bytes
  6605 ;; Hardware stack levels used: 1
  6606 ;; This function calls:
  6607 ;;		Nothing
  6608 ;; This function is called by:
  6609 ;;		_InterruptManager
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text39
  6614   002EE2                     __ptext39:
  6615                           	callstack 0
  6616   002EE2                     _RB7_ISR:
  6617                           	callstack 20
  6618                           
  6619                           ;incstack = 0
  6620                           ;RB7_ISR@RB7_Source stored from wreg
  6621   002EE2  6E01               	movwf	RB7_ISR@RB7_Source^0,c
  6622   002EE4                     
  6623                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 168:     (INTCONbits.RBIF = 0);
  6624   002EE4  90F2               	bcf	242,0,c	;volatile
  6625   002EE6                     
  6626                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 171:     if(0 == RB7_Source){
  6627   002EE6  5001               	movf	RB7_ISR@RB7_Source^0,w,c
  6628   002EE8  A4D8               	btfss	status,2,c
  6629   002EEA  EF79  F017         	goto	i2u446_41
  6630   002EEE  EF7B  F017         	goto	i2u446_40
  6631   002EF2                     i2u446_41:
  6632   002EF2  EF7D  F017         	goto	i2l6326
  6633   002EF6                     i2u446_40:
  6634   002EF6  EF7D  F017         	goto	i2l950
  6635   002EFA                     i2l6326:
  6636   002EFA                     i2l950:
  6637   002EFA  0012               	return		;funcret
  6638   002EFC                     __end_of_RB7_ISR:
  6639                           	callstack 0
  6640                           
  6641 ;; *************** function _RB6_ISR *****************
  6642 ;; Defined at:
  6643 ;;		line 147 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  RB6_Source      1    wreg     unsigned char 
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;Total ram usage:        1 bytes
  6662 ;; Hardware stack levels used: 1
  6663 ;; This function calls:
  6664 ;;		Nothing
  6665 ;; This function is called by:
  6666 ;;		_InterruptManager
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text40
  6671   002EFC                     __ptext40:
  6672                           	callstack 0
  6673   002EFC                     _RB6_ISR:
  6674                           	callstack 20
  6675                           
  6676                           ;incstack = 0
  6677                           ;RB6_ISR@RB6_Source stored from wreg
  6678   002EFC  6E01               	movwf	RB6_ISR@RB6_Source^0,c
  6679   002EFE                     
  6680                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 149:     (INTCONbits.RBIF = 0);
  6681   002EFE  90F2               	bcf	242,0,c	;volatile
  6682   002F00                     
  6683                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 152:     if(0 == RB6_Source){
  6684   002F00  5001               	movf	RB6_ISR@RB6_Source^0,w,c
  6685   002F02  A4D8               	btfss	status,2,c
  6686   002F04  EF86  F017         	goto	i2u445_41
  6687   002F08  EF88  F017         	goto	i2u445_40
  6688   002F0C                     i2u445_41:
  6689   002F0C  EF8A  F017         	goto	i2l6312
  6690   002F10                     i2u445_40:
  6691   002F10  EF8A  F017         	goto	i2l939
  6692   002F14                     i2l6312:
  6693   002F14                     i2l939:
  6694   002F14  0012               	return		;funcret
  6695   002F16                     __end_of_RB6_ISR:
  6696                           	callstack 0
  6697                           
  6698 ;; *************** function _RB5_ISR *****************
  6699 ;; Defined at:
  6700 ;;		line 128 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  RB5_Source      1    wreg     unsigned char 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  1    wreg      void 
  6707 ;; Registers used:
  6708 ;;		wreg, status,2, status,0
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6718 ;;Total ram usage:        1 bytes
  6719 ;; Hardware stack levels used: 1
  6720 ;; This function calls:
  6721 ;;		Nothing
  6722 ;; This function is called by:
  6723 ;;		_InterruptManager
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text41
  6728   002F16                     __ptext41:
  6729                           	callstack 0
  6730   002F16                     _RB5_ISR:
  6731                           	callstack 20
  6732                           
  6733                           ;incstack = 0
  6734                           ;RB5_ISR@RB5_Source stored from wreg
  6735   002F16  6E01               	movwf	RB5_ISR@RB5_Source^0,c
  6736   002F18                     
  6737                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 130:     (INTCONbits.RBIF = 0);
  6738   002F18  90F2               	bcf	242,0,c	;volatile
  6739   002F1A                     
  6740                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 133:     if(0 == RB5_Source){
  6741   002F1A  5001               	movf	RB5_ISR@RB5_Source^0,w,c
  6742   002F1C  A4D8               	btfss	status,2,c
  6743   002F1E  EF93  F017         	goto	i2u444_41
  6744   002F22  EF95  F017         	goto	i2u444_40
  6745   002F26                     i2u444_41:
  6746   002F26  EF97  F017         	goto	i2l6298
  6747   002F2A                     i2u444_40:
  6748   002F2A  EF97  F017         	goto	i2l928
  6749   002F2E                     i2l6298:
  6750   002F2E                     i2l928:
  6751   002F2E  0012               	return		;funcret
  6752   002F30                     __end_of_RB5_ISR:
  6753                           	callstack 0
  6754                           
  6755 ;; *************** function _RB4_ISR *****************
  6756 ;; Defined at:
  6757 ;;		line 109 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  RB4_Source      1    wreg     unsigned char 
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      void 
  6764 ;; Registers used:
  6765 ;;		wreg, status,2, status,0
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6775 ;;Total ram usage:        1 bytes
  6776 ;; Hardware stack levels used: 1
  6777 ;; This function calls:
  6778 ;;		Nothing
  6779 ;; This function is called by:
  6780 ;;		_InterruptManager
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text42
  6785   002F30                     __ptext42:
  6786                           	callstack 0
  6787   002F30                     _RB4_ISR:
  6788                           	callstack 20
  6789                           
  6790                           ;incstack = 0
  6791                           ;RB4_ISR@RB4_Source stored from wreg
  6792   002F30  6E01               	movwf	RB4_ISR@RB4_Source^0,c
  6793   002F32                     
  6794                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 111:     (INTCONbits.RBIF = 0);
  6795   002F32  90F2               	bcf	242,0,c	;volatile
  6796   002F34                     
  6797                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 114:     if(0 == RB4_Source){
  6798   002F34  5001               	movf	RB4_ISR@RB4_Source^0,w,c
  6799   002F36  A4D8               	btfss	status,2,c
  6800   002F38  EFA0  F017         	goto	i2u443_41
  6801   002F3C  EFA2  F017         	goto	i2u443_40
  6802   002F40                     i2u443_41:
  6803   002F40  EFA4  F017         	goto	i2l6284
  6804   002F44                     i2u443_40:
  6805   002F44  EFA4  F017         	goto	i2l917
  6806   002F48                     i2l6284:
  6807   002F48                     i2l917:
  6808   002F48  0012               	return		;funcret
  6809   002F4A                     __end_of_RB4_ISR:
  6810                           	callstack 0
  6811                           
  6812 ;; *************** function _INT2_ISR *****************
  6813 ;; Defined at:
  6814 ;;		line 97 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;		None
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;		None
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      void 
  6821 ;; Registers used:
  6822 ;;		None
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;Total ram usage:        0 bytes
  6833 ;; Hardware stack levels used: 1
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_InterruptManager
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text43
  6842   002F5E                     __ptext43:
  6843                           	callstack 0
  6844   002F5E                     _INT2_ISR:
  6845                           	callstack 20
  6846   002F5E                     
  6847                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 99:     (INTCON3bits.INT2IF = 0);
  6848   002F5E  92F0               	bcf	240,1,c	;volatile
  6849   002F60  0012               	return		;funcret
  6850   002F62                     __end_of_INT2_ISR:
  6851                           	callstack 0
  6852                           
  6853 ;; *************** function _INT1_ISR *****************
  6854 ;; Defined at:
  6855 ;;		line 88 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;		None
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;		None
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      void 
  6862 ;; Registers used:
  6863 ;;		None
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6873 ;;Total ram usage:        0 bytes
  6874 ;; Hardware stack levels used: 1
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_InterruptManager
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text44
  6883   002F62                     __ptext44:
  6884                           	callstack 0
  6885   002F62                     _INT1_ISR:
  6886                           	callstack 20
  6887   002F62                     
  6888                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 90:     (INTCON3bits.INT1IF = 0);
  6889   002F62  90F0               	bcf	240,0,c	;volatile
  6890   002F64  0012               	return		;funcret
  6891   002F66                     __end_of_INT1_ISR:
  6892                           	callstack 0
  6893                           
  6894 ;; *************** function _INT0_ISR *****************
  6895 ;; Defined at:
  6896 ;;		line 75 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;		None
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;		None
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		None
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;Total ram usage:        0 bytes
  6915 ;; Hardware stack levels used: 1
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_InterruptManager
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text45
  6924   002F66                     __ptext45:
  6925                           	callstack 0
  6926   002F66                     _INT0_ISR:
  6927                           	callstack 20
  6928   002F66                     
  6929                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 77:     (INTCONbits.INT0IF = 0);
  6930   002F66  92F2               	bcf	242,1,c	;volatile
  6931   002F68  0012               	return		;funcret
  6932   002F6A                     __end_of_INT0_ISR:
  6933                           	callstack 0
  6934                           
  6935 ;; *************** function _EUSART_TX_ISR *****************
  6936 ;; Defined at:
  6937 ;;		line 246 in file "MCAL_Layer/usart/hal_usart.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;		None
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      void 
  6944 ;; Registers used:
  6945 ;;		None
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;Total ram usage:        0 bytes
  6956 ;; Hardware stack levels used: 1
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_InterruptManager
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text46
  6965   002F6A                     __ptext46:
  6966                           	callstack 0
  6967   002F6A                     _EUSART_TX_ISR:
  6968                           	callstack 20
  6969   002F6A                     
  6970                           ;MCAL_Layer/usart/hal_usart.c: 247:     (PIE1bits.TXIE = 0);
  6971   002F6A  989D               	bcf	157,4,c	;volatile
  6972   002F6C  0012               	return		;funcret
  6973   002F6E                     __end_of_EUSART_TX_ISR:
  6974                           	callstack 0
  6975                           
  6976 ;; *************** function _EUSART_RX_ISR *****************
  6977 ;; Defined at:
  6978 ;;		line 256 in file "MCAL_Layer/usart/hal_usart.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;		None
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;		None
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  1    wreg      void 
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, status,0
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;Total ram usage:        0 bytes
  6997 ;; Hardware stack levels used: 1
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_InterruptManager
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text47
  7006   002F70                     __ptext47:
  7007                           	callstack 0
  7008   002F70                     _EUSART_RX_ISR:
  7009                           	callstack 20
  7010   002F70  0012               	return		;funcret
  7011   002F72                     __end_of_EUSART_RX_ISR:
  7012                           	callstack 0
  7013                           
  7014 ;; *************** function _ADC_ISR *****************
  7015 ;; Defined at:
  7016 ;;		line 302 in file "MCAL_Layer/ADC/hal_adc.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;		None
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      void 
  7023 ;; Registers used:
  7024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7034 ;;Total ram usage:        0 bytes
  7035 ;; Hardware stack levels used: 1
  7036 ;; Hardware stack levels required when called: 2
  7037 ;; This function calls:
  7038 ;;		NULL
  7039 ;;		_ADC_DefaultInterruptHandler
  7040 ;; This function is called by:
  7041 ;;		_InterruptManager
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045                           	psect	text48
  7046   002E3A                     __ptext48:
  7047                           	callstack 0
  7048   002E3A                     _ADC_ISR:
  7049                           	callstack 18
  7050   002E3A                     
  7051                           ;MCAL_Layer/ADC/hal_adc.c: 303:     (PIR1bits.ADIF = 0);
  7052   002E3A  9C9E               	bcf	158,6,c	;volatile
  7053   002E3C                     
  7054                           ;MCAL_Layer/ADC/hal_adc.c: 304:     if(ADC_InterruptHandler){
  7055   002E3C  0100               	movlb	0	; () banked
  7056   002E3E  51AE               	movf	_ADC_InterruptHandler& (0+255),w,b
  7057   002E40  11AF               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7058   002E42  B4D8               	btfsc	status,2,c
  7059   002E44  EF26  F017         	goto	i2u441_41
  7060   002E48  EF28  F017         	goto	i2u441_40
  7061   002E4C                     i2u441_41:
  7062   002E4C  EF34  F017         	goto	i2l453
  7063   002E50                     i2u441_40:
  7064   002E50                     
  7065                           ; BSR set to: 0
  7066                           ;MCAL_Layer/ADC/hal_adc.c: 305:         ADC_InterruptHandler();
  7067   002E50  D802               	call	i2u442_48
  7068   002E52  EF34  F017         	goto	i2u442_49
  7069   002E56                     i2u442_48:
  7070   002E56  0005               	push	
  7071   002E58  6EFA               	movwf	pclath,c
  7072   002E5A  51AE               	movf	_ADC_InterruptHandler& (0+255),w,b
  7073   002E5C  6EFD               	movwf	tosl,c
  7074   002E5E  51AF               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7075   002E60  6EFE               	movwf	tosh,c
  7076   002E62  6AFF               	clrf	tosu,c
  7077   002E64  50FA               	movf	pclath,w,c
  7078   002E66  0012               	return		;indir
  7079   002E68                     i2u442_49:
  7080   002E68                     i2l453:
  7081   002E68  0012               	return		;funcret
  7082   002E6A                     __end_of_ADC_ISR:
  7083                           	callstack 0
  7084                           
  7085 ;; *************** function _ADC_DefaultInterruptHandler *****************
  7086 ;; Defined at:
  7087 ;;		line 195 in file "application.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;		None
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  ret             1    0        unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7105 ;;Total ram usage:        0 bytes
  7106 ;; Hardware stack levels used: 1
  7107 ;; Hardware stack levels required when called: 1
  7108 ;; This function calls:
  7109 ;;		_ADC_GetConversionResult
  7110 ;; This function is called by:
  7111 ;;		_ADC_ISR
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text49
  7116   0024BC                     __ptext49:
  7117                           	callstack 0
  7118   0024BC                     _ADC_DefaultInterruptHandler:
  7119                           	callstack 18
  7120   0024BC                     
  7121                           ;application.c: 197:     if(0 == ADC_Req){
  7122   0024BC  506E               	movf	_ADC_Req^0,w,c
  7123   0024BE  A4D8               	btfss	status,2,c
  7124   0024C0  EF64  F012         	goto	i2u409_41
  7125   0024C4  EF66  F012         	goto	i2u409_40
  7126   0024C8                     i2u409_41:
  7127   0024C8  EF74  F012         	goto	i2l5970
  7128   0024CC                     i2u409_40:
  7129   0024CC  0EEA               	movlw	low _adc_1
  7130   0024CE  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7131   0024D0  0E00               	movlw	high _adc_1
  7132   0024D2  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7133   0024D4  0ED3               	movlw	low _adc_res_1
  7134   0024D6  6E03               	movwf	ADC_GetConversionResult@conversion_result^0,c
  7135   0024D8  0E00               	movlw	high _adc_res_1
  7136   0024DA  6E04               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  7137   0024DC  ECE2  F010         	call	_ADC_GetConversionResult	;wreg free
  7138   0024E0                     
  7139                           ;application.c: 199:         ADC_Req = 1;
  7140   0024E0  0E01               	movlw	1
  7141   0024E2  6E6E               	movwf	_ADC_Req^0,c
  7142                           
  7143                           ;application.c: 200:     }
  7144   0024E4  EFB8  F012         	goto	i2l1681
  7145   0024E8                     i2l5970:
  7146   0024E8  046E               	decf	_ADC_Req^0,w,c
  7147   0024EA  A4D8               	btfss	status,2,c
  7148   0024EC  EF7A  F012         	goto	i2u410_41
  7149   0024F0  EF7C  F012         	goto	i2u410_40
  7150   0024F4                     i2u410_41:
  7151   0024F4  EF8A  F012         	goto	i2l5976
  7152   0024F8                     i2u410_40:
  7153   0024F8  0EEA               	movlw	low _adc_1
  7154   0024FA  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7155   0024FC  0E00               	movlw	high _adc_1
  7156   0024FE  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7157   002500  0ED1               	movlw	low _adc_res_2
  7158   002502  6E03               	movwf	ADC_GetConversionResult@conversion_result^0,c
  7159   002504  0E00               	movlw	high _adc_res_2
  7160   002506  6E04               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  7161   002508  ECE2  F010         	call	_ADC_GetConversionResult	;wreg free
  7162   00250C                     
  7163                           ;application.c: 203:         ADC_Req = 2;
  7164   00250C  0E02               	movlw	2
  7165   00250E  6E6E               	movwf	_ADC_Req^0,c
  7166                           
  7167                           ;application.c: 204:     }
  7168   002510  EFB8  F012         	goto	i2l1681
  7169   002514                     i2l5976:
  7170   002514  0E02               	movlw	2
  7171   002516  186E               	xorwf	_ADC_Req^0,w,c
  7172   002518  A4D8               	btfss	status,2,c
  7173   00251A  EF91  F012         	goto	i2u411_41
  7174   00251E  EF93  F012         	goto	i2u411_40
  7175   002522                     i2u411_41:
  7176   002522  EFA1  F012         	goto	i2l5982
  7177   002526                     i2u411_40:
  7178   002526  0EEA               	movlw	low _adc_1
  7179   002528  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7180   00252A  0E00               	movlw	high _adc_1
  7181   00252C  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7182   00252E  0ECF               	movlw	low _adc_res_3
  7183   002530  6E03               	movwf	ADC_GetConversionResult@conversion_result^0,c
  7184   002532  0E00               	movlw	high _adc_res_3
  7185   002534  6E04               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  7186   002536  ECE2  F010         	call	_ADC_GetConversionResult	;wreg free
  7187   00253A                     
  7188                           ;application.c: 207:         ADC_Req = 3;
  7189   00253A  0E03               	movlw	3
  7190   00253C  6E6E               	movwf	_ADC_Req^0,c
  7191                           
  7192                           ;application.c: 208:     }
  7193   00253E  EFB8  F012         	goto	i2l1681
  7194   002542                     i2l5982:
  7195   002542  0E03               	movlw	3
  7196   002544  186E               	xorwf	_ADC_Req^0,w,c
  7197   002546  A4D8               	btfss	status,2,c
  7198   002548  EFA8  F012         	goto	i2u412_41
  7199   00254C  EFAA  F012         	goto	i2u412_40
  7200   002550                     i2u412_41:
  7201   002550  EFB8  F012         	goto	i2l1676
  7202   002554                     i2u412_40:
  7203   002554  0EEA               	movlw	low _adc_1
  7204   002556  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7205   002558  0E00               	movlw	high _adc_1
  7206   00255A  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7207   00255C  0ECD               	movlw	low _adc_res_4
  7208   00255E  6E03               	movwf	ADC_GetConversionResult@conversion_result^0,c
  7209   002560  0E00               	movlw	high _adc_res_4
  7210   002562  6E04               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  7211   002564  ECE2  F010         	call	_ADC_GetConversionResult	;wreg free
  7212   002568                     
  7213                           ;application.c: 211:         ADC_Req = 0;
  7214   002568  0E00               	movlw	0
  7215   00256A  6E6E               	movwf	_ADC_Req^0,c
  7216                           
  7217                           ;application.c: 212:     }
  7218   00256C  EFB8  F012         	goto	i2l1681
  7219   002570                     i2l1676:
  7220   002570                     i2l1681:
  7221   002570  0012               	return		;funcret
  7222   002572                     __end_of_ADC_DefaultInterruptHandler:
  7223                           	callstack 0
  7224                           
  7225 ;; *************** function _ADC_GetConversionResult *****************
  7226 ;; Defined at:
  7227 ;;		line 181 in file "MCAL_Layer/ADC/hal_adc.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  _adc            2    0[COMRAM] PTR const struct .
  7230 ;;		 -> adc_1(7), 
  7231 ;;  conversion_r    2    2[COMRAM] PTR unsigned short 
  7232 ;;		 -> adc_res_4(2), adc_res_3(2), adc_res_2(2), adc_res_1(2), 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  ret             1    7[COMRAM] unsigned char 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      unsigned char 
  7237 ;; Registers used:
  7238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;Total ram usage:        8 bytes
  7249 ;; Hardware stack levels used: 1
  7250 ;; This function calls:
  7251 ;;		Nothing
  7252 ;; This function is called by:
  7253 ;;		_ADC_DefaultInterruptHandler
  7254 ;;		_ADC_GetConversion_Blocking
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           	psect	text50
  7259   0021C4                     __ptext50:
  7260                           	callstack 0
  7261   0021C4                     _ADC_GetConversionResult:
  7262                           	callstack 18
  7263   0021C4                     
  7264                           ;MCAL_Layer/ADC/hal_adc.c: 183:     if((((void*)0) == _adc) || (((void*)0) == conversion
      +                          _result)){
  7265   0021C4  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  7266   0021C6  1002               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  7267   0021C8  B4D8               	btfsc	status,2,c
  7268   0021CA  EFE9  F010         	goto	i2u381_41
  7269   0021CE  EFEB  F010         	goto	i2u381_40
  7270   0021D2                     i2u381_41:
  7271   0021D2  EFF4  F010         	goto	i2l5738
  7272   0021D6                     i2u381_40:
  7273   0021D6  5003               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  7274   0021D8  1004               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
  7275   0021DA  A4D8               	btfss	status,2,c
  7276   0021DC  EFF2  F010         	goto	i2u382_41
  7277   0021E0  EFF4  F010         	goto	i2u382_40
  7278   0021E4                     i2u382_41:
  7279   0021E4  EFF8  F010         	goto	i2l5740
  7280   0021E8                     i2u382_40:
  7281   0021E8                     i2l5738:
  7282                           
  7283                           ;MCAL_Layer/ADC/hal_adc.c: 184:         ret = (Std_ReturnType)0x00;
  7284   0021E8  0E00               	movlw	0
  7285   0021EA  6E08               	movwf	ADC_GetConversionResult@ret^0,c
  7286                           
  7287                           ;MCAL_Layer/ADC/hal_adc.c: 185:     }
  7288   0021EC  EF42  F011         	goto	i2l5752
  7289   0021F0                     i2l5740:
  7290                           
  7291                           ;MCAL_Layer/ADC/hal_adc.c: 187:         if(0x01U == _adc->result_format){
  7292   0021F0  EE20 F006          	lfsr	2,6
  7293   0021F4  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  7294   0021F6  26D9               	addwf	fsr2l,f,c
  7295   0021F8  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  7296   0021FA  22DA               	addwfc	fsr2h,f,c
  7297   0021FC  A2DF               	btfss	indf2,1,c
  7298   0021FE  EF03  F011         	goto	i2u383_41
  7299   002202  EF05  F011         	goto	i2u383_40
  7300   002206                     i2u383_41:
  7301   002206  EF19  F011         	goto	i2l5744
  7302   00220A                     i2u383_40:
  7303   00220A                     i2l5742:
  7304                           
  7305                           ;MCAL_Layer/ADC/hal_adc.c: 188:             *conversion_result = (adc_result_t)((ADRESH 
      +                          << 8) + ADRESL);
  7306   00220A  50C3               	movf	195,w,c	;volatile
  7307   00220C  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  7308   002210  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7309   002212  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  7310   002216  6A05               	clrf	??_ADC_GetConversionResult^0,c
  7311   002218  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  7312   00221A  0E00               	movlw	0
  7313   00221C  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  7314   00221E  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  7315   002222  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  7316   002226  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7317   00222A  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7318                           
  7319                           ;MCAL_Layer/ADC/hal_adc.c: 189:         }
  7320   00222E  EF40  F011         	goto	i2l5750
  7321   002232                     i2l5744:
  7322   002232  EE20 F006          	lfsr	2,6
  7323   002236  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  7324   002238  26D9               	addwf	fsr2l,f,c
  7325   00223A  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  7326   00223C  22DA               	addwfc	fsr2h,f,c
  7327   00223E  B2DF               	btfsc	indf2,1,c
  7328   002240  EF24  F011         	goto	i2u384_41
  7329   002244  EF26  F011         	goto	i2u384_40
  7330   002248                     i2u384_41:
  7331   002248  EF05  F011         	goto	i2l5742
  7332   00224C                     i2u384_40:
  7333   00224C                     
  7334                           ;MCAL_Layer/ADC/hal_adc.c: 191:             *conversion_result = (adc_result_t)(((ADRESH
      +                           << 8) + ADRESL) >> 6);
  7335   00224C  50C3               	movf	195,w,c	;volatile
  7336   00224E  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  7337   002252  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7338   002254  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  7339   002258  6A05               	clrf	??_ADC_GetConversionResult^0,c
  7340   00225A  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  7341   00225C  0E00               	movlw	0
  7342   00225E  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  7343   002260  0E06               	movlw	6
  7344   002262  6E07               	movwf	(??_ADC_GetConversionResult+2)^0,c
  7345   002264                     i2u385_45:
  7346   002264  3406               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  7347   002266  3206               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  7348   002268  3205               	rrcf	??_ADC_GetConversionResult^0,f,c
  7349   00226A  2E07               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  7350   00226C  EF32  F011         	goto	i2u385_45
  7351   002270  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  7352   002274  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  7353   002278  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7354   00227C  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7355   002280                     i2l5750:
  7356                           
  7357                           ;MCAL_Layer/ADC/hal_adc.c: 196:         ret = (Std_ReturnType)0x01;
  7358   002280  0E01               	movlw	1
  7359   002282  6E08               	movwf	ADC_GetConversionResult@ret^0,c
  7360   002284                     i2l5752:
  7361                           
  7362                           ;MCAL_Layer/ADC/hal_adc.c: 198:     return ret;
  7363   002284  5008               	movf	ADC_GetConversionResult@ret^0,w,c
  7364   002286  0012               	return		;funcret
  7365   002288                     __end_of_ADC_GetConversionResult:
  7366                           	callstack 0
  7367                           
  7368                           	psect	text51
  7369   000000                     __ptext51:
  7370                           	callstack 0
  7371   000000                     
  7372                           	psect	rparam
  7373   000000                     
  7374                           	psect	temp
  7375   000073                     btemp:
  7376                           	callstack 0
  7377   000073                     	ds	1
  7378   000000                     int$flags	set	btemp
  7379   000000                     wtemp8	set	btemp+1
  7380   000000                     ttemp5	set	btemp+1
  7381   000000                     ttemp6	set	btemp+4
  7382   000000                     ttemp7	set	btemp+8
  7383                           
  7384                           	psect	idloc
  7385                           
  7386                           ;Config register IDLOC0 @ 0x200000
  7387                           ;	unspecified, using default values
  7388   200000                     	org	2097152
  7389   200000  FF                 	db	255
  7390                           
  7391                           ;Config register IDLOC1 @ 0x200001
  7392                           ;	unspecified, using default values
  7393   200001                     	org	2097153
  7394   200001  FF                 	db	255
  7395                           
  7396                           ;Config register IDLOC2 @ 0x200002
  7397                           ;	unspecified, using default values
  7398   200002                     	org	2097154
  7399   200002  FF                 	db	255
  7400                           
  7401                           ;Config register IDLOC3 @ 0x200003
  7402                           ;	unspecified, using default values
  7403   200003                     	org	2097155
  7404   200003  FF                 	db	255
  7405                           
  7406                           ;Config register IDLOC4 @ 0x200004
  7407                           ;	unspecified, using default values
  7408   200004                     	org	2097156
  7409   200004  FF                 	db	255
  7410                           
  7411                           ;Config register IDLOC5 @ 0x200005
  7412                           ;	unspecified, using default values
  7413   200005                     	org	2097157
  7414   200005  FF                 	db	255
  7415                           
  7416                           ;Config register IDLOC6 @ 0x200006
  7417                           ;	unspecified, using default values
  7418   200006                     	org	2097158
  7419   200006  FF                 	db	255
  7420                           
  7421                           ;Config register IDLOC7 @ 0x200007
  7422                           ;	unspecified, using default values
  7423   200007                     	org	2097159
  7424   200007  FF                 	db	255
  7425                           
  7426                           	psect	config
  7427                           
  7428                           ; Padding undefined space
  7429   300000                     	org	3145728
  7430   300000  FF                 	db	255
  7431                           
  7432                           ;Config register CONFIG1H @ 0x300001
  7433                           ;	Oscillator Selection bits
  7434                           ;	OSC = HS, HS oscillator
  7435                           ;	Fail-Safe Clock Monitor Enable bit
  7436                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7437                           ;	Internal/External Oscillator Switchover bit
  7438                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7439   300001                     	org	3145729
  7440   300001  02                 	db	2
  7441                           
  7442                           ;Config register CONFIG2L @ 0x300002
  7443                           ;	Power-up Timer Enable bit
  7444                           ;	PWRT = OFF, PWRT disabled
  7445                           ;	Brown-out Reset Enable bits
  7446                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7447                           ;	Brown Out Reset Voltage bits
  7448                           ;	BORV = 1, 
  7449   300002                     	org	3145730
  7450   300002  09                 	db	9
  7451                           
  7452                           ;Config register CONFIG2H @ 0x300003
  7453                           ;	Watchdog Timer Enable bit
  7454                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7455                           ;	Watchdog Timer Postscale Select bits
  7456                           ;	WDTPS = 32768, 1:32768
  7457   300003                     	org	3145731
  7458   300003  1E                 	db	30
  7459                           
  7460                           ; Padding undefined space
  7461   300004                     	org	3145732
  7462   300004  FF                 	db	255
  7463                           
  7464                           ;Config register CONFIG3H @ 0x300005
  7465                           ;	CCP2 MUX bit
  7466                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7467                           ;	PORTB A/D Enable bit
  7468                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7469                           ;	Low-Power Timer1 Oscillator Enable bit
  7470                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7471                           ;	MCLR Pin Enable bit
  7472                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7473   300005                     	org	3145733
  7474   300005  81                 	db	129
  7475                           
  7476                           ;Config register CONFIG4L @ 0x300006
  7477                           ;	Stack Full/Underflow Reset Enable bit
  7478                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7479                           ;	Single-Supply ICSP Enable bit
  7480                           ;	LVP = OFF, Single-Supply ICSP disabled
  7481                           ;	Extended Instruction Set Enable bit
  7482                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7483                           ;	Background Debugger Enable bit
  7484                           ;	DEBUG = 0x1, unprogrammed default
  7485   300006                     	org	3145734
  7486   300006  81                 	db	129
  7487                           
  7488                           ; Padding undefined space
  7489   300007                     	org	3145735
  7490   300007  FF                 	db	255
  7491                           
  7492                           ;Config register CONFIG5L @ 0x300008
  7493                           ;	Code Protection bit
  7494                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7495                           ;	Code Protection bit
  7496                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7497                           ;	Code Protection bit
  7498                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7499                           ;	Code Protection bit
  7500                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7501   300008                     	org	3145736
  7502   300008  0F                 	db	15
  7503                           
  7504                           ;Config register CONFIG5H @ 0x300009
  7505                           ;	Boot Block Code Protection bit
  7506                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7507                           ;	Data EEPROM Code Protection bit
  7508                           ;	CPD = OFF, Data EEPROM not code-protected
  7509   300009                     	org	3145737
  7510   300009  C0                 	db	192
  7511                           
  7512                           ;Config register CONFIG6L @ 0x30000A
  7513                           ;	Write Protection bit
  7514                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7515                           ;	Write Protection bit
  7516                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7517                           ;	Write Protection bit
  7518                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7519                           ;	Write Protection bit
  7520                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7521   30000A                     	org	3145738
  7522   30000A  0F                 	db	15
  7523                           
  7524                           ;Config register CONFIG6H @ 0x30000B
  7525                           ;	Configuration Register Write Protection bit
  7526                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7527                           ;	Boot Block Write Protection bit
  7528                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7529                           ;	Data EEPROM Write Protection bit
  7530                           ;	WRTD = OFF, Data EEPROM not write-protected
  7531   30000B                     	org	3145739
  7532   30000B  E0                 	db	224
  7533                           
  7534                           ;Config register CONFIG7L @ 0x30000C
  7535                           ;	Table Read Protection bit
  7536                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7537                           ;	Table Read Protection bit
  7538                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7539                           ;	Table Read Protection bit
  7540                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7541                           ;	Table Read Protection bit
  7542                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7543   30000C                     	org	3145740
  7544   30000C  0F                 	db	15
  7545                           
  7546                           ;Config register CONFIG7H @ 0x30000D
  7547                           ;	Boot Block Table Read Protection bit
  7548                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7549   30000D                     	org	3145741
  7550   30000D  40                 	db	64
  7551                           tosu	equ	0xFFF
  7552                           tosh	equ	0xFFE
  7553                           tosl	equ	0xFFD
  7554                           stkptr	equ	0xFFC
  7555                           pclatu	equ	0xFFB
  7556                           pclath	equ	0xFFA
  7557                           pcl	equ	0xFF9
  7558                           tblptru	equ	0xFF8
  7559                           tblptrh	equ	0xFF7
  7560                           tblptrl	equ	0xFF6
  7561                           tablat	equ	0xFF5
  7562                           prodh	equ	0xFF4
  7563                           prodl	equ	0xFF3
  7564                           indf0	equ	0xFEF
  7565                           postinc0	equ	0xFEE
  7566                           postdec0	equ	0xFED
  7567                           preinc0	equ	0xFEC
  7568                           plusw0	equ	0xFEB
  7569                           fsr0h	equ	0xFEA
  7570                           fsr0l	equ	0xFE9
  7571                           wreg	equ	0xFE8
  7572                           indf1	equ	0xFE7
  7573                           postinc1	equ	0xFE6
  7574                           postdec1	equ	0xFE5
  7575                           preinc1	equ	0xFE4
  7576                           plusw1	equ	0xFE3
  7577                           fsr1h	equ	0xFE2
  7578                           fsr1l	equ	0xFE1
  7579                           bsr	equ	0xFE0
  7580                           indf2	equ	0xFDF
  7581                           postinc2	equ	0xFDE
  7582                           postdec2	equ	0xFDD
  7583                           preinc2	equ	0xFDC
  7584                           plusw2	equ	0xFDB
  7585                           fsr2h	equ	0xFDA
  7586                           fsr2l	equ	0xFD9
  7587                           status	equ	0xFD8

Data Sizes:
    Strings     45
    Constant    16
    Data        60
    BSS         128
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     99     114
    BANK0           128      0     125
    BANK1           256     12      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    timer1_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S4561$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(BANK1[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S4508$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4508$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 6
		 -> adc_res_4_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_1_txt(BANK0[6]), 

    memset@s	PTR unsigned char  size(2) Largest target is 6
		 -> adc_res_4_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_1_txt(BANK0[6]), 

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3463$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3463$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3463$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3463$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1994$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2110$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2110$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_read_logic@logic	PTR enum E2968 size(2) Largest target is 1
		 -> keypad_read_switch@status_pin(COMRAM[1]), button_read_state@Pin_Logic_Status(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 3
		 -> btn_high1(BANK0[3]), btn_high(BANK0[3]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> btn_high1(BANK0[3]), btn_high(BANK0[3]), lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    configure_voltage_reference@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    select_result_format@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion_Interrupt@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adc_res_4(BANK0[2]), adc_res_3(BANK0[2]), adc_res_2(BANK0[2]), adc_res_1(BANK0[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    S659$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    led_turn_off@led	PTR const struct . size(2) Largest target is 1
		 -> led4(COMRAM[1]), led2(COMRAM[1]), led3(COMRAM[1]), led1(COMRAM[1]), 

    led_turn_on@led	PTR const struct . size(2) Largest target is 1
		 -> led4(COMRAM[1]), led2(COMRAM[1]), led3(COMRAM[1]), led1(COMRAM[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led4(COMRAM[1]), led2(COMRAM[1]), led3(COMRAM[1]), led1(COMRAM[1]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> adc_res_4_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_1_txt(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 6
		 -> adc_res_4_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_1_txt(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 14
		 -> adc_res_4_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_1_txt(BANK0[6]), 
		 -> STR_8(CODE[7]), STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[7]), 
		 -> STR_4(CODE[14]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    button_read_state@btn_state	PTR enum E3028 size(2) Largest target is 1
		 -> btn_high1_con(COMRAM[1]), btn_high_con(COMRAM[1]), 

    button_read_state@btn	PTR const struct . size(2) Largest target is 3
		 -> btn_high1(BANK0[3]), btn_high(BANK0[3]), 

    button_initialize@btn	PTR const struct . size(2) Largest target is 3
		 -> btn_high1(BANK0[3]), btn_high(BANK0[3]), 


Critical Paths under _main in COMRAM

    _led_turn_on->_gpio_pin_write_logic
    _led_turn_off->_gpio_pin_write_logic
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _button_read_state->_gpio_pin_read_logic
    _application_intialize->_led_initialize
    _led_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _button_initialize->_gpio_pin_direction_intialize
    _ADC_StartConversion_Interrupt->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure
    _ADC_Init->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in COMRAM

    _ADC_DefaultInterruptHandler->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_convert_uint16_to_string

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  115461
                                             96 COMRAM     3     3      0
                           _ADC_Init
      _ADC_StartConversion_Interrupt
              _application_intialize
                  _button_read_state
           _convert_uint16_to_string
                 _lcd_4bit_intialize
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2    5323
                                             22 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         5     3      2    5627
                                             22 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   38611
                                             37 COMRAM     7     1      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   19024
                                             30 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   16670
                                             26 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_intialize                                   6     4      2   25687
                                             30 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   18342
                                             26 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5702
                                             22 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    5264
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4   10594
                                              0 BANK1     12     8      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    7642
                                             74 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             66 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             52 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             12 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _button_read_state                                    7     3      4    1209
                                             22 COMRAM     7     3      4
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     612
                                             12 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0    8121
                  _button_initialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (2) _led_initialize                                       5     3      2    7334
                                             26 COMRAM     5     3      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_intialize                                   4     2      2    6878
                                             22 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    4891
                                             12 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _button_initialize                                    3     1      2     780
                                             21 COMRAM     3     1      2
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         9     7      2     559
                                             12 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_Interrupt                        4     1      3    1339
                                             20 COMRAM     4     1      3
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     199
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     417
                                             15 COMRAM     5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             4     2      2     539
                                             15 COMRAM     4     2      2
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (2) _select_result_format                                 2     0      2     120
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _configure_voltage_reference                          2     0      2     120
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      22
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManager                                    4     4      0    1120
                                              8 COMRAM     4     4      0
                            _ADC_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_TX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_RX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0     944
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultInterruptHandler                         1     1      0     944
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (13) _ADC_GetConversionResult                             8     4      4     939
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
     _adc_input_channel_port_configure
     _configure_voltage_reference
     _select_result_format
   _ADC_StartConversion_Interrupt
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   _application_intialize
     _button_initialize
       _gpio_pin_direction_intialize
     _led_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
   _button_read_state
     _gpio_pin_read_logic
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _lcd_4bit_intialize
     _gpio_pin_intialize
     _lcd_4bit_send_command
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
         _gpio_pin_write_logic
       _lcd_send_4bits
         _gpio_pin_write_logic
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _led_turn_off
     _gpio_pin_write_logic
   _led_turn_on
     _gpio_pin_write_logic

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
       _ADC_GetConversionResult
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      C      3C       7       23.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7D       5       97.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     63      72       1       90.5%
BITBIGSFRhlhhlh     18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhlll      7      0       0      42        0.0%
BITBIGSFRlllhh       6      0       0      43        0.0%
BITBIGSFRhlhhll      5      0       0      39        0.0%
BITBIGSFRllhllh      4      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      45        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12B      20        0.0%
DATA                 0      0     12B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 20 06:56:26 2023

                      ??_InterruptManager 0009                           ?_lcd_send_4bits 0017  
                             _SSPSTATbits 0FC7                                        l23 2E94  
                                      l29 20FC                                        l38 20FE  
                                      l74 2ABA                                        l69 1C3E  
                                      l79 2A48                              ___awdiv@sign 0012  
                                     l100 2768                                       l208 26C8  
                                     l410 2D46                                       l171 2402  
                                     l182 2B8E                                       l440 2C90  
                                     l360 22A2                                       l408 2D1E  
                                     l281 2870                                       l185 2E38  
                                     l434 2D88                                       l362 2346  
                                     l291 2978                                       l444 2CB2  
                                     l436 2D8A                                       l372 2E04  
                                     l284 2902                                       l429 1F6E  
                                     l277 2814                                       l447 2CBA  
                                     l375 2ED8                                       l295 29D6  
                                     l376 2EDE                                       l720 24BA  
                                     l288 2960                                       l449 2CBE  
                                     l377 2EE0                                       l713 1E96  
                                     l734 2B26                                       l694 1B12  
     __end_of_configure_voltage_reference 2CC0               _configure_voltage_reference 2C76  
                                     _PR2 0FCB                                       _abs 2D8C  
                                     _pad 2872                 _RB5_InterruptHandler_HIGH 00A0  
                         __end_of_ADC_ISR 2E6A                                       _ret 00E9  
     __end_of_lcd_4bit_send_enable_signal 2E3A               _lcd_4bit_send_enable_signal 2E06  
                            ___awmod@sign 0012                       led_initialize@F3048 0072  
                                     prod 0FF3                     relay_initialize@F3042 00B4  
                                     tosl 0FFD                                       wreg 0FE8  
                            ?_led_turn_on 0017               lcd_send_4bits@_data_command 0019  
          ?_ADC_StartConversion_Interrupt 0015              ?_ADC_DefaultInterruptHandler 0001  
               ?_convert_uint16_to_string 0126                           __end_of_RB4_ISR 2F4A  
                         __end_of_RB5_ISR 2F30                           __end_of_RB6_ISR 2F16  
                         __end_of_RB7_ISR 2EFC                                      ?_abs 0013  
                                    l2403 170C                                      l2405 1714  
                                    l2406 175A                                      l2430 2BDE  
                                    l2424 1D6A                                      l2417 1858  
                                    l2434 2DC2                                      l2460 2F6E  
                                    l2372 2C2A                                      l1652 11A2  
                                    l2437 2DCA                                      l1670 2C74  
                                    l2359 19CE                                      l6000 209A  
                                    l2449 2038                                      l2457 2D02  
                                    l6002 20AA                                      l2394 2894  
                                    l1915 21C2                                      l6004 20B8  
                                    l6020 1B18                                      l6014 20F8  
                                    l6006 20C8                                      l2398 28EA  
                                    l6022 1B2A                                      l6008 20E4  
                                    l1928 2620                                      l6040 1B94  
                                    l6032 1B56                                      l6024 1B32  
                                    l6200 29B4                                      l6210 229A  
                                    l6050 1BEA                                      l6042 1BA4  
                                    l6034 1B72                                      l6026 1B52  
                                    l6018 1B14                                      l6202 29C6  
                                    l6220 2312                                      l6212 22A4  
                                    l6052 1BFA                                      l6044 1BC4  
                                    l6036 1B74                                      l6060 1C3C  
                                    l6230 233E                                      l6222 2314  
                                    l6214 22FC                                      l6206 2288  
                                    l6054 1C0A                                      l6046 1BCA  
                                    l6038 1B84                                      ?_pad 001D  
                                    l6232 2340                                      l6224 2316  
                                    l6216 230E                                      l6208 2288  
                                    l6240 2D04                                      l5600 19E6  
                                    l6400 2C50                                      l6056 1C1A  
                                    l6048 1BDA                                      l6080 26DC  
                                    l8000 1256                                      l6226 2326  
                                    l6218 2310                                      l6234 2344  
                                    l6242 2D16                                      l5610 1ACE  
                                    l5602 1A08                                      l5530 1DAC  
                                    l5522 1D6C                                      l6402 2C5C  
                                    l6058 1C2A                                      l6090 2766  
                                    l6082 26E4                                      l8010 12C4  
                                    l8002 1272                                      l5700 1E9E  
                                    l6228 2332                                      l6244 2D20  
                                    l5604 1A10                                      l5612 1B10  
                                    l5532 1E0E                                      l5524 1D70  
                                    l6404 2C68                                      l5620 2B28  
                                    l6084 26FE                                      l6076 26CA  
                                    l6180 2906                                      l8020 1342  
                                    l8012 12E0                                      l8004 128A  
                                    l5710 1EBC                                      l5702 1EA4  
                                    l6246 2D40                                      l6238 2D04  
                                    l5606 1A72                                      l5526 1D82  
                                    l5622 2B28                                      l8110 26A0  
                                    l6086 2730                                      l6078 26CA  
                                    l6190 2962                                      l6182 293C  
                                    l6174 28EC                                      l8022 1356  
                                    l8006 12A0                                      l8014 12FC  
                                    l5720 1EDA                                      l5712 1EC2  
                                    l5704 1EAA                                      l6248 2D44  
                                    l8112 1E7E                                      l5536 1E6A  
                                    l5528 1DA4                                      l5632 2E06  
                                    l5624 2B3E                                      l5800 29F2  
                                    l6088 2734                                      l6192 2962  
                                    l6184 293E                                      l6176 28EC  
                                    l8024 1366                                      l8016 1314  
                                    l8008 12B4                                      l5722 1EE0  
                                    l5714 1EC8                                      l5706 1EB0  
                                    l8114 1AFA                                      l5538 1E94  
                                    l5634 2E06                                      l5626 2B56  
                                    l5802 2A46                                      l5810 262C  
                                    l6194 2974                                      l6186 2950  
                                    l6178 28FE                                      l8026 1382  
                                    l8018 132C                                      l8116 1F00  
                                    l5724 1EE6                                      l5716 1ECE  
                                    l5708 1EB6                                      l5636 2E1A  
                                    l5628 2B70                                      l5812 2644  
                                    l5820 26C6                                      l6196 297C  
                                    l8028 139E                                      l5718 1ED4  
                                    l5726 1EEC                                      l5910 27FA  
                                    l5638 2E20                                      l5814 265C  
                                    l5806 2622                                      l6198 29B2  
                                    l5680 2AF8                                      l5672 2ABC  
                                    l5920 2862                                      l5912 280C  
                                    l6392 2C2C                                      l5816 2674  
                                    l5808 2626                                      l5930 2D68  
                                    l5770 2E7C                                      l5682 2B24  
                                    l5674 2ABC                                      l5914 2818  
                                    l5922 286E                                      l6394 2C2C  
                                    l5690 2A5C                                      l5818 268C  
                                    l5932 2D82                                      l5940 2DCC  
                                    l5596 19D0                                      l5772 2E84  
                                    l5676 2ACE                                      l5916 284E  
                                    l5908 27F6                                      l6396 2C38  
                                    l5780 2408                                      l7700 25C0  
                                    l7620 1F82                                      l5692 2A64  
                                    l5934 2C76                                      l5926 2D48  
                                    l5950 2E02                                      l5942 2DDE  
                                    l5598 19D4                                      l5774 2E92  
                                    l5766 2E6A                                      l5678 2AF0  
                                    l5918 2850                                      l6398 2C44  
                                    l5790 24B8                                      l5782 241A  
                                    l7710 25FA                                      l7702 25C8  
                                    l7622 1F94                                      l5694 2AB8  
                                    l5686 2A4A                                      l5936 2C98  
                                    l5928 2D62                                      l5944 2DE6  
                                    l5960 2EDA                                      l5768 2E6A  
                                    l5784 242C                                      l7640 2100  
                                    l7704 25D6                                      l7712 2600  
                                    l7624 1F9E                                      l7632 2CC0  
                                    l7720 2872                                      l7800 1CB4  
                                    l5688 2A4A                                      l5698 1E9A  
                                    l5946 2DF8                                      l5938 2DCC  
                                    l5954 2EBE                                      l5786 244E  
                                    l5778 2404                                      l7650 212C  
                                    l7642 2104                                      l7714 2610  
                                    l7706 25EC                                      l7626 1FBC  
                                    l7618 1F70                                      l7634 2CCC  
                                    l7730 28B8                                      l7722 2880  
                                    l7802 1CD2                                      l5794 29D8  
                                    l5948 2DFE                                      l5956 2EBE  
                                    l5788 2456                                      l7660 215A  
                                    l7652 2134                                      l7644 2112  
                                    l7716 2618                                      l7708 25F4  
                                    l7628 1FF2                                      l7636 2CDE  
                                    l7732 28D6                                      l7724 288C  
                                    l7740 16D8                                      l7804 1D16  
                                    l7812 1D40                                      l7820 2B9C  
                                    l5796 29D8                                      l5958 2ED0  
                                    l5990 203E                                      l7670 2194  
                                    l7662 2162                                      l7654 2138  
                                    l7646 211A                                      l7734 2D8C  
                                    l7638 2CE2                                      l7726 28A0  
                                    l7750 172C                                      l7742 16E8  
                                    l7822 2BB8                                      l5798 29EA  
                                    l5992 2050                                      l7840 1912  
                                    l7832 1878                                      l7680 21BA  
                                    l7672 2196                                      l7664 2170  
                                    l7656 2140                                      l7648 211E  
                                    l7736 2DA6                                      l7728 28B4  
                                    l7760 1762                                      l7752 1732  
                                    l7744 16F0                                      l7808 1D2E  
                                    l7824 2BD6                                      l5994 2062  
                                    l7850 1972                                      l7834 1884  
                                    l7674 219C                                      l7666 2176  
                                    l7658 2152                                      l7690 258C  
                                    l7770 17B0                                      l7762 176C  
                                    l7754 1742                                      l7746 1700  
                                    l7738 16C4                                      l7818 2B90  
                                    l5996 206A                                      l5988 203A  
                                    l7852 19A6                                      l7844 192C  
                                    l7828 185A                                      l7668 218C  
                                    l7676 21A2                                      l7692 2590  
                                    l7684 2572                                      l7780 1822  
                                    l7764 1772                                      l7772 17CC  
                                    l7756 174E                                      l7748 171C  
                                    l7860 2BE0                                      l5998 207E  
                                    l7854 19B2                                      l7846 1958  
                                    l7838 18BA                                      l7678 21B2  
                                    l7694 259E                                      l7686 2576  
                                    l7782 1828                                      l7774 17E6  
                                    l7766 17A4                                      l7758 1756  
                                    l7790 1C66                                      l7862 2BF0  
                                    l7856 19B8                                      l7696 25A6  
                                    l7688 2584                                      l7784 1838  
                                    l7776 17F8                                      l7768 17AA  
                                    l7792 1C74                                      l7864 2BF8  
                                    l7880 2370                                      l7872 2348  
                                    l7960 1050                                      l7858 19BC  
                                    l7698 25B8                                      l7778 1812  
                                    l7794 1C82                                      l7866 2C00  
                                    l7890 23E0                                      l7882 2378  
                                    l7874 234E                                      l7970 10BA  
                                    l7962 105C                                      l7954 1040  
                                    l7796 1C86                                      l7788 1C40  
                                    l7868 2C1C                                      l7892 23E2  
                                    l7884 2394                                      l7876 235A  
                                    l7980 1132                                      l7972 10D6  
                                    l7964 1078                                      l7956 1040  
                                    l7798 1C96                                      l7886 23A4  
                                    l7894 2400                                      l7878 235E  
                                    l7990 118E                                      l7982 1142  
                                    l7974 10F2                                      l7966 108E  
                                    l7958 1044                                      l7888 23C4  
                                    l7984 1156                                      l7992 11A2  
                                    l7976 110E                                      l7968 109E  
                                    l7994 1202                                      l7986 1168  
                                    l7978 111E                                      l7996 121E  
                                    l7988 117C                                      l7998 123A  
                                    STR_1 103B                                      STR_2 103B  
                                    STR_4 1011                                      STR_5 101F  
                                    STR_6 1026                                      STR_7 102D  
                                    STR_8 1034                                      _LATA 0F89  
                                    _LATB 0F8A                                      _LATC 0F8B  
                                    _LATD 0F8C                                      _LATE 0F8D  
                                    u4010 280C                                      u4011 2808  
                                    u4030 2D62                                      u4031 2D5E  
                                    u4040 2D82                                      u4200 1B84  
                                    u4041 2D7E                                      u4025 2860  
                                    u4201 1B80                                      u4050 2C90  
                                    u4130 2050                                      u4051 2C8C  
                                    u4027 2862                                      u4131 204C  
                                    u4060 2CB2                                      u4140 2062  
                                    u4220 26DC                                      u4061 2CAE  
                                    u4141 205E                                      u4221 26D8  
                                    u4070 2DDE                                      u4150 209A  
                                    u4230 2728                                      u4071 2DDA  
                                    u4151 2096                                      u4080 2ED0  
                                    u4400 2D16                                      u4160 20AA  
                                    u6000 2152                                      u4240 2756  
                                    u4081 2ECC                                      u4401 2D12  
                                    u4161 20A6                                      u6001 214E  
                                    u4170 20E4                                      u6010 2170  
                                    u4250 2766                                      u4171 20E0  
                                    u6011 216C                                      u4251 2762  
                                    u3700 1A08                                      u4180 20F4  
                                    u6020 218C                                      u6100 2880  
                                    u3701 1A04                                      u4181 20F0  
                                    u6021 2188                                      u6101 287C  
                                    u4237 271E                                      u3550 1D82  
                                    u6030 21B2                                      u6110 28D6  
                                    u4190 1B2A                                      u4350 28FE  
                                    u3551 1D7E                                      u6031 21AE  
                                    u6111 28D2                                      u4191 1B26  
                                    u4247 274C                                      u4351 28FA  
                                    u3560 1DA4                                      u6040 2584  
                                    u6120 2DA6                                      u6200 17F8  
                                    u3800 2A5C                                      u3561 1DA0  
                                    u6041 2580                                      u6121 2DA2  
                                    u6201 17F4                                      u3801 2A58  
                                    u3730 1AE6                                      u3714 1A30  
                                    u6050 259E                                      u6210 1812  
                                    u6130 16D4                                      u4370 2974  
                                    u3731 1AE0                                      u3715 1A2C  
                                    u6051 259A                                      u6211 180E  
                                    u6131 16CE                                      u4371 2970  
                                    u3740 1AE8                                      u3724 1A92  
                                    u3900 244E                                      u6300 196E  
                                    u6060 25B8                                      u6220 1822  
                                    u6140 16D6                                      u3725 1A8E  
                                    u3901 244A                                      u6301 196A  
                                    u6061 25B4                                      u6221 181E  
                                    u4365 294E                                      u4390 229A  
                                    u3574 1DCC                                      u6310 19CE  
                                    u6070 25D6                                      u6150 16E8  
                                    u6230 1C66                                      u4391 2296  
                                    u3575 1DC8                                      u6311 19CA  
                                    u6071 25D2                                      u6151 16E4  
                                    u6231 1C62                                      u4367 2950  
                                    u3584 1E2E                                      u6080 25EC  
                                    u6160 1700                                      u6240 1CB4  
                                    u3920 29EA                                      u3585 1E2A  
                                    u6081 25E8                                      u6161 16FC  
                                    u6241 1CB0                                      u6321 2354  
                                    u3921 29E6                                      u4385 29C4  
                                    u3690 19E6                                      u3914 24A4  
                                    u6090 2610                                      u6170 172C  
                                    u6250 1CD2                                      u6330 2370  
                                    u6410 111E                                      u3691 19E2  
                                    u3915 24A0                                      u6091 260C  
                                    u6171 1728                                      u6251 1CCE  
                                    u6331 236C                                      u4387 29C6  
                                    u6411 111A                                      u3780 2ACE  
                                    u6180 1742                                      u6260 2BD6  
                                    u6340 2400                                      u6500 1366  
                                    u6420 1142                                      u3781 2ACA  
                                    u6181 173E                                      u6261 2BD2  
                                    u6341 23FC                                      u6501 1362  
                                    u6421 113E                                      u3870 2E7C  
                                    u3790 2AF0                                      u6270 1874  
                                    u6190 17E6                                      u6430 1168  
                                    u3871 2E78                                      u3791 2AEC  
                                    u6271 1870                                      u6191 17E2  
                                    u6431 1164                                      u3880 241A  
                                    u6280 18B6                                      u6440 118E  
                                    u3881 2416                                      u6281 18B2  
                                    u6441 118A                                      u3890 242C  
                                    u6290 1928                                      u6450 128A  
                                    u3891 2428                                      u6291 1924  
                                    u6451 1286                                      u6460 12A0  
                                    u6461 129C                                      u6517 1082  
                                    u6470 12C4                                      u6527 1B8A  
                                    u6471 12C0                                      u6480 132C  
                                    u6537 1BAA                                      u6481 1328  
                                    u5930 1F82                                      u6490 1342  
                                    u5931 1F7E                                      u6547 1BC6  
                                    u6491 133E                                      u5940 1F94  
                                    u5941 1F90                                      u5950 1FBC  
                                    u5951 1FB8                                      u5960 1FF2  
                                    u5961 1FEE                                      u5970 2D02  
                                    u5971 2CFE                                      u5980 2112  
                                    u5981 210E                                      u5990 212C  
                                    u5991 2128                                      _TMR2 0FCC  
                 ??_application_intialize 0020             ??_lcd_4bit_send_enable_signal 0019  
                _RB4_InterruptHandler_LOW 00A2                                      abs@a 0013  
                                    _led1 006D                                      _led2 006C  
                                    _led3 006B                                      _led4 006A  
                                    _dbuf 0106            gpio_pin_read_logic@_pin_config 000D  
                                    _main 1040                                      _dtoa 16C4  
                                    _prec 0082                  _RB7_InterruptHandler_LOW 0096  
                                    pad@i 0024                                      pad@p 0021  
                                    fsr0h 0FEA                                      fsr1h 0FE2  
                                    indf0 0FEF                                      fsr2h 0FDA  
                                    fsr0l 0FE9                                      indf1 0FE7  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    pad@w 0026                                      fsr2l 0FD9  
                                    btemp 0073                    __end_of_led_initialize 2872  
                        __end_of_ADC_Init 2348                                      prodl 0FF3  
                                    start 000E                             ?_led_turn_off 0017  
                            ___param_bank 0000                     _lcd_4bit_send_command 2A4A  
                                   ??_abs 0015                      _gpio_pin_write_logic 1D6C  
          lcd_4bit_send_string_pos@column 0029                                     ??_pad 0023  
                   lcd_4bit_intialize@lcd 001F                     lcd_4bit_intialize@ret 0024  
                        __end_of_INT0_ISR 2F6A                          __end_of_INT1_ISR 2F66  
                        __end_of_INT2_ISR 2F62                             _EUSART_RX_ISR 2F70  
                           _EUSART_TX_ISR 2F6A                                     ?_main 0001  
                                   ?_dtoa 0028                           __end_of___awdiv 21C4  
                                   _EEADR 0FA9                           __end_of___awmod 2622  
                         ___awdiv@divisor 000F                                     i2l453 2E68  
                                   i2l395 2286                                     i2l901 2F64  
                                   i2l906 2F60                                     i2l917 2F48  
                                   i2l950 2EFA                                     i2l928 2F2E  
                                   i2l939 2F14                           ___awdiv@counter 0011  
                                   i2l896 2F68                                     _RCREG 0FAE  
                     relay_turn_off@F3052 00B2                              vfpfcnvrt@fmt 0037  
                                   _TMR0H 0FD7                                     _TMR1H 0FCF  
                                   _TMR0L 0FD6                                     _TMR1L 0FCE  
                                   _TMR3H 0FB3                                     _TMR3L 0FB2  
                                   _SPBRG 0FAF                                     _PORTA 0F80  
                                   _PORTB 0F81                                     _PORTC 0F82  
                                   _PORTD 0F83                                     _PORTE 0F84  
                                   _TRISA 0F92                                     _TRISB 0F93  
                                   _TRISC 0F94                                     _TRISD 0F95  
                                   _TRISE 0F96                                     _TXREG 0FAD  
               lcd_4bit_set_cursor@coulmn 0022                                     _adc_1 00EA  
                                   _lcd_1 00F1                                     _flags 00B0  
                                   _fputc 1F70                                     _fputs 2CC0  
                                   pad@fp 001D                                     _width 0080  
                                   _putch 2F6E                                     dtoa@d 002A  
                                   dtoa@i 0033                                     dtoa@p 002E  
                                   dtoa@s 0032                                     dtoa@w 0030  
                                   pclath 0FFA                                     pclatu 0FFB  
                                   tablat 0FF5                                     ttemp5 0074  
                                   ttemp6 0077                                     ttemp7 007B  
                                   status 0FD8                                     wtemp8 0074  
                         __end_of_sprintf 2C2C                           ?_led_initialize 001B  
                          ??_led_turn_off 0019                           __initialization 276A  
                            __end_of_main 13BE                              __end_of_dtoa 185A  
                   ?_gpio_pin_write_logic 000D                                 ??_ADC_ISR 0009  
                          ?_EUSART_RX_ISR 0001                            ?_EUSART_TX_ISR 0001  
                gpio_pin_read_logic@logic 000F                             _lat_registers 00D5  
                                  ??_main 0061                                    ??_dtoa 002C  
                           __activetblptr 0003                          led_turn_on@F3053 0071  
                               ??_RB4_ISR 0001                                 ??_RB5_ISR 0001  
                               ??_RB6_ISR 0001                                 ??_RB7_ISR 0001  
                       _button_initialize 2E6A                _EUSART_OverrunErrorHandler 0084  
                       _button_read_state 203A                                    ?_fputc 000D  
                                  ?_fputs 0016                                    _ADRESH 0FC4  
                                  _EEADRH 0FAA                                    _ADRESL 0FC3  
                                  _EEDATA 0FA8                                    _CCPR1H 0FBF  
                                  _CCPR2H 0FBC                                    _CCPR1L 0FBE  
                                  _CCPR2L 0FBB                                    _EECON2 0FA7  
                        ___awdiv@dividend 000D                                    ?_putch 0001  
                      ?_button_initialize 0016                                    i2l1111 14B8  
                                  i2l1103 13F0                                    i2l1121 160C  
                                  i2l1113 14FC                                    i2l1105 1410  
                                  i2l1130 16B0                                    i2l1123 1650  
                                  i2l1115 1540                                    i2l1107 1430  
                                  i2l1125 1670                                    i2l1117 1584  
                                  i2l1109 1474                                    i2l1127 1690  
                                  i2l1119 15C8                                    i2l1566 2F6C  
                                  i2l1575 2F70                                    i2l1681 2570  
                                  i2l1676 2570                                    i2l7100 1518  
                                  i2l7110 155C                                    i2l7102 1526  
                                  i2l6312 2F14                                    i2l6304 2EFE  
                                  i2l6320 2EE6                                    i2l7120 15A0  
                                  i2l7112 156A                                    i2l7104 1536  
                                  i2l6306 2F00                                    i2l7130 15E4  
                                  i2l7122 15AE                                    i2l7114 157A  
                                  i2l7106 153A                                    i2l6252 2E3A  
                                  i2l7140 1628                                    i2l7132 15F2  
                                  i2l7124 15BE                                    i2l7116 157E  
                                  i2l7108 154E                                    i2l7060 13FE  
                                  i2l6254 2E3C                                    i2l6270 2F5E  
                                  i2l6326 2EFA                                    i2l6318 2EE4  
                                  i2l7150 166C                                    i2l7142 1636  
                                  i2l7134 1602                                    i2l7126 15C2  
                                  i2l7118 1592                                    i2l7070 144C  
                                  i2l7062 140C                                    i2l7054 13D0  
                                  i2l6256 2E50                                    i2l6264 2F62  
                                  i2l7152 167E                                    i2l7144 1646  
                                  i2l7136 1606                                    i2l7128 15D6  
                                  i2l7080 1490                                    i2l7072 145A  
                                  i2l7064 141E                                    i2l7056 13DE  
                                  i2l6258 2F66                                    i2l6290 2F18  
                                  i2l7154 168C                                    i2l7146 164A  
                                  i2l7138 161A                                    i2l7090 14D4  
                                  i2l7082 149E                                    i2l7074 146A  
                                  i2l7066 142C                                    i2l7058 13EC  
                                  i2l5740 21F0                                    i2l5732 21C4  
                                  i2l6380 2F70                                    i2l6284 2F48  
                                  i2l6276 2F32                                    i2l6292 2F1A  
                                  i2l7156 169E                                    i2l7148 165E  
                                  i2l7092 14E2                                    i2l7084 14AE  
                                  i2l7076 146E                                    i2l7068 143E  
                                  i2l5750 2280                                    i2l5742 220A  
                                  i2l5734 21C4                                    i2l6374 2F6A  
                                  i2l6278 2F34                                    i2l7158 16AC  
                                  i2l7094 14F2                                    i2l7086 14B2  
                                  i2l7078 1482                                    i2l5744 2232  
                                  i2l5752 2284                                    i2l5736 21D6  
                                  i2l7096 14F6                                    i2l7088 14C6  
                                  i2l5746 224C                                    i2l5738 21E8  
                                  i2l6298 2F2E                                    i2l7098 150A  
                                  i2l5970 24E8                                    i2l5980 253A  
                                  i2l5972 24F8                                    i2l5964 24BC  
                                  i2l5982 2542                                    i2l5974 250C  
                                  i2l5966 24CC                                    i2l5984 2554  
                                  i2l5976 2514                                    i2l5968 24E0  
                                  i2l5986 2568                                    i2l5978 2526  
                      ?_button_read_state 0017       convert_uint16_to_string@Temp_String 012A  
                                  _SPBRGH 0FB0                                    _SSPADD 0FC8  
                                  _SSPBUF 0FC9          __end_of_lcd_4bit_send_string_pos 276A  
                     ??_button_initialize 0018                       ??_button_read_state 001B  
                  ?_lcd_4bit_send_command 001B                              vfprintf@cfmt 0049  
                               ??___awdiv 0011                             _adc_res_1_txt 00C7  
                               ??___awmod 0011                             _adc_res_2_txt 00C1  
                           _adc_res_3_txt 00BB                             _adc_res_4_txt 00B5  
                                  _matrix 1001                                    _memset 185A  
                                  clear_0 27D0                                    clear_1 27DC  
                   led_initialize@pin_obj 001F                          ___awdiv@quotient 0013  
                         ___awmod@divisor 000F                                    isa$std 0001  
                         ___awmod@counter 0011                                    pad@buf 001F  
                                  dtoa@fp 0028   gpio_pin_direction_intialize@_pin_config 000D  
                                  fputc@c 000D                                    fputs@c 001A  
                                  fputs@i 001B                              __pdataCOMRAM 0064  
                                  fputs@s 0016                 __end_of_button_initialize 2E96  
                               ?_ADC_Init 0010                              __mediumconst 0000  
               __end_of_button_read_state 2100                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
                                  putch@c 0001                          __end_of_vfprintf 2BE0  
                               ??_sprintf 0053              __end_of_select_result_format 2D8C  
                 _Timer0_InterruptHandler 0094         button_read_state@Pin_Logic_Status 001D  
                              __accesstop 0080                   __end_of__initialization 27EC  
                               ?_INT0_ISR 0001                                 ?_INT1_ISR 0001  
                               ?_INT2_ISR 0001                      _timer0_preload_value 0092  
                           ___rparam_used 0001                          ??_lcd_send_4bits 001A  
                       led_initialize@led 001B                         led_initialize@ret 001E  
                 _lcd_4bit_send_char_data 29D8                         RB5_ISR@RB5_Source 0001  
                  ??_gpio_pin_write_logic 0010                            __pcstackCOMRAM 0001  
                            __pidataBANK0 2E96                              __pidataBANK1 2F54  
                         ??_EUSART_RX_ISR 0001                      button_initialize@btn 0016  
                         ??_EUSART_TX_ISR 0001                      button_initialize@ret 0018  
                           __end_of_fputc 203A                             __end_of_fputs 2D04  
                           __end_of_putch 2F70                      _Timer2_Preload_Value 00B1  
                lcd_4bit_send_command@lcd 001B                  lcd_4bit_send_command@ret 001E  
                 _ADC_GetConversionResult 21C4                                ??_ADC_Init 0012  
                    __end_of_led_turn_off 29D8                      ADC_SelectChannel@ret 0014  
                                 ??_fputc 0011                                   ??_fputs 001A  
                                 ??_putch 000D                    ADC_StartConversion@ret 000F  
                              __pbssBANK0 0080                                __pbssBANK1 0100  
                   _INT0_InterruptHandler 00AA                                ??_INT0_ISR 0001  
                              ??_INT1_ISR 0001                                ??_INT2_ISR 0001  
              ADC_GetConversionResult@ret 0008             __end_of_application_intialize 2C76  
                    button_read_state@btn 0017                      button_read_state@ret 001C  
                       led_turn_off@F3058 0070               convert_uint16_to_string@ret 0130  
                                 _ADC_ISR 2E3A               convert_uint16_to_string@str 0128  
                                 ?_memset 000D                                   _ADC_Req 006E  
                       RB7_ISR@RB7_Source 0001                                   _RB4_ISR 2F30  
                                 _RB5_ISR 2F16                                   _RB6_ISR 2EFC  
                                 _RB7_ISR 2EE2                 ?_lcd_4bit_send_string_pos 0026  
               _RB6_InterruptHandler_HIGH 009C                      led_turn_toggle@F3063 006F  
                        ??_led_initialize 001D           CCP_Compare_Mode_Set_Value@F3106 00AC  
                          _tris_registers 00DF                  _RB6_InterruptHandler_LOW 009A  
               ??_lcd_4bit_send_char_data 001E                      _ADC_InterruptHandler 00AE  
                                 __Hparam 0000                              ADC_Init@_adc 0010  
                                 __Lparam 0000                       _gpio_pin_read_logic 2404  
                                 ___awdiv 2100                                   ___awmod 2572  
                               ?_vfprintf 0043                              __psmallconst 1000  
               ??_ADC_GetConversionResult 0005                __end_of_gpio_pin_intialize 2B28  
                                 __pcinit 276A                      _select_result_format 2D48  
                                 __ramtop 1000                                   __ptext0 1040  
                                 __ptext1 28EC                                   __ptext2 2962  
                                 __ptext3 26CA                                   __ptext4 2622  
                                 __ptext5 29D8                                   __ptext6 1B14  
                                 __ptext7 2A4A                                   __ptext8 2B28  
                                 __ptext9 2E06                                 _T0CONbits 0FD5  
                               _T1CONbits 0FCD                  _convert_uint16_to_string 2348  
                               _T2CONbits 0FCA                                 _T3CONbits 0FB1  
                        ___awmod@dividend 000D                      ?_gpio_pin_read_logic 000D  
                                 _sprintf 2BE0                                   main@ret 0063  
   lcd_4bit_intialize@l_data_pins_counter 0023                            __pintcode_body 13BE  
                    end_of_initialization 27EC                         lcd_send_4bits@lcd 0017  
                       lcd_send_4bits@ret 001A                  select_result_format@_adc 000D  
                                 fputc@fp 000F                                   memset@c 000F  
                                 memset@k 0015                                   memset@n 0011  
                                 memset@s 0017                                   int_func 13BE  
                                 fputs@fp 0018                __end_of_lcd_4bit_intialize 1C40  
                 ??_lcd_4bit_send_command 001E                     gpio_pin_intialize@ret 001A  
                     led_turn_off@pin_obj 001A                         __end_of_vfpfcnvrt 1D6C  
                               _RCSTAbits 0FAB                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc1 0FE6                                   postinc2 0FDE  
                        vfpfcnvrt@convarg 003D                button_read_state@btn_state 0019  
                              ??_vfprintf 0049                   _timer1_interruptHandler 0090  
                   ?_select_result_format 000D          ADC_StartConversion_Interrupt@ret 0018  
         __end_of_lcd_4bit_send_char_data 2A4A                     _INT1_InterruptHandler 00A8  
                               _PORTBbits 0F81                              _btn_high_con 0069  
                        _InterruptManager 0008             gpio_pin_intialize@_pin_config 0017  
              lcd_4bit_send_char_data@lcd 001B                lcd_4bit_send_char_data@ret 001E  
    __end_of_gpio_pin_direction_intialize 1B14              _gpio_pin_direction_intialize 19D0  
     __end_of_ADC_DefaultInterruptHandler 2572               _ADC_DefaultInterruptHandler 24BC  
                               _TRISAbits 0F92                                 _TRISCbits 0F94  
                     _ADC_StartConversion 2EBE                     ??_gpio_pin_read_logic 0011  
           ??_ADC_DefaultInterruptHandler 0009                               _CCP1CONbits 0FBD  
                             _CCP2CONbits 0FBA                                 _TXSTAbits 0FAC  
                    _timer1_preload_value 008E                              _led_turn_off 2962  
                     _lcd_4bit_set_cursor 2622                        relay_turn_on@F3047 00B3  
                    ?_ADC_StartConversion 000D               lcd_4bit_send_string_pos@lcd 0026  
             lcd_4bit_send_string_pos@ret 002C               lcd_4bit_send_string_pos@row 0028  
             lcd_4bit_send_string_pos@str 002A             convert_uint16_to_string@F3199 0100  
                             vfpfcnvrt@ap 0039                               vfpfcnvrt@cp 0041  
                             vfpfcnvrt@fp 0035                               _BAUDCONbits 0FB8  
                           __pidataCOMRAM 2F4A   adc_input_channel_port_configure@channel 000F  
       ADC_StartConversion_Interrupt@_adc 0015                      _Timer3_Preload_Value 008C  
                          __end_of_memset 19D0                            __end_of_matrix 1011  
            ?_configure_voltage_reference 000D                       start_initialization 276A  
                           ??_led_turn_on 0019              ?_lcd_4bit_send_enable_signal 0017  
                    ?_lcd_4bit_set_cursor 001F             convert_uint16_to_string@value 0126  
                             __end_of_abs 2DCC                               __end_of_pad 28EC  
           ?_gpio_pin_direction_intialize 000D  ADC_GetConversionResult@conversion_result 0003  
               _EUSART_RxInterruptHandler 0088                           led_turn_off@led 0017  
                   ADC_SelectChannel@_adc 0010      ADC_StartConversion_Interrupt@channel 0017  
                   ??_ADC_StartConversion 000F                               vfprintf@fmt 0045  
              _EUSART_FramingErrorHandler 0086                    ??_select_result_format 000F  
                             __pdataBANK0 00D5                               __pdataBANK1 0132  
                                ?_ADC_ISR 0001                                  ??_memset 0013  
                   __end_of_EUSART_RX_ISR 2F72                     __end_of_EUSART_TX_ISR 2F6E  
                              memset@dest 000D              lcd_4bit_send_command@command 001D  
                 ADC_StartConversion@_adc 000D                                  ?_RB4_ISR 0001  
                                ?_RB5_ISR 0001                                  ?_RB6_ISR 0001  
                                ?_RB7_ISR 0001                               __pbssCOMRAM 006E  
                   ??_lcd_4bit_set_cursor 0023                             __pcstackBANK1 0126  
           ??_configure_voltage_reference 000F                                 _adc_res_1 00D3  
                               _adc_res_2 00D1                                 _adc_res_3 00CF  
                               _adc_res_4 00CD               ADC_GetConversionResult@_adc 0001  
                     __end_of_led_turn_on 2962                     _INT2_InterruptHandler 00A6  
         gpio_pin_direction_intialize@ret 0015                     _application_intialize 2C2C  
                               _dtoa$4588 002C                                 __pintcode 0008  
__end_of_adc_input_channel_port_configure 1F70        ??_adc_input_channel_port_configure 000D  
       ?_adc_input_channel_port_configure 0001          _adc_input_channel_port_configure 1E98  
                       _ADC_SelectChannel 2DCC                ??_convert_uint16_to_string 0061  
         gpio_pin_write_logic@_pin_config 000D                                  ?___awdiv 000D  
                                ?___awmod 000D                        ?_ADC_SelectChannel 0010  
               gpio_pin_write_logic@logic 000F                                 _btn_high1 00F7  
                             __smallconst 1000                 _RB4_InterruptHandler_HIGH 00A4  
                     ??_ADC_SelectChannel 0013                                  _ADC_Init 2288  
               _RB7_InterruptHandler_HIGH 0098                               ADC_Init@ret 0013  
                                ?_sprintf 004B                        _gpio_pin_intialize 2ABC  
          ??_gpio_pin_direction_intialize 000F                  _RB5_InterruptHandler_LOW 009E  
                                _INT0_ISR 2F66                                  _INT1_ISR 2F62  
                                _INT2_ISR 2F5E                                  _RB4_Flag 0067  
                                _RB5_Flag 0066                                  _RB6_Flag 0065  
                                _RB7_Flag 0064                         RB4_ISR@RB4_Source 0001  
                     ?_gpio_pin_intialize 0017                  __end_of_InterruptManager 16C4  
                                _PIE1bits 0F9D                 __end_of_ADC_SelectChannel 2E06  
           __end_of_lcd_4bit_send_command 2ABC                                  i2u410_40 24F8  
                                i2u410_41 24F4                                  i2u411_40 2526  
                                i2u411_41 2522                                  i2u412_40 2554  
                                i2u412_41 2550                                  i2u409_40 24CC  
                                i2u441_40 2E50                                  i2u409_41 24C8  
                                i2u441_41 2E4C                                  _PIR1bits 0F9E  
                                i2u530_40 145A                                  i2u522_40 13DE  
                                i2u530_41 1456                                  i2u522_41 13DA  
                                i2u442_48 2E56                                  i2u443_40 2F44  
                                i2u531_40 146A                                  i2u523_40 13EC  
                                i2u442_49 2E68                                  i2u443_41 2F40  
                                i2u531_41 1466                                  i2u523_41 13E8  
                                i2u444_40 2F2A                                  i2u540_40 150A  
                                i2u532_40 1482                                  i2u524_40 13FE  
                                i2u444_41 2F26                                  i2u540_41 1506  
                                i2u532_41 147E                                  i2u524_41 13FA  
                                i2u381_40 21D6                                  i2u445_40 2F10  
                                i2u541_40 1518                                  i2u533_40 1490  
                                i2u525_40 140C                                  i2u381_41 21D2  
                                i2u445_41 2F0C                                  i2u541_41 1514  
                                i2u533_41 148C                                  i2u525_41 1408  
                                i2u382_40 21E8                                  i2u446_40 2EF6  
                                i2u550_40 15AE                                  i2u542_40 1526  
                                i2u534_40 149E                                  i2u526_40 141E  
                                i2u382_41 21E4                                  i2u446_41 2EF2  
                                i2u550_41 15AA                                  i2u542_41 1522  
                                i2u534_41 149A                                  i2u526_41 141A  
                      led_turn_on@pin_obj 001A                                  i2u383_40 220A  
                                i2u551_40 15BE                                  i2u543_40 1536  
                                i2u535_40 14AE                                  i2u527_40 142C  
                                i2u383_41 2206                                  i2u551_41 15BA  
                                i2u543_41 1532                                  i2u535_41 14AA  
                                i2u527_41 1428                                  i2u384_40 224C  
                                i2u560_40 165E                                  i2u552_40 15D6  
                                i2u544_40 154E                                  i2u536_40 14C6  
                                i2u528_40 143E                                  i2u384_41 2248  
                                i2u560_41 165A                                  i2u552_41 15D2  
                                i2u544_41 154A                                  i2u536_41 14C2  
                                i2u528_41 143A                                  i2u561_40 166C  
                                i2u553_40 15E4                                  i2u545_40 155C  
                                i2u537_40 14D4                                  i2u529_40 144C  
                                i2u561_41 1668                                  i2u553_41 15E0  
                                i2u545_41 1558                                  i2u537_41 14D0  
                                i2u529_41 1448                                  i2u385_45 2264  
                                i2u562_40 167E                                  i2u554_40 15F2  
                                i2u546_40 156A                                  i2u538_40 14E2  
                                i2u562_41 167A                                  i2u554_41 15EE  
                                i2u546_41 1566                                  i2u538_41 14DE  
                                i2u563_40 168C                                  i2u555_40 1602  
                                i2u547_40 157A                                  i2u539_40 14F2  
                                i2u563_41 1688                                  i2u555_41 15FE  
                                i2u547_41 1576                                  i2u539_41 14EE  
                                i2u564_40 169E                                  i2u556_40 161A  
                                i2u548_40 1592                                  i2u564_41 169A  
                                i2u556_41 1616                                  i2u548_41 158E  
                                i2u565_40 16AC                                  i2u557_40 1628  
                                i2u549_40 15A0                                  i2u565_41 16A8  
                                i2u557_41 1624                                  i2u549_41 159C  
                                i2u558_40 1636                                  i2u558_41 1632  
                                i2u559_40 1646                                  i2u559_41 1642  
         ??_ADC_StartConversion_Interrupt 0018            fp__ADC_DefaultInterruptHandler 0000  
                      _lcd_4bit_intialize 1B14                                 _vfpfcnvrt 1C40  
                _lcd_4bit_send_string_pos 26CA                                _ADCON0bits 0FC2  
                              _ADCON1bits 0FC1                                _ADCON2bits 0FC0  
                    ??_gpio_pin_intialize 0019                  ADC_SelectChannel@channel 0012  
                     ?_lcd_4bit_intialize 001F                               _led_turn_on 28EC  
                 gpio_pin_write_logic@ret 0016                               _INTCON2bits 0FF1  
                             _INTCON3bits 0FF0                  ?_lcd_4bit_send_char_data 001B  
                               copy_data0 277E                                 copy_data1 279E  
                               copy_data2 27BE                    gpio_pin_read_logic@ret 0016  
                              _EECON1bits 0FA6                    ?_application_intialize 0001  
                    ??_lcd_4bit_intialize 0021                            led_turn_on@led 0017  
                                __Hrparam 0000                                vfprintf@ap 0047  
                                __Lrparam 0000                                vfprintf@fp 0043  
                ?_ADC_GetConversionResult 0001                         RB6_ISR@RB6_Source 0001  
                  lcd_4bit_set_cursor@lcd 001F                    lcd_4bit_set_cursor@ret 0025  
                              ?_vfpfcnvrt 0035                    lcd_4bit_set_cursor@row 0021  
             __end_of_gpio_pin_read_logic 24BC                                sprintf@fmt 004D  
                                __ptext10 2348                                  __ptext11 2BE0  
                                __ptext20 2572                                  __ptext12 2B90  
                                __ptext21 2100                                  __ptext13 1C40  
                                __ptext30 19D0                                  __ptext22 185A  
                                __ptext14 16C4                                  __ptext31 2D04  
                                __ptext23 203A                                  __ptext15 2872  
                                __ptext40 2EFC                                  __ptext32 2EBE  
                                __ptext24 2404                                  __ptext16 2CC0  
                                __ptext41 2F16                                  __ptext33 2DCC  
                                __ptext25 2C2C                                  __ptext17 1F70  
                                __ptext50 21C4                                  __ptext42 2F30  
                                __ptext34 2288                                  __ptext26 27F6  
                                __ptext18 2F6E                                  __ptext51 0000  
                                __ptext43 2F5E                                  __ptext35 2D48  
                                __ptext27 2ABC                                  __ptext19 2D8C  
                                __ptext44 2F62                                  __ptext36 2C76  
                                __ptext28 1D6C                                  __ptext45 2F66  
                                __ptext37 1E98                                  __ptext29 2E6A  
                                __ptext46 2F6A                                  __ptext47 2F70  
                                __ptext39 2EE2                                  __ptext48 2E3A  
                                __ptext49 24BC           configure_voltage_reference@_adc 000D  
                                _btn_high 00FA       convert_uint16_to_string@DataCounter 0131  
        __end_of_convert_uint16_to_string 2404                                  isa$xinst 0000  
                                int$flags 0073                                  _vfprintf 2B90  
                          _lcd_send_4bits 2B28     __end_of_ADC_StartConversion_Interrupt 2D48  
           _ADC_StartConversion_Interrupt 2D04                                _INTCONbits 0FF2  
            __end_of_gpio_pin_write_logic 1E98                                  intlevel2 0000  
                               sprintf@ap 0053               __end_of_ADC_StartConversion 2EE2  
          lcd_4bit_send_enable_signal@lcd 0017            lcd_4bit_send_enable_signal@ret 0019  
               _EUSART_TxInterruptHandler 008A           __end_of_ADC_GetConversionResult 2288  
                  __end_of_lcd_send_4bits 2B90                               ??_vfpfcnvrt 003B  
             __end_of_lcd_4bit_set_cursor 26CA                                  sprintf@f 0055  
                                sprintf@s 004B                             _btn_high1_con 0068  
                          _port_registers 0132                               _SSPCON1bits 0FC6  
                             _SSPCON2bits 0FC5               lcd_4bit_send_char_data@data 001D  
                       ?_InterruptManager 0001                ??_lcd_4bit_send_string_pos 002C  
                          _led_initialize 27F6  
