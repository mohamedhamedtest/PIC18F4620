

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 20 03:45:33 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,inline
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Version 2.40
    77                           ; Generated 17/11/2021 GMT
    78                           ; 
    79                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F4620 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	idataCOMRAM
   113   00345C                     __pidataCOMRAM:
   114                           	callstack 0
   115                           
   116                           ;initializer for _ret
   117   00345C  01                 	db	1
   118                           
   119                           ;initializer for _RB7_Flag
   120   00345D  01                 	db	1
   121                           
   122                           ;initializer for _RB6_Flag
   123   00345E  01                 	db	1
   124                           
   125                           ;initializer for _RB5_Flag
   126   00345F  01                 	db	1
   127                           
   128                           ;initializer for _RB4_Flag
   129   003460  01                 	db	1
   130                           
   131                           ;initializer for _led2
   132   003461  53                 	db	83
   133                           
   134                           ;initializer for _led1
   135   003462  43                 	db	67
   136                           
   137                           	psect	idataBANK0
   138   0033A0                     __pidataBANK0:
   139                           	callstack 0
   140                           
   141                           ;initializer for _port_registers
   142   0033A0  80                 	db	128
   143   0033A1  0F                 	db	15
   144   0033A2  81                 	db	129
   145   0033A3  0F                 	db	15
   146   0033A4  82                 	db	130
   147   0033A5  0F                 	db	15
   148   0033A6  83                 	db	131
   149   0033A7  0F                 	db	15
   150   0033A8  84                 	db	132
   151   0033A9  0F                 	db	15
   152                           
   153                           ;initializer for _lat_registers
   154   0033AA  89                 	db	137
   155   0033AB  0F                 	db	15
   156   0033AC  8A                 	db	138
   157   0033AD  0F                 	db	15
   158   0033AE  8B                 	db	139
   159   0033AF  0F                 	db	15
   160   0033B0  8C                 	db	140
   161   0033B1  0F                 	db	15
   162   0033B2  8D                 	db	141
   163   0033B3  0F                 	db	15
   164                           
   165                           ;initializer for _tris_registers
   166   0033B4  92                 	db	146
   167   0033B5  0F                 	db	15
   168   0033B6  93                 	db	147
   169   0033B7  0F                 	db	15
   170   0033B8  94                 	db	148
   171   0033B9  0F                 	db	15
   172   0033BA  95                 	db	149
   173   0033BB  0F                 	db	15
   174   0033BC  96                 	db	150
   175   0033BD  0F                 	db	15
   176                           
   177                           ;initializer for _adc_1
   178   0033BE  00                 	db	0
   179   0033BF  00                 	db	0
   180   0033C0  00                 	db	0
   181   0033C1  05                 	db	5
   182   0033C2  05                 	db	5
   183   0033C3  00                 	db	0
   184   0033C4  02                 	db	2
   185                           
   186                           ;initializer for _lcd_1
   187   0033C5  02                 	db	2
   188   0033C6  0A                 	db	10
   189   0033C7  12                 	db	18
   190   0033C8  1A                 	db	26
   191   0033C9  22                 	db	34
   192   0033CA  2A                 	db	42
   193                           
   194                           ;initializer for _dc_motor_2
   195   0033CB  13                 	db	19
   196   0033CC  1B                 	db	27
   197                           
   198                           ;initializer for _dc_motor_1
   199   0033CD  03                 	db	3
   200   0033CE  0B                 	db	11
   201                           
   202                           	psect	smallconst
   203   001000                     __psmallconst:
   204                           	callstack 0
   205   001000  00                 	db	0
   206   001001                     _matrix:
   207                           	callstack 0
   208   001001  37                 	db	55
   209   001002  38                 	db	56
   210   001003  39                 	db	57
   211   001004  2F                 	db	47
   212   001005  34                 	db	52
   213   001006  35                 	db	53
   214   001007  36                 	db	54
   215   001008  2A                 	db	42
   216   001009  31                 	db	49
   217   00100A  32                 	db	50
   218   00100B  33                 	db	51
   219   00100C  2D                 	db	45
   220   00100D  23                 	db	35
   221   00100E  30                 	db	48
   222   00100F  3D                 	db	61
   223   001010  2B                 	db	43
   224   001011                     __end_of_matrix:
   225                           	callstack 0
   226   000000                     _SPBRGH	set	4016
   227   000000                     _SPBRG	set	4015
   228   000000                     _TXREG	set	4013
   229   000000                     _TXSTAbits	set	4012
   230   000000                     _RCREG	set	4014
   231   000000                     _RCSTAbits	set	4011
   232   000000                     _TMR3L	set	4018
   233   000000                     _TMR3H	set	4019
   234   000000                     _TMR2	set	4044
   235   000000                     _T2CONbits	set	4042
   236   000000                     _TMR1L	set	4046
   237   000000                     _TMR1H	set	4047
   238   000000                     _T1CONbits	set	4045
   239   000000                     _T0CONbits	set	4053
   240   000000                     _TMR0L	set	4054
   241   000000                     _INTCON2bits	set	4081
   242   000000                     _INTCON3bits	set	4080
   243   000000                     _SSPADD	set	4040
   244   000000                     _SSPSTATbits	set	4039
   245   000000                     _SSPBUF	set	4041
   246   000000                     _SSPCON2bits	set	4037
   247   000000                     _SSPCON1bits	set	4038
   248   000000                     _EEDATA	set	4008
   249   000000                     _EEADRH	set	4010
   250   000000                     _EEADR	set	4009
   251   000000                     _EECON2	set	4007
   252   000000                     _CCPR2H	set	4028
   253   000000                     _CCPR2L	set	4027
   254   000000                     _CCPR1H	set	4031
   255   000000                     _CCPR1L	set	4030
   256   000000                     _ADCON1bits	set	4033
   257   000000                     _ADRESL	set	4035
   258   000000                     _ADRESH	set	4036
   259   000000                     _INTCONbits	set	4082
   260   000000                     _TRISD	set	3989
   261   000000                     _TRISC	set	3988
   262   000000                     _PR2	set	4043
   263   000000                     _TRISB	set	3987
   264   000000                     _TRISE	set	3990
   265   000000                     _TRISAbits	set	3986
   266   000000                     _PORTBbits	set	3969
   267   000000                     _TRISCbits	set	3988
   268   000000                     _PIE1bits	set	3997
   269   000000                     _ADCON2bits	set	4032
   270   000000                     _ADCON0bits	set	4034
   271   000000                     _PORTE	set	3972
   272   000000                     _PORTD	set	3971
   273   000000                     _PORTC	set	3970
   274   000000                     _PORTB	set	3969
   275   000000                     _PORTA	set	3968
   276   000000                     _LATA	set	3977
   277   000000                     _TRISA	set	3986
   278   000000                     _EECON1bits	set	4006
   279   000000                     _T3CONbits	set	4017
   280   000000                     _CCP2CONbits	set	4026
   281   000000                     _CCP1CONbits	set	4029
   282   000000                     _PIR1bits	set	3998
   283   000000                     _LATE	set	3981
   284   000000                     _LATD	set	3980
   285   000000                     _LATC	set	3979
   286   000000                     _LATB	set	3978
   287   000000                     _TMR0H	set	4055
   288   000000                     _BAUDCONbits	set	4024
   289   001011                     STR_4:
   290   001011  4D                 	db	77	;'M'
   291   001012  4F                 	db	79	;'O'
   292   001013  48                 	db	72	;'H'
   293   001014  41                 	db	65	;'A'
   294   001015  4D                 	db	77	;'M'
   295   001016  45                 	db	69	;'E'
   296   001017  44                 	db	68	;'D'
   297   001018  20                 	db	32
   298   001019  48                 	db	72	;'H'
   299   00101A  41                 	db	65	;'A'
   300   00101B  4D                 	db	77	;'M'
   301   00101C  45                 	db	69	;'E'
   302   00101D  44                 	db	68	;'D'
   303   00101E  00                 	db	0
   304   00101F                     STR_5:
   305   00101F  4C                 	db	76	;'L'
   306   001020  4D                 	db	77	;'M'
   307   001021  33                 	db	51	;'3'
   308   001022  35                 	db	53	;'5'
   309   001023  20                 	db	32
   310   001024  54                 	db	84	;'T'
   311   001025  65                 	db	101	;'e'
   312   001026  73                 	db	115	;'s'
   313   001027  74                 	db	116	;'t'
   314   001028  00                 	db	0
   315   001029                     STR_6:
   316   001029  54                 	db	84	;'T'
   317   00102A  65                 	db	101	;'e'
   318   00102B  6D                 	db	109	;'m'
   319   00102C  70                 	db	112	;'p'
   320   00102D  31                 	db	49	;'1'
   321   00102E  3A                 	db	58	;':'
   322   00102F  20                 	db	32
   323   001030  00                 	db	0
   324   001031                     STR_7:
   325   001031  54                 	db	84	;'T'
   326   001032  65                 	db	101	;'e'
   327   001033  6D                 	db	109	;'m'
   328   001034  70                 	db	112	;'p'
   329   001035  32                 	db	50	;'2'
   330   001036  3A                 	db	58	;':'
   331   001037  20                 	db	32
   332   001038  00                 	db	0
   333   001039                     STR_1:
   334   001039  25                 	db	37
   335   00103A  69                 	db	105	;'i'
   336   00103B  00                 	db	0
   337   00103C  00                 	db	0	; dummy byte at the end
   338   000000                     
   339                           ; #config settings
   340                           
   341                           	psect	cinit
   342   002F2E                     __pcinit:
   343                           	callstack 0
   344   002F2E                     start_initialization:
   345                           	callstack 0
   346   002F2E                     __initialization:
   347                           	callstack 0
   348                           
   349                           ; Initialize objects allocated to BANK0 (47 bytes)
   350                           ; load TBLPTR registers with __pidataBANK0
   351   002F2E  0EA0               	movlw	low __pidataBANK0
   352   002F30  6EF6               	movwf	tblptrl,c
   353   002F32  0E33               	movlw	high __pidataBANK0
   354   002F34  6EF7               	movwf	tblptrh,c
   355   002F36  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   356   002F38  6EF8               	movwf	tblptru,c
   357   002F3A  EE00  F0CD         	lfsr	0,__pdataBANK0
   358   002F3E  EE10 F02F          	lfsr	1,47
   359   002F42                     copy_data0:
   360   002F42  0009               	tblrd		*+
   361   002F44  CFF5 FFEE          	movff	tablat,postinc0
   362   002F48  50E5               	movf	postdec1,w,c
   363   002F4A  50E1               	movf	fsr1l,w,c
   364   002F4C  E1FA               	bnz	copy_data0
   365                           
   366                           ; Initialize objects allocated to COMRAM (7 bytes)
   367                           ; load TBLPTR registers with __pidataCOMRAM
   368   002F4E  0E5C               	movlw	low __pidataCOMRAM
   369   002F50  6EF6               	movwf	tblptrl,c
   370   002F52  0E34               	movlw	high __pidataCOMRAM
   371   002F54  6EF7               	movwf	tblptrh,c
   372   002F56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   373   002F58  6EF8               	movwf	tblptru,c
   374   002F5A  EE00  F077         	lfsr	0,__pdataCOMRAM
   375   002F5E  EE10 F007          	lfsr	1,7
   376   002F62                     copy_data1:
   377   002F62  0009               	tblrd		*+
   378   002F64  CFF5 FFEE          	movff	tablat,postinc0
   379   002F68  50E5               	movf	postdec1,w,c
   380   002F6A  50E1               	movf	fsr1l,w,c
   381   002F6C  E1FA               	bnz	copy_data1
   382                           
   383                           ; Clear objects allocated to BANK1 (32 bytes)
   384   002F6E  EE01  F000         	lfsr	0,__pbssBANK1
   385   002F72  0E20               	movlw	32
   386   002F74                     clear_0:
   387   002F74  6AEE               	clrf	postinc0,c
   388   002F76  06E8               	decf	wreg,f,c
   389   002F78  E1FD               	bnz	clear_0
   390                           
   391                           ; Clear objects allocated to BANK0 (77 bytes)
   392   002F7A  EE00  F080         	lfsr	0,__pbssBANK0
   393   002F7E  0E4D               	movlw	77
   394   002F80                     clear_1:
   395   002F80  6AEE               	clrf	postinc0,c
   396   002F82  06E8               	decf	wreg,f,c
   397   002F84  E1FD               	bnz	clear_1
   398                           
   399                           ; Clear objects allocated to COMRAM (19 bytes)
   400   002F86  EE00  F064         	lfsr	0,__pbssCOMRAM
   401   002F8A  0E13               	movlw	19
   402   002F8C                     clear_2:
   403   002F8C  6AEE               	clrf	postinc0,c
   404   002F8E  06E8               	decf	wreg,f,c
   405   002F90  E1FD               	bnz	clear_2
   406   002F92                     end_of_initialization:
   407                           	callstack 0
   408   002F92                     __end_of__initialization:
   409                           	callstack 0
   410   002F92  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   411   002F94  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   412   002F96  0100               	movlb	0
   413   002F98  EF34  F00A         	goto	_main	;jump to C main() function
   414                           
   415                           	psect	bssCOMRAM
   416   000064                     __pbssCOMRAM:
   417                           	callstack 0
   418   000064                     _prec:
   419                           	callstack 0
   420   000064                     	ds	2
   421   000066                     _lm35_res_2_Celsius_mv:
   422                           	callstack 0
   423   000066                     	ds	2
   424   000068                     _lm35_res_1_Celsius_mv:
   425                           	callstack 0
   426   000068                     	ds	2
   427   00006A                     _flags:
   428                           	callstack 0
   429   00006A                     	ds	1
   430   00006B                     _Timer2_Preload_Value:
   431                           	callstack 0
   432   00006B                     	ds	1
   433   00006C                     relay_turn_off@F3052:
   434                           	callstack 0
   435   00006C                     	ds	1
   436   00006D                     relay_turn_on@F3047:
   437                           	callstack 0
   438   00006D                     	ds	1
   439   00006E                     relay_initialize@F3042:
   440                           	callstack 0
   441   00006E                     	ds	1
   442   00006F                     led_turn_toggle@F3063:
   443                           	callstack 0
   444   00006F                     	ds	1
   445   000070                     led_turn_off@F3058:
   446                           	callstack 0
   447   000070                     	ds	1
   448   000071                     led_turn_on@F3053:
   449                           	callstack 0
   450   000071                     	ds	1
   451   000072                     led_initialize@F3048:
   452                           	callstack 0
   453   000072                     	ds	1
   454   000073                     _lm35_res_2:
   455                           	callstack 0
   456   000073                     	ds	2
   457   000075                     _lm35_res_1:
   458                           	callstack 0
   459   000075                     	ds	2
   460                           
   461                           	psect	dataCOMRAM
   462   000077                     __pdataCOMRAM:
   463                           	callstack 0
   464   000077                     _ret:
   465                           	callstack 0
   466   000077                     	ds	1
   467   000078                     _RB7_Flag:
   468                           	callstack 0
   469   000078                     	ds	1
   470   000079                     _RB6_Flag:
   471                           	callstack 0
   472   000079                     	ds	1
   473   00007A                     _RB5_Flag:
   474                           	callstack 0
   475   00007A                     	ds	1
   476   00007B                     _RB4_Flag:
   477                           	callstack 0
   478   00007B                     	ds	1
   479   00007C                     _led2:
   480                           	callstack 0
   481   00007C                     	ds	1
   482   00007D                     _led1:
   483                           	callstack 0
   484   00007D                     	ds	1
   485                           
   486                           	psect	bssBANK0
   487   000080                     __pbssBANK0:
   488                           	callstack 0
   489   000080                     _lm35_res_3_txt:
   490                           	callstack 0
   491   000080                     	ds	7
   492   000087                     	ds	6
   493   00008D                     _width:
   494                           	callstack 0
   495   00008D                     	ds	2
   496   00008F                     _lm35_res_3_Celsius_mv:
   497                           	callstack 0
   498   00008F                     	ds	2
   499   000091                     _lm35_res_3:
   500                           	callstack 0
   501   000091                     	ds	2
   502   000093                     _EUSART_OverrunErrorHandler:
   503                           	callstack 0
   504   000093                     	ds	2
   505   000095                     _EUSART_FramingErrorHandler:
   506                           	callstack 0
   507   000095                     	ds	2
   508   000097                     _EUSART_RxInterruptHandler:
   509                           	callstack 0
   510   000097                     	ds	2
   511   000099                     _EUSART_TxInterruptHandler:
   512                           	callstack 0
   513   000099                     	ds	2
   514   00009B                     _Timer3_Preload_Value:
   515                           	callstack 0
   516   00009B                     	ds	2
   517   00009D                     _timer1_preload_value:
   518                           	callstack 0
   519   00009D                     	ds	2
   520   00009F                     	ds	2
   521   0000A1                     _timer0_preload_value:
   522                           	callstack 0
   523   0000A1                     	ds	2
   524   0000A3                     	ds	2
   525   0000A5                     _RB7_InterruptHandler_LOW:
   526                           	callstack 0
   527   0000A5                     	ds	2
   528   0000A7                     _RB7_InterruptHandler_HIGH:
   529                           	callstack 0
   530   0000A7                     	ds	2
   531   0000A9                     _RB6_InterruptHandler_LOW:
   532                           	callstack 0
   533   0000A9                     	ds	2
   534   0000AB                     _RB6_InterruptHandler_HIGH:
   535                           	callstack 0
   536   0000AB                     	ds	2
   537   0000AD                     _RB5_InterruptHandler_LOW:
   538                           	callstack 0
   539   0000AD                     	ds	2
   540   0000AF                     _RB5_InterruptHandler_HIGH:
   541                           	callstack 0
   542   0000AF                     	ds	2
   543   0000B1                     _RB4_InterruptHandler_LOW:
   544                           	callstack 0
   545   0000B1                     	ds	2
   546   0000B3                     _RB4_InterruptHandler_HIGH:
   547                           	callstack 0
   548   0000B3                     	ds	2
   549   0000B5                     _INT2_InterruptHandler:
   550                           	callstack 0
   551   0000B5                     	ds	2
   552   0000B7                     _INT1_InterruptHandler:
   553                           	callstack 0
   554   0000B7                     	ds	2
   555   0000B9                     _INT0_InterruptHandler:
   556                           	callstack 0
   557   0000B9                     	ds	2
   558   0000BB                     CCP_Compare_Mode_Set_Value@F3106:
   559                           	callstack 0
   560   0000BB                     	ds	2
   561   0000BD                     _ADC_InterruptHandler:
   562                           	callstack 0
   563   0000BD                     	ds	2
   564   0000BF                     _lm35_res_2_txt:
   565                           	callstack 0
   566   0000BF                     	ds	7
   567   0000C6                     _lm35_res_1_txt:
   568                           	callstack 0
   569   0000C6                     	ds	7
   570                           
   571                           	psect	dataBANK0
   572   0000CD                     __pdataBANK0:
   573                           	callstack 0
   574   0000CD                     _port_registers:
   575                           	callstack 0
   576   0000CD                     	ds	10
   577   0000D7                     _lat_registers:
   578                           	callstack 0
   579   0000D7                     	ds	10
   580   0000E1                     _tris_registers:
   581                           	callstack 0
   582   0000E1                     	ds	10
   583   0000EB                     _adc_1:
   584                           	callstack 0
   585   0000EB                     	ds	7
   586   0000F2                     _lcd_1:
   587                           	callstack 0
   588   0000F2                     	ds	6
   589   0000F8                     _dc_motor_2:
   590                           	callstack 0
   591   0000F8                     	ds	2
   592   0000FA                     _dc_motor_1:
   593                           	callstack 0
   594   0000FA                     	ds	2
   595                           
   596                           	psect	bssBANK1
   597   000100                     __pbssBANK1:
   598                           	callstack 0
   599   000100                     _dbuf:
   600                           	callstack 0
   601   000100                     	ds	32
   602                           
   603                           	psect	cstackCOMRAM
   604   000001                     __pcstackCOMRAM:
   605                           	callstack 0
   606   000001                     RB4_ISR@RB4_Source:
   607                           	callstack 0
   608   000001                     RB5_ISR@RB5_Source:
   609                           	callstack 0
   610   000001                     RB6_ISR@RB6_Source:
   611                           	callstack 0
   612   000001                     RB7_ISR@RB7_Source:
   613                           	callstack 0
   614   000001                     
   615                           ; 1 bytes @ 0x0
   616   000001                     	ds	1
   617   000002                     ??_adc_input_channel_port_configure:
   618   000002                     ?___awdiv:
   619                           	callstack 0
   620   000002                     ?___awmod:
   621                           	callstack 0
   622   000002                     ?___lwdiv:
   623                           	callstack 0
   624   000002                     ?___xxtofl:
   625                           	callstack 0
   626   000002                     ADC_StartConversion@_adc:
   627                           	callstack 0
   628   000002                     ADC_GetConversionResult@_adc:
   629                           	callstack 0
   630   000002                     select_result_format@_adc:
   631                           	callstack 0
   632   000002                     configure_voltage_reference@_adc:
   633                           	callstack 0
   634   000002                     gpio_pin_direction_intialize@_pin_config:
   635                           	callstack 0
   636   000002                     gpio_pin_write_logic@_pin_config:
   637                           	callstack 0
   638   000002                     ___awdiv@dividend:
   639                           	callstack 0
   640   000002                     ___awmod@dividend:
   641                           	callstack 0
   642   000002                     ___lwdiv@dividend:
   643                           	callstack 0
   644   000002                     memset@dest:
   645                           	callstack 0
   646   000002                     fputc@c:
   647                           	callstack 0
   648   000002                     ___xxtofl@val:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x1
   652   000002                     	ds	2
   653   000004                     ??_gpio_pin_direction_intialize:
   654   000004                     ADC_StartConversion@ret:
   655                           	callstack 0
   656   000004                     adc_input_channel_port_configure@channel:
   657                           	callstack 0
   658   000004                     gpio_pin_write_logic@logic:
   659                           	callstack 0
   660   000004                     ADC_GetConversionResult@conversion_result:
   661                           	callstack 0
   662   000004                     ___awdiv@divisor:
   663                           	callstack 0
   664   000004                     ___awmod@divisor:
   665                           	callstack 0
   666   000004                     ___lwdiv@divisor:
   667                           	callstack 0
   668   000004                     memset@c:
   669                           	callstack 0
   670   000004                     fputc@fp:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x3
   674   000004                     	ds	1
   675   000005                     ??_gpio_pin_write_logic:
   676   000005                     ADC_Init@_adc:
   677                           	callstack 0
   678   000005                     ADC_SelectChannel@_adc:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x4
   682   000005                     	ds	1
   683   000006                     ??_fputc:
   684   000006                     ??_ADC_GetConversionResult:
   685   000006                     ??___xxtofl:
   686   000006                     ___awdiv@counter:
   687                           	callstack 0
   688   000006                     ___awmod@counter:
   689                           	callstack 0
   690   000006                     ___lwdiv@quotient:
   691                           	callstack 0
   692   000006                     memset@n:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x5
   696   000006                     	ds	1
   697   000007                     ??_ADC_Init:
   698   000007                     ADC_SelectChannel@channel:
   699                           	callstack 0
   700   000007                     ___awdiv@sign:
   701                           	callstack 0
   702   000007                     ___awmod@sign:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x6
   706   000007                     	ds	1
   707   000008                     ??_memset:
   708   000008                     ??_ADC_SelectChannel:
   709   000008                     ?_abs:
   710                           	callstack 0
   711   000008                     ADC_Init@ret:
   712                           	callstack 0
   713   000008                     ___lwdiv@counter:
   714                           	callstack 0
   715   000008                     ___awdiv@quotient:
   716                           	callstack 0
   717   000008                     abs@a:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x7
   721   000008                     	ds	1
   722   000009                     ADC_SelectChannel@ret:
   723                           	callstack 0
   724   000009                     ADC_GetConversionResult@ret:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0x8
   728   000009                     	ds	1
   729   00000A                     ??_abs:
   730   00000A                     gpio_pin_direction_intialize@ret:
   731                           	callstack 0
   732   00000A                     ___xxtofl@sign:
   733                           	callstack 0
   734   00000A                     ADC_GetConversion_Blocking@_adc:
   735                           	callstack 0
   736   00000A                     memset@k:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x9
   740   00000A                     	ds	1
   741   00000B                     gpio_pin_write_logic@ret:
   742                           	callstack 0
   743   00000B                     ___xxtofl@exp:
   744                           	callstack 0
   745   00000B                     fputs@s:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0xA
   749   00000B                     	ds	1
   750   00000C                     ADC_GetConversion_Blocking@channel:
   751                           	callstack 0
   752   00000C                     lcd_send_4bits@lcd:
   753                           	callstack 0
   754   00000C                     lcd_4bit_send_enable_signal@lcd:
   755                           	callstack 0
   756   00000C                     dc_motor_move_right@_dc_motor:
   757                           	callstack 0
   758   00000C                     dc_motor_stop@_dc_motor:
   759                           	callstack 0
   760   00000C                     led_turn_on@led:
   761                           	callstack 0
   762   00000C                     led_turn_off@led:
   763                           	callstack 0
   764   00000C                     gpio_pin_intialize@_pin_config:
   765                           	callstack 0
   766   00000C                     memset@s:
   767                           	callstack 0
   768   00000C                     ___xxtofl@arg:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0xB
   772   00000C                     	ds	1
   773   00000D                     ADC_GetConversion_Blocking@conversion_result:
   774                           	callstack 0
   775   00000D                     fputs@fp:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0xC
   779   00000D                     	ds	1
   780   00000E                     ??_gpio_pin_intialize:
   781   00000E                     ??_led_turn_on:
   782   00000E                     ??_led_turn_off:
   783   00000E                     lcd_send_4bits@_data_command:
   784                           	callstack 0
   785   00000E                     lcd_4bit_send_enable_signal@ret:
   786                           	callstack 0
   787   00000E                     dc_motor_move_right@ret:
   788                           	callstack 0
   789   00000E                     dc_motor_stop@ret:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0xD
   793   00000E                     	ds	1
   794   00000F                     lcd_send_4bits@ret:
   795                           	callstack 0
   796   00000F                     led_turn_on@ret:
   797                           	callstack 0
   798   00000F                     led_turn_off@ret:
   799                           	callstack 0
   800   00000F                     ADC_GetConversion_Blocking@ret:
   801                           	callstack 0
   802   00000F                     gpio_pin_intialize@ret:
   803                           	callstack 0
   804   00000F                     fputs@c:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0xE
   808   00000F                     	ds	1
   809   000010                     ?___flmul:
   810                           	callstack 0
   811   000010                     led_turn_on@pin_obj:
   812                           	callstack 0
   813   000010                     led_turn_off@pin_obj:
   814                           	callstack 0
   815   000010                     lcd_4bit_send_command@lcd:
   816                           	callstack 0
   817   000010                     lcd_4bit_send_char_data@lcd:
   818                           	callstack 0
   819   000010                     dc_motor_initialize@_dc_motor:
   820                           	callstack 0
   821   000010                     led_initialize@led:
   822                           	callstack 0
   823   000010                     fputs@i:
   824                           	callstack 0
   825   000010                     ___flmul@b:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0xF
   829   000010                     	ds	2
   830   000012                     ??_led_initialize:
   831   000012                     lcd_4bit_send_command@command:
   832                           	callstack 0
   833   000012                     lcd_4bit_send_char_data@data:
   834                           	callstack 0
   835   000012                     dc_motor_initialize@ret:
   836                           	callstack 0
   837   000012                     pad@fp:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x11
   841   000012                     	ds	1
   842   000013                     lcd_4bit_send_command@ret:
   843                           	callstack 0
   844   000013                     lcd_4bit_send_char_data@ret:
   845                           	callstack 0
   846   000013                     led_initialize@ret:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x12
   850   000013                     	ds	1
   851   000014                     led_initialize@pin_obj:
   852                           	callstack 0
   853   000014                     lcd_4bit_intialize@lcd:
   854                           	callstack 0
   855   000014                     lcd_4bit_set_cursor@lcd:
   856                           	callstack 0
   857   000014                     pad@buf:
   858                           	callstack 0
   859   000014                     ___flmul@a:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x13
   863   000014                     	ds	2
   864   000016                     ??_lcd_4bit_intialize:
   865   000016                     lcd_4bit_set_cursor@row:
   866                           	callstack 0
   867   000016                     pad@p:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x15
   871   000016                     	ds	1
   872   000017                     lcd_4bit_set_cursor@coulmn:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x16
   876   000017                     	ds	1
   877   000018                     ??_lcd_4bit_set_cursor:
   878   000018                     ??___flmul:
   879   000018                     ??_pad:
   880   000018                     lcd_4bit_intialize@l_data_pins_counter:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x17
   884   000018                     	ds	1
   885   000019                     lcd_4bit_intialize@ret:
   886                           	callstack 0
   887   000019                     pad@i:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x18
   891   000019                     	ds	1
   892   00001A                     lcd_4bit_set_cursor@ret:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x19
   896   00001A                     	ds	1
   897   00001B                     lcd_4bit_send_string_pos@lcd:
   898                           	callstack 0
   899   00001B                     pad@w:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x1A
   903   00001B                     	ds	1
   904   00001C                     ___flmul@sign:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0x1B
   908   00001C                     	ds	1
   909   00001D                     lcd_4bit_send_string_pos@row:
   910                           	callstack 0
   911   00001D                     dtoa@fp:
   912                           	callstack 0
   913   00001D                     ___flmul@grs:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x1C
   917   00001D                     	ds	1
   918   00001E                     lcd_4bit_send_string_pos@column:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x1D
   922   00001E                     	ds	1
   923   00001F                     lcd_4bit_send_string_pos@str:
   924                           	callstack 0
   925   00001F                     dtoa@d:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x1E
   929   00001F                     	ds	2
   930   000021                     lcd_4bit_send_string_pos@ret:
   931                           	callstack 0
   932   000021                     ___flmul@aexp:
   933                           	callstack 0
   934   000021                     _dtoa$4553:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x20
   938   000021                     	ds	1
   939   000022                     ___flmul@bexp:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x21
   943   000022                     	ds	1
   944   000023                     dtoa@p:
   945                           	callstack 0
   946   000023                     ___flmul@prod:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x22
   950   000023                     	ds	2
   951   000025                     dtoa@w:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x24
   955   000025                     	ds	2
   956   000027                     ___flmul@temp:
   957                           	callstack 0
   958   000027                     dtoa@i:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x26
   962   000027                     	ds	2
   963   000029                     ?___fltol:
   964                           	callstack 0
   965   000029                     dtoa@s:
   966                           	callstack 0
   967   000029                     ___fltol@f1:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x28
   971   000029                     	ds	1
   972   00002A                     vfpfcnvrt@fp:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x29
   976   00002A                     	ds	2
   977   00002C                     vfpfcnvrt@fmt:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x2B
   981   00002C                     	ds	1
   982   00002D                     ??___fltol:
   983                           
   984                           ; 1 bytes @ 0x2C
   985   00002D                     	ds	1
   986   00002E                     vfpfcnvrt@ap:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x2D
   990   00002E                     	ds	2
   991   000030                     ??_vfpfcnvrt:
   992                           
   993                           ; 1 bytes @ 0x2F
   994   000030                     	ds	1
   995   000031                     ___fltol@sign1:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x30
   999   000031                     	ds	1
  1000   000032                     ___fltol@exp1:
  1001                           	callstack 0
  1002   000032                     vfpfcnvrt@convarg:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x31
  1006   000032                     	ds	4
  1007   000036                     vfpfcnvrt@cp:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x35
  1011   000036                     	ds	2
  1012   000038                     ?_vfprintf:
  1013                           	callstack 0
  1014   000038                     vfprintf@fp:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x37
  1018   000038                     	ds	2
  1019   00003A                     vfprintf@fmt:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x39
  1023   00003A                     	ds	2
  1024   00003C                     vfprintf@ap:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x3B
  1028   00003C                     	ds	2
  1029   00003E                     vfprintf@cfmt:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x3D
  1033   00003E                     	ds	2
  1034   000040                     ?_sprintf:
  1035                           	callstack 0
  1036   000040                     sprintf@s:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x3F
  1040   000040                     	ds	2
  1041   000042                     sprintf@fmt:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x41
  1045   000042                     	ds	6
  1046   000048                     sprintf@ap:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x47
  1050   000048                     	ds	2
  1051   00004A                     sprintf@f:
  1052                           	callstack 0
  1053                           
  1054                           ; 12 bytes @ 0x49
  1055   00004A                     	ds	12
  1056   000056                     convert_uint16_to_string@value:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x55
  1060   000056                     	ds	2
  1061   000058                     convert_uint16_to_string@str:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x57
  1065   000058                     	ds	2
  1066   00005A                     convert_uint16_to_string@Temp_String:
  1067                           	callstack 0
  1068                           
  1069                           ; 6 bytes @ 0x59
  1070   00005A                     	ds	6
  1071   000060                     convert_uint16_to_string@ret:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x5F
  1075   000060                     	ds	1
  1076   000061                     convert_uint16_to_string@DataCounter:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x60
  1080   000061                     	ds	1
  1081   000062                     ??_main:
  1082                           
  1083                           ; 1 bytes @ 0x61
  1084   000062                     	ds	2
  1085                           
  1086 ;;
  1087 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1088 ;;
  1089 ;; *************** function _main *****************
  1090 ;; Defined at:
  1091 ;;		line 81 in file "application.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  ret             1    0        unsigned char 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  2  1637[None  ] int 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;Total ram usage:        2 bytes
  1110 ;; Hardware stack levels required when called: 11
  1111 ;; This function calls:
  1112 ;;		_ADC_GetConversion_Blocking
  1113 ;;		___flmul
  1114 ;;		___fltol
  1115 ;;		___lwdiv
  1116 ;;		___xxtofl
  1117 ;;		_application_intialize
  1118 ;;		_convert_uint16_to_string
  1119 ;;		_dc_motor_move_right
  1120 ;;		_dc_motor_stop
  1121 ;;		_lcd_4bit_send_command
  1122 ;;		_lcd_4bit_send_string_pos
  1123 ;;		_led_turn_off
  1124 ;;		_led_turn_on
  1125 ;; This function is called by:
  1126 ;;		Startup code after reset
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text0
  1131   001468                     __ptext0:
  1132                           	callstack 0
  1133   001468                     _main:
  1134                           	callstack 20
  1135   001468                     
  1136                           ;application.c: 84:     application_intialize();
  1137   001468  EC86  F018         	call	_application_intialize	;wreg free
  1138   00146C  0EF2               	movlw	low _lcd_1
  1139   00146E  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1140   001470  0E00               	movlw	high _lcd_1
  1141   001472  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1142   001474  0E01               	movlw	1
  1143   001476  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1144   001478  0E04               	movlw	4
  1145   00147A  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1146   00147C  0E11               	movlw	low STR_4
  1147   00147E  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1148   001480  0E10               	movlw	high STR_4
  1149   001482  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1150   001484  EC66  F015         	call	_lcd_4bit_send_string_pos	;wreg free
  1151   001488                     
  1152                           ;application.c: 87:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
  1153   001488  0E0B               	movlw	11
  1154   00148A  6E63               	movwf	(??_main+1)^0,c
  1155   00148C  0E26               	movlw	38
  1156   00148E  6E62               	movwf	??_main^0,c
  1157   001490  0E5E               	movlw	94
  1158   001492                     u6517:
  1159   001492  2EE8               	decfsz	wreg,f,c
  1160   001494  D7FE               	bra	u6517
  1161   001496  2E62               	decfsz	??_main^0,f,c
  1162   001498  D7FC               	bra	u6517
  1163   00149A  2E63               	decfsz	(??_main+1)^0,f,c
  1164   00149C  D7FA               	bra	u6517
  1165   00149E  0EF2               	movlw	low _lcd_1
  1166   0014A0  6E10               	movwf	lcd_4bit_send_command@lcd^0,c
  1167   0014A2  0E00               	movlw	high _lcd_1
  1168   0014A4  6E11               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1169   0014A6  0E01               	movlw	1
  1170   0014A8  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1171   0014AA  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  1172   0014AE  0EF2               	movlw	low _lcd_1
  1173   0014B0  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1174   0014B2  0E00               	movlw	high _lcd_1
  1175   0014B4  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1176   0014B6  0E02               	movlw	2
  1177   0014B8  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1178   0014BA  0E05               	movlw	5
  1179   0014BC  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1180   0014BE  0E1F               	movlw	low STR_5
  1181   0014C0  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1182   0014C2  0E10               	movlw	high STR_5
  1183   0014C4  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1184   0014C6  EC66  F015         	call	_lcd_4bit_send_string_pos	;wreg free
  1185   0014CA  0EF2               	movlw	low _lcd_1
  1186   0014CC  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1187   0014CE  0E00               	movlw	high _lcd_1
  1188   0014D0  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1189   0014D2  0E03               	movlw	3
  1190   0014D4  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1191   0014D6  0E01               	movlw	1
  1192   0014D8  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1193   0014DA  0E29               	movlw	low STR_6
  1194   0014DC  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1195   0014DE  0E10               	movlw	high STR_6
  1196   0014E0  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1197   0014E2  EC66  F015         	call	_lcd_4bit_send_string_pos	;wreg free
  1198   0014E6  0EF2               	movlw	low _lcd_1
  1199   0014E8  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1200   0014EA  0E00               	movlw	high _lcd_1
  1201   0014EC  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1202   0014EE  0E04               	movlw	4
  1203   0014F0  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1204   0014F2  0E01               	movlw	1
  1205   0014F4  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1206   0014F6  0E31               	movlw	low STR_7
  1207   0014F8  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1208   0014FA  0E10               	movlw	high STR_7
  1209   0014FC  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1210   0014FE  EC66  F015         	call	_lcd_4bit_send_string_pos	;wreg free
  1211   001502                     l7939:
  1212   001502  0EEB               	movlw	low _adc_1
  1213   001504  6E0A               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1214   001506  0E00               	movlw	high _adc_1
  1215   001508  6E0B               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
  1216   00150A  0E00               	movlw	0
  1217   00150C  6E0C               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1218   00150E  0E75               	movlw	low _lm35_res_1
  1219   001510  6E0D               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1220   001512  0E00               	movlw	high _lm35_res_1
  1221   001514  6E0E               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1222   001516  ECEB  F016         	call	_ADC_GetConversion_Blocking	;wreg free
  1223   00151A  0EEB               	movlw	low _adc_1
  1224   00151C  6E0A               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1225   00151E  0E00               	movlw	high _adc_1
  1226   001520  6E0B               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
  1227   001522  0E01               	movlw	1
  1228   001524  6E0C               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1229   001526  0E73               	movlw	low _lm35_res_2
  1230   001528  6E0D               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1231   00152A  0E00               	movlw	high _lm35_res_2
  1232   00152C  6E0E               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1233   00152E  ECEB  F016         	call	_ADC_GetConversion_Blocking	;wreg free
  1234   001532                     
  1235                           ;application.c: 101:         lm35_res_1_Celsius_mv = lm35_res_1 * 4.88f;
  1236   001532  0EF6               	movlw	246
  1237   001534  6E14               	movwf	___flmul@a^0,c
  1238   001536  0E28               	movlw	40
  1239   001538  6E15               	movwf	(___flmul@a+1)^0,c
  1240   00153A  0E9C               	movlw	156
  1241   00153C  6E16               	movwf	(___flmul@a+2)^0,c
  1242   00153E  0E40               	movlw	64
  1243   001540  6E17               	movwf	(___flmul@a+3)^0,c
  1244   001542  C075  F002         	movff	_lm35_res_1,___xxtofl@val
  1245   001546  C076  F003         	movff	_lm35_res_1+1,___xxtofl@val+1
  1246   00154A  6A04               	clrf	(___xxtofl@val+2)^0,c
  1247   00154C  6A05               	clrf	(___xxtofl@val+3)^0,c
  1248   00154E  0E00               	movlw	0
  1249   001550  EC24  F00D         	call	___xxtofl
  1250   001554  C002  F010         	movff	?___xxtofl,___flmul@b
  1251   001558  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  1252   00155C  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  1253   001560  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  1254   001564  EC1F  F008         	call	___flmul	;wreg free
  1255   001568  C010  F029         	movff	?___flmul,___fltol@f1
  1256   00156C  C011  F02A         	movff	?___flmul+1,___fltol@f1+1
  1257   001570  C012  F02B         	movff	?___flmul+2,___fltol@f1+2
  1258   001574  C013  F02C         	movff	?___flmul+3,___fltol@f1+3
  1259   001578  ECE7  F011         	call	___fltol	;wreg free
  1260   00157C  C029  F068         	movff	?___fltol,_lm35_res_1_Celsius_mv
  1261   001580  C02A  F069         	movff	?___fltol+1,_lm35_res_1_Celsius_mv+1
  1262   001584                     
  1263                           ;application.c: 102:         lm35_res_2_Celsius_mv = lm35_res_2 * 4.88f;
  1264   001584  0EF6               	movlw	246
  1265   001586  6E14               	movwf	___flmul@a^0,c
  1266   001588  0E28               	movlw	40
  1267   00158A  6E15               	movwf	(___flmul@a+1)^0,c
  1268   00158C  0E9C               	movlw	156
  1269   00158E  6E16               	movwf	(___flmul@a+2)^0,c
  1270   001590  0E40               	movlw	64
  1271   001592  6E17               	movwf	(___flmul@a+3)^0,c
  1272   001594  C073  F002         	movff	_lm35_res_2,___xxtofl@val
  1273   001598  C074  F003         	movff	_lm35_res_2+1,___xxtofl@val+1
  1274   00159C  6A04               	clrf	(___xxtofl@val+2)^0,c
  1275   00159E  6A05               	clrf	(___xxtofl@val+3)^0,c
  1276   0015A0  0E00               	movlw	0
  1277   0015A2  EC24  F00D         	call	___xxtofl
  1278   0015A6  C002  F010         	movff	?___xxtofl,___flmul@b
  1279   0015AA  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  1280   0015AE  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  1281   0015B2  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  1282   0015B6  EC1F  F008         	call	___flmul	;wreg free
  1283   0015BA  C010  F029         	movff	?___flmul,___fltol@f1
  1284   0015BE  C011  F02A         	movff	?___flmul+1,___fltol@f1+1
  1285   0015C2  C012  F02B         	movff	?___flmul+2,___fltol@f1+2
  1286   0015C6  C013  F02C         	movff	?___flmul+3,___fltol@f1+3
  1287   0015CA  ECE7  F011         	call	___fltol	;wreg free
  1288   0015CE  C029  F066         	movff	?___fltol,_lm35_res_2_Celsius_mv
  1289   0015D2  C02A  F067         	movff	?___fltol+1,_lm35_res_2_Celsius_mv+1
  1290   0015D6                     
  1291                           ;application.c: 104:         lm35_res_1_Celsius_mv /= 10;
  1292   0015D6  C068  F002         	movff	_lm35_res_1_Celsius_mv,___lwdiv@dividend
  1293   0015DA  C069  F003         	movff	_lm35_res_1_Celsius_mv+1,___lwdiv@dividend+1
  1294   0015DE  0E00               	movlw	0
  1295   0015E0  6E05               	movwf	(___lwdiv@divisor+1)^0,c
  1296   0015E2  0E0A               	movlw	10
  1297   0015E4  6E04               	movwf	___lwdiv@divisor^0,c
  1298   0015E6  ECB1  F016         	call	___lwdiv	;wreg free
  1299   0015EA  C002  F068         	movff	?___lwdiv,_lm35_res_1_Celsius_mv
  1300   0015EE  C003  F069         	movff	?___lwdiv+1,_lm35_res_1_Celsius_mv+1
  1301   0015F2                     
  1302                           ;application.c: 105:         lm35_res_2_Celsius_mv /= 10;
  1303   0015F2  C066  F002         	movff	_lm35_res_2_Celsius_mv,___lwdiv@dividend
  1304   0015F6  C067  F003         	movff	_lm35_res_2_Celsius_mv+1,___lwdiv@dividend+1
  1305   0015FA  0E00               	movlw	0
  1306   0015FC  6E05               	movwf	(___lwdiv@divisor+1)^0,c
  1307   0015FE  0E0A               	movlw	10
  1308   001600  6E04               	movwf	___lwdiv@divisor^0,c
  1309   001602  ECB1  F016         	call	___lwdiv	;wreg free
  1310   001606  C002  F066         	movff	?___lwdiv,_lm35_res_2_Celsius_mv
  1311   00160A  C003  F067         	movff	?___lwdiv+1,_lm35_res_2_Celsius_mv+1
  1312   00160E  C068  F056         	movff	_lm35_res_1_Celsius_mv,convert_uint16_to_string@value
  1313   001612  C069  F057         	movff	_lm35_res_1_Celsius_mv+1,convert_uint16_to_string@value+1
  1314   001616  0EC6               	movlw	low _lm35_res_1_txt
  1315   001618  6E58               	movwf	convert_uint16_to_string@str^0,c
  1316   00161A  0E00               	movlw	high _lm35_res_1_txt
  1317   00161C  6E59               	movwf	(convert_uint16_to_string@str+1)^0,c
  1318   00161E  EC5F  F014         	call	_convert_uint16_to_string	;wreg free
  1319   001622  C066  F056         	movff	_lm35_res_2_Celsius_mv,convert_uint16_to_string@value
  1320   001626  C067  F057         	movff	_lm35_res_2_Celsius_mv+1,convert_uint16_to_string@value+1
  1321   00162A  0EBF               	movlw	low _lm35_res_2_txt
  1322   00162C  6E58               	movwf	convert_uint16_to_string@str^0,c
  1323   00162E  0E00               	movlw	high _lm35_res_2_txt
  1324   001630  6E59               	movwf	(convert_uint16_to_string@str+1)^0,c
  1325   001632  EC5F  F014         	call	_convert_uint16_to_string	;wreg free
  1326   001636  0EF2               	movlw	low _lcd_1
  1327   001638  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1328   00163A  0E00               	movlw	high _lcd_1
  1329   00163C  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1330   00163E  0E03               	movlw	3
  1331   001640  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1332   001642  0E08               	movlw	8
  1333   001644  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1334   001646  0EC6               	movlw	low _lm35_res_1_txt
  1335   001648  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1336   00164A  0E00               	movlw	high _lm35_res_1_txt
  1337   00164C  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1338   00164E  EC66  F015         	call	_lcd_4bit_send_string_pos	;wreg free
  1339   001652  0EF2               	movlw	low _lcd_1
  1340   001654  6E1B               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1341   001656  0E00               	movlw	high _lcd_1
  1342   001658  6E1C               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1343   00165A  0E04               	movlw	4
  1344   00165C  6E1D               	movwf	lcd_4bit_send_string_pos@row^0,c
  1345   00165E  0E08               	movlw	8
  1346   001660  6E1E               	movwf	lcd_4bit_send_string_pos@column^0,c
  1347   001662  0EBF               	movlw	low _lm35_res_2_txt
  1348   001664  6E1F               	movwf	lcd_4bit_send_string_pos@str^0,c
  1349   001666  0E00               	movlw	high _lm35_res_2_txt
  1350   001668  6E20               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1351   00166A  EC66  F015         	call	_lcd_4bit_send_string_pos	;wreg free
  1352   00166E                     
  1353                           ;application.c: 115:         if(lm35_res_1_Celsius_mv > 25){
  1354   00166E  5069               	movf	(_lm35_res_1_Celsius_mv+1)^0,w,c
  1355   001670  E109               	bnz	u6490
  1356   001672  0E1A               	movlw	26
  1357   001674  5C68               	subwf	_lm35_res_1_Celsius_mv^0,w,c
  1358   001676  A0D8               	btfss	status,0,c
  1359   001678  EF40  F00B         	goto	u6491
  1360   00167C  EF42  F00B         	goto	u6490
  1361   001680                     u6491:
  1362   001680  EF5B  F00B         	goto	l7967
  1363   001684                     u6490:
  1364   001684  0EFA               	movlw	low _dc_motor_1
  1365   001686  6E0C               	movwf	dc_motor_move_right@_dc_motor^0,c
  1366   001688  0E00               	movlw	high _dc_motor_1
  1367   00168A  6E0D               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  1368   00168C  ECF3  F018         	call	_dc_motor_move_right	;wreg free
  1369   001690                     
  1370                           ;application.c: 117:                         _delay((unsigned long)((250)*(4000000UL/400
      +                          0.0)));
  1371   001690  0E02               	movlw	2
  1372   001692  6E63               	movwf	(??_main+1)^0,c
  1373   001694  0E45               	movlw	69
  1374   001696  6E62               	movwf	??_main^0,c
  1375   001698  0EAA               	movlw	170
  1376   00169A                     u6527:
  1377   00169A  2EE8               	decfsz	wreg,f,c
  1378   00169C  D7FE               	bra	u6527
  1379   00169E  2E62               	decfsz	??_main^0,f,c
  1380   0016A0  D7FC               	bra	u6527
  1381   0016A2  2E63               	decfsz	(??_main+1)^0,f,c
  1382   0016A4  D7FA               	bra	u6527
  1383   0016A6  0E7D               	movlw	low _led1
  1384   0016A8  6E0C               	movwf	led_turn_off@led^0,c
  1385   0016AA  0E00               	movlw	high _led1
  1386   0016AC  6E0D               	movwf	(led_turn_off@led+1)^0,c
  1387   0016AE  ECF6  F015         	call	_led_turn_off	;wreg free
  1388                           
  1389                           ;application.c: 120:         }
  1390   0016B2  EF72  F00B         	goto	l7973
  1391   0016B6                     l7967:
  1392   0016B6  0EFA               	movlw	low _dc_motor_1
  1393   0016B8  6E0C               	movwf	dc_motor_stop@_dc_motor^0,c
  1394   0016BA  0E00               	movlw	high _dc_motor_1
  1395   0016BC  6E0D               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1396   0016BE  ECD0  F018         	call	_dc_motor_stop	;wreg free
  1397   0016C2                     
  1398                           ;application.c: 123:             _delay((unsigned long)((250)*(4000000UL/4000.0)));
  1399   0016C2  0E02               	movlw	2
  1400   0016C4  6E63               	movwf	(??_main+1)^0,c
  1401   0016C6  0E45               	movlw	69
  1402   0016C8  6E62               	movwf	??_main^0,c
  1403   0016CA  0EAA               	movlw	170
  1404   0016CC                     u6537:
  1405   0016CC  2EE8               	decfsz	wreg,f,c
  1406   0016CE  D7FE               	bra	u6537
  1407   0016D0  2E62               	decfsz	??_main^0,f,c
  1408   0016D2  D7FC               	bra	u6537
  1409   0016D4  2E63               	decfsz	(??_main+1)^0,f,c
  1410   0016D6  D7FA               	bra	u6537
  1411   0016D8  0E7D               	movlw	low _led1
  1412   0016DA  6E0C               	movwf	led_turn_on@led^0,c
  1413   0016DC  0E00               	movlw	high _led1
  1414   0016DE  6E0D               	movwf	(led_turn_on@led+1)^0,c
  1415   0016E0  ECB6  F015         	call	_led_turn_on	;wreg free
  1416   0016E4                     l7973:
  1417                           
  1418                           ;application.c: 128:         if(lm35_res_2_Celsius_mv > 25){
  1419   0016E4  5067               	movf	(_lm35_res_2_Celsius_mv+1)^0,w,c
  1420   0016E6  E109               	bnz	u6500
  1421   0016E8  0E1A               	movlw	26
  1422   0016EA  5C66               	subwf	_lm35_res_2_Celsius_mv^0,w,c
  1423   0016EC  A0D8               	btfss	status,0,c
  1424   0016EE  EF7B  F00B         	goto	u6501
  1425   0016F2  EF7D  F00B         	goto	u6500
  1426   0016F6                     u6501:
  1427   0016F6  EF96  F00B         	goto	l7981
  1428   0016FA                     u6500:
  1429   0016FA  0EF8               	movlw	low _dc_motor_2
  1430   0016FC  6E0C               	movwf	dc_motor_move_right@_dc_motor^0,c
  1431   0016FE  0E00               	movlw	high _dc_motor_2
  1432   001700  6E0D               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  1433   001702  ECF3  F018         	call	_dc_motor_move_right	;wreg free
  1434   001706                     
  1435                           ;application.c: 130:                         _delay((unsigned long)((250)*(4000000UL/400
      +                          0.0)));
  1436   001706  0E02               	movlw	2
  1437   001708  6E63               	movwf	(??_main+1)^0,c
  1438   00170A  0E45               	movlw	69
  1439   00170C  6E62               	movwf	??_main^0,c
  1440   00170E  0EAA               	movlw	170
  1441   001710                     u6547:
  1442   001710  2EE8               	decfsz	wreg,f,c
  1443   001712  D7FE               	bra	u6547
  1444   001714  2E62               	decfsz	??_main^0,f,c
  1445   001716  D7FC               	bra	u6547
  1446   001718  2E63               	decfsz	(??_main+1)^0,f,c
  1447   00171A  D7FA               	bra	u6547
  1448   00171C  0E7C               	movlw	low _led2
  1449   00171E  6E0C               	movwf	led_turn_off@led^0,c
  1450   001720  0E00               	movlw	high _led2
  1451   001722  6E0D               	movwf	(led_turn_off@led+1)^0,c
  1452   001724  ECF6  F015         	call	_led_turn_off	;wreg free
  1453                           
  1454                           ;application.c: 133:         }
  1455   001728  EF81  F00A         	goto	l7939
  1456   00172C                     l7981:
  1457   00172C  0EF8               	movlw	low _dc_motor_2
  1458   00172E  6E0C               	movwf	dc_motor_stop@_dc_motor^0,c
  1459   001730  0E00               	movlw	high _dc_motor_2
  1460   001732  6E0D               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1461   001734  ECD0  F018         	call	_dc_motor_stop	;wreg free
  1462   001738                     
  1463                           ;application.c: 136:            _delay((unsigned long)((250)*(4000000UL/4000.0)));
  1464   001738  0E02               	movlw	2
  1465   00173A  6E63               	movwf	(??_main+1)^0,c
  1466   00173C  0E45               	movlw	69
  1467   00173E  6E62               	movwf	??_main^0,c
  1468   001740  0EAA               	movlw	170
  1469   001742                     u6557:
  1470   001742  2EE8               	decfsz	wreg,f,c
  1471   001744  D7FE               	bra	u6557
  1472   001746  2E62               	decfsz	??_main^0,f,c
  1473   001748  D7FC               	bra	u6557
  1474   00174A  2E63               	decfsz	(??_main+1)^0,f,c
  1475   00174C  D7FA               	bra	u6557
  1476   00174E  0E7C               	movlw	low _led2
  1477   001750  6E0C               	movwf	led_turn_on@led^0,c
  1478   001752  0E00               	movlw	high _led2
  1479   001754  6E0D               	movwf	(led_turn_on@led+1)^0,c
  1480   001756  ECB6  F015         	call	_led_turn_on	;wreg free
  1481   00175A  EF81  F00A         	goto	l7939
  1482   00175E  EF07  F000         	goto	start
  1483   001762                     __end_of_main:
  1484                           	callstack 0
  1485                           
  1486 ;; *************** function _led_turn_on *****************
  1487 ;; Defined at:
  1488 ;;		line 36 in file "ECU_Layer/LED/ecu_led.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  led             2   11[COMRAM] PTR const struct .
  1491 ;;		 -> led2(1), led1(1), 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  pin_obj         1   15[COMRAM] struct .
  1494 ;;  ret             1   14[COMRAM] unsigned char 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      unsigned char 
  1497 ;; Registers used:
  1498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;Total ram usage:        5 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; Hardware stack levels required when called: 3
  1511 ;; This function calls:
  1512 ;;		_gpio_pin_write_logic
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text1
  1519   002B6C                     __ptext1:
  1520                           	callstack 0
  1521   002B6C                     _led_turn_on:
  1522                           	callstack 27
  1523   002B6C                     
  1524                           ;ECU_Layer/LED/ecu_led.c: 37:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1525   002B6C  0E01               	movlw	1
  1526   002B6E  6E0F               	movwf	led_turn_on@ret^0,c
  1527   002B70                     
  1528                           ;ECU_Layer/LED/ecu_led.c: 38:      if(((void*)0) == led){
  1529   002B70  500C               	movf	led_turn_on@led^0,w,c
  1530   002B72  100D               	iorwf	(led_turn_on@led+1)^0,w,c
  1531   002B74  A4D8               	btfss	status,2,c
  1532   002B76  EFBF  F015         	goto	u4491
  1533   002B7A  EFC1  F015         	goto	u4490
  1534   002B7E                     u4491:
  1535   002B7E  EFC5  F015         	goto	l284
  1536   002B82                     u4490:
  1537   002B82                     
  1538                           ;ECU_Layer/LED/ecu_led.c: 39:          ret = (Std_ReturnType)0x00;
  1539   002B82  0E00               	movlw	0
  1540   002B84  6E0F               	movwf	led_turn_on@ret^0,c
  1541                           
  1542                           ;ECU_Layer/LED/ecu_led.c: 40:      }
  1543   002B86  EFF4  F015         	goto	l6355
  1544   002B8A                     l284:
  1545                           
  1546                           ;ECU_Layer/LED/ecu_led.c: 42:          pin_config_t pin_obj = { .port = led->port_name, 
      +                          .pin = led->pin,
  1547   002B8A  C071  F010         	movff	led_turn_on@F3053,led_turn_on@pin_obj
  1548   002B8E  C00C  FFD9         	movff	led_turn_on@led,fsr2l
  1549   002B92  C00D  FFDA         	movff	led_turn_on@led+1,fsr2h
  1550   002B96  50DF               	movf	223,w,c
  1551   002B98  0B0F               	andlw	15
  1552   002B9A  6E0E               	movwf	??_led_turn_on^0,c
  1553   002B9C  5010               	movf	led_turn_on@pin_obj^0,w,c
  1554   002B9E  180E               	xorwf	??_led_turn_on^0,w,c
  1555   002BA0  0BF8               	andlw	-8
  1556   002BA2  180E               	xorwf	??_led_turn_on^0,w,c
  1557   002BA4  6E10               	movwf	led_turn_on@pin_obj^0,c
  1558   002BA6  C00C  FFD9         	movff	led_turn_on@led,fsr2l
  1559   002BAA  C00D  FFDA         	movff	led_turn_on@led+1,fsr2h
  1560   002BAE  38DF               	swapf	223,w,c
  1561   002BB0  0B07               	andlw	7
  1562   002BB2  6E0E               	movwf	??_led_turn_on^0,c
  1563   002BB4  460E               	rlncf	??_led_turn_on^0,f,c
  1564   002BB6  460E               	rlncf	??_led_turn_on^0,f,c
  1565   002BB8  460E               	rlncf	??_led_turn_on^0,f,c
  1566   002BBA  5010               	movf	led_turn_on@pin_obj^0,w,c
  1567   002BBC  180E               	xorwf	??_led_turn_on^0,w,c
  1568   002BBE  0BC7               	andlw	-57
  1569   002BC0  180E               	xorwf	??_led_turn_on^0,w,c
  1570   002BC2  6E10               	movwf	led_turn_on@pin_obj^0,c
  1571   002BC4  9C10               	bcf	led_turn_on@pin_obj^0,6,c
  1572   002BC6  C00C  FFD9         	movff	led_turn_on@led,fsr2l
  1573   002BCA  C00D  FFDA         	movff	led_turn_on@led+1,fsr2h
  1574   002BCE  AEDF               	btfss	indf2,7,c
  1575   002BD0  D002               	bra	u4505
  1576   002BD2  8E10               	bsf	led_turn_on@pin_obj^0,7,c
  1577   002BD4  D001               	bra	u4507
  1578   002BD6                     u4505:
  1579   002BD6  9E10               	bcf	led_turn_on@pin_obj^0,7,c
  1580   002BD8                     u4507:
  1581   002BD8                     
  1582                           ;ECU_Layer/LED/ecu_led.c: 44:          gpio_pin_write_logic(&pin_obj, GPIO_HIGH);
  1583   002BD8  0E10               	movlw	low led_turn_on@pin_obj
  1584   002BDA  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1585   002BDC  0E00               	movlw	high led_turn_on@pin_obj
  1586   002BDE  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1587   002BE0  0E01               	movlw	1
  1588   002BE2  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  1589   002BE4  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  1590   002BE8                     l6355:
  1591                           
  1592                           ;ECU_Layer/LED/ecu_led.c: 46:     return ret;
  1593   002BE8  500F               	movf	led_turn_on@ret^0,w,c
  1594   002BEA  0012               	return		;funcret
  1595   002BEC                     __end_of_led_turn_on:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function _led_turn_off *****************
  1599 ;; Defined at:
  1600 ;;		line 56 in file "ECU_Layer/LED/ecu_led.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  led             2   11[COMRAM] PTR const struct .
  1603 ;;		 -> led2(1), led1(1), 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  pin_obj         1   15[COMRAM] struct .
  1606 ;;  ret             1   14[COMRAM] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      unsigned char 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;Total ram usage:        5 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 3
  1623 ;; This function calls:
  1624 ;;		_gpio_pin_write_logic
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text2
  1631   002BEC                     __ptext2:
  1632                           	callstack 0
  1633   002BEC                     _led_turn_off:
  1634                           	callstack 27
  1635   002BEC                     
  1636                           ;ECU_Layer/LED/ecu_led.c: 57:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1637   002BEC  0E01               	movlw	1
  1638   002BEE  6E0F               	movwf	led_turn_off@ret^0,c
  1639   002BF0                     
  1640                           ;ECU_Layer/LED/ecu_led.c: 58:      if(((void*)0) == led){
  1641   002BF0  500C               	movf	led_turn_off@led^0,w,c
  1642   002BF2  100D               	iorwf	(led_turn_off@led+1)^0,w,c
  1643   002BF4  A4D8               	btfss	status,2,c
  1644   002BF6  EFFF  F015         	goto	u4511
  1645   002BFA  EF01  F016         	goto	u4510
  1646   002BFE                     u4511:
  1647   002BFE  EF05  F016         	goto	l291
  1648   002C02                     u4510:
  1649   002C02                     
  1650                           ;ECU_Layer/LED/ecu_led.c: 59:          ret = (Std_ReturnType)0x00;
  1651   002C02  0E00               	movlw	0
  1652   002C04  6E0F               	movwf	led_turn_off@ret^0,c
  1653                           
  1654                           ;ECU_Layer/LED/ecu_led.c: 60:      }
  1655   002C06  EF34  F016         	goto	l6373
  1656   002C0A                     l291:
  1657                           
  1658                           ;ECU_Layer/LED/ecu_led.c: 62:          pin_config_t pin_obj = { .port = led->port_name, 
      +                          .pin = led->pin,
  1659   002C0A  C070  F010         	movff	led_turn_off@F3058,led_turn_off@pin_obj
  1660   002C0E  C00C  FFD9         	movff	led_turn_off@led,fsr2l
  1661   002C12  C00D  FFDA         	movff	led_turn_off@led+1,fsr2h
  1662   002C16  50DF               	movf	223,w,c
  1663   002C18  0B0F               	andlw	15
  1664   002C1A  6E0E               	movwf	??_led_turn_off^0,c
  1665   002C1C  5010               	movf	led_turn_off@pin_obj^0,w,c
  1666   002C1E  180E               	xorwf	??_led_turn_off^0,w,c
  1667   002C20  0BF8               	andlw	-8
  1668   002C22  180E               	xorwf	??_led_turn_off^0,w,c
  1669   002C24  6E10               	movwf	led_turn_off@pin_obj^0,c
  1670   002C26  C00C  FFD9         	movff	led_turn_off@led,fsr2l
  1671   002C2A  C00D  FFDA         	movff	led_turn_off@led+1,fsr2h
  1672   002C2E  38DF               	swapf	223,w,c
  1673   002C30  0B07               	andlw	7
  1674   002C32  6E0E               	movwf	??_led_turn_off^0,c
  1675   002C34  460E               	rlncf	??_led_turn_off^0,f,c
  1676   002C36  460E               	rlncf	??_led_turn_off^0,f,c
  1677   002C38  460E               	rlncf	??_led_turn_off^0,f,c
  1678   002C3A  5010               	movf	led_turn_off@pin_obj^0,w,c
  1679   002C3C  180E               	xorwf	??_led_turn_off^0,w,c
  1680   002C3E  0BC7               	andlw	-57
  1681   002C40  180E               	xorwf	??_led_turn_off^0,w,c
  1682   002C42  6E10               	movwf	led_turn_off@pin_obj^0,c
  1683   002C44  9C10               	bcf	led_turn_off@pin_obj^0,6,c
  1684   002C46  C00C  FFD9         	movff	led_turn_off@led,fsr2l
  1685   002C4A  C00D  FFDA         	movff	led_turn_off@led+1,fsr2h
  1686   002C4E  AEDF               	btfss	indf2,7,c
  1687   002C50  D002               	bra	u4525
  1688   002C52  8E10               	bsf	led_turn_off@pin_obj^0,7,c
  1689   002C54  D001               	bra	u4527
  1690   002C56                     u4525:
  1691   002C56  9E10               	bcf	led_turn_off@pin_obj^0,7,c
  1692   002C58                     u4527:
  1693   002C58                     
  1694                           ;ECU_Layer/LED/ecu_led.c: 64:          gpio_pin_write_logic(&pin_obj, GPIO_LOW);
  1695   002C58  0E10               	movlw	low led_turn_off@pin_obj
  1696   002C5A  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1697   002C5C  0E00               	movlw	high led_turn_off@pin_obj
  1698   002C5E  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1699   002C60  0E00               	movlw	0
  1700   002C62  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  1701   002C64  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  1702   002C68                     l6373:
  1703                           
  1704                           ;ECU_Layer/LED/ecu_led.c: 66:     return ret;
  1705   002C68  500F               	movf	led_turn_off@ret^0,w,c
  1706   002C6A  0012               	return		;funcret
  1707   002C6C                     __end_of_led_turn_off:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function _lcd_4bit_send_string_pos *****************
  1711 ;; Defined at:
  1712 ;;		line 170 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  lcd             2   26[COMRAM] PTR const struct .
  1715 ;;		 -> lcd_1(6), 
  1716 ;;  row             1   28[COMRAM] unsigned char 
  1717 ;;  column          1   29[COMRAM] unsigned char 
  1718 ;;  str             2   30[COMRAM] PTR unsigned char 
  1719 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), STR_7(8), STR_6(8), 
  1720 ;;		 -> STR_5(10), STR_4(14), 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  ret             1   32[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      unsigned char 
  1725 ;; Registers used:
  1726 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1732 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;Total ram usage:        7 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 6
  1739 ;; This function calls:
  1740 ;;		_lcd_4bit_send_char_data
  1741 ;;		_lcd_4bit_set_cursor
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text3
  1748   002ACC                     __ptext3:
  1749                           	callstack 0
  1750   002ACC                     _lcd_4bit_send_string_pos:
  1751                           	callstack 24
  1752   002ACC                     
  1753                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 172:     if(((void*)0) == lcd){
  1754   002ACC  501B               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1755   002ACE  101C               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  1756   002AD0  A4D8               	btfss	status,2,c
  1757   002AD2  EF6D  F015         	goto	u4341
  1758   002AD6  EF6F  F015         	goto	u4340
  1759   002ADA                     u4341:
  1760   002ADA  EF73  F015         	goto	l6225
  1761   002ADE                     u4340:
  1762   002ADE                     
  1763                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 173:         ret = (Std_ReturnType)0x00;
  1764   002ADE  0E00               	movlw	0
  1765   002AE0  6E21               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1766                           
  1767                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 174:     }
  1768   002AE2  EFB4  F015         	goto	l6233
  1769   002AE6                     l6225:
  1770                           
  1771                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 176:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  1772   002AE6  C01B  F014         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1773   002AEA  C01C  F015         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1774   002AEE  C01D  F016         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1775   002AF2  C01E  F017         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@coulmn
  1776   002AF6  EC12  F015         	call	_lcd_4bit_set_cursor	;wreg free
  1777   002AFA  6E21               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1778                           
  1779                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 177:         while(*str){
  1780   002AFC  EF9B  F015         	goto	l6231
  1781   002B00                     l6227:
  1782                           
  1783                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 178:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  1784   002B00  C01B  F010         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1785   002B04  C01C  F011         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1786   002B08  C01F  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1787   002B0C  C020  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1788   002B10  0E00               	movlw	low (__smallconst shr (0+16))
  1789   002B12  6EF8               	movwf	tblptru,c
  1790   002B14  0E0F               	movlw	(high __ramtop+-1)
  1791   002B16  64F7               	cpfsgt	tblptrh,c
  1792   002B18  D003               	bra	u4357
  1793   002B1A  0008               	tblrd		*
  1794   002B1C  50F5               	movf	tablat,w,c
  1795   002B1E  D005               	bra	u4350
  1796   002B20                     u4357:
  1797   002B20  CFF6 FFE9          	movff	tblptrl,fsr0l
  1798   002B24  CFF7 FFEA          	movff	tblptrh,fsr0h
  1799   002B28  50EF               	movf	indf0,w,c
  1800   002B2A                     u4350:
  1801   002B2A  6E12               	movwf	lcd_4bit_send_char_data@data^0,c
  1802   002B2C  EC25  F017         	call	_lcd_4bit_send_char_data	;wreg free
  1803   002B30  6E21               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1804   002B32  4A1F               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1805   002B34  2A20               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1806   002B36                     l6231:
  1807                           
  1808                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 177:         while(*str){
  1809   002B36  C01F  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1810   002B3A  C020  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1811   002B3E  0E00               	movlw	low (__smallconst shr (0+16))
  1812   002B40  6EF8               	movwf	tblptru,c
  1813   002B42  0E0F               	movlw	(high __ramtop+-1)
  1814   002B44  64F7               	cpfsgt	tblptrh,c
  1815   002B46  D003               	bra	u4367
  1816   002B48  0008               	tblrd		*
  1817   002B4A  50F5               	movf	tablat,w,c
  1818   002B4C  D005               	bra	u4360
  1819   002B4E                     u4367:
  1820   002B4E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1821   002B52  CFF7 FFEA          	movff	tblptrh,fsr0h
  1822   002B56  50EF               	movf	indf0,w,c
  1823   002B58                     u4360:
  1824   002B58  0900               	iorlw	0
  1825   002B5A  A4D8               	btfss	status,2,c
  1826   002B5C  EFB2  F015         	goto	u4371
  1827   002B60  EFB4  F015         	goto	u4370
  1828   002B64                     u4371:
  1829   002B64  EF80  F015         	goto	l6227
  1830   002B68                     u4370:
  1831   002B68                     l6233:
  1832                           
  1833                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 181:     return ret;
  1834   002B68  5021               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1835   002B6A  0012               	return		;funcret
  1836   002B6C                     __end_of_lcd_4bit_send_string_pos:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _lcd_4bit_set_cursor *****************
  1840 ;; Defined at:
  1841 ;;		line 570 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  lcd             2   19[COMRAM] PTR const struct .
  1844 ;;		 -> lcd_1(6), 
  1845 ;;  row             1   21[COMRAM] unsigned char 
  1846 ;;  coulmn          1   22[COMRAM] unsigned char 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  ret             1   25[COMRAM] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      unsigned char 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;Total ram usage:        7 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 5
  1865 ;; This function calls:
  1866 ;;		_lcd_4bit_send_command
  1867 ;; This function is called by:
  1868 ;;		_lcd_4bit_send_string_pos
  1869 ;;		_lcd_4bit_send_char_data_pos
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text4
  1874   002A24                     __ptext4:
  1875                           	callstack 0
  1876   002A24                     _lcd_4bit_set_cursor:
  1877                           	callstack 24
  1878   002A24                     
  1879                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 571:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1880   002A24  0E01               	movlw	1
  1881   002A26  6E1A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1882   002A28                     
  1883                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 572:     coulmn--;
  1884   002A28  0617               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  1885                           
  1886                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 573:     switch(row){
  1887   002A2A  EF47  F015         	goto	l6005
  1888   002A2E                     l5997:
  1889   002A2E  C014  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1890   002A32  C015  F011         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1891   002A36  5017               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1892   002A38  0F80               	addlw	128
  1893   002A3A  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1894   002A3C  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  1895   002A40  6E1A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1896   002A42  EF64  F015         	goto	l6007
  1897   002A46                     l5999:
  1898   002A46  C014  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1899   002A4A  C015  F011         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1900   002A4E  5017               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1901   002A50  0FC0               	addlw	192
  1902   002A52  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1903   002A54  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  1904   002A58  6E1A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1905   002A5A  EF64  F015         	goto	l6007
  1906   002A5E                     l6001:
  1907   002A5E  C014  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1908   002A62  C015  F011         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1909   002A66  5017               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1910   002A68  0F94               	addlw	148
  1911   002A6A  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1912   002A6C  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  1913   002A70  6E1A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1914   002A72  EF64  F015         	goto	l6007
  1915   002A76                     l6003:
  1916   002A76  C014  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1917   002A7A  C015  F011         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1918   002A7E  5017               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1919   002A80  0FD4               	addlw	212
  1920   002A82  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1921   002A84  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  1922   002A88  6E1A               	movwf	lcd_4bit_set_cursor@ret^0,c
  1923   002A8A  EF64  F015         	goto	l6007
  1924   002A8E                     l6005:
  1925   002A8E  5016               	movf	lcd_4bit_set_cursor@row^0,w,c
  1926   002A90  6E18               	movwf	??_lcd_4bit_set_cursor^0,c
  1927   002A92  6A19               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1928                           
  1929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1930                           ; Switch size 1, requested type "simple"
  1931                           ; Number of cases is 1, Range of values is 0 to 0
  1932                           ; switch strategies available:
  1933                           ; Name         Instructions Cycles
  1934                           ; simple_byte            4     3 (average)
  1935                           ;	Chosen strategy is simple_byte
  1936   002A94  5019               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1937   002A96  0A00               	xorlw	0	; case 0
  1938   002A98  B4D8               	btfsc	status,2,c
  1939   002A9A  EF51  F015         	goto	l8067
  1940   002A9E  EF64  F015         	goto	l6007
  1941   002AA2                     l8067:
  1942                           
  1943                           ; Switch size 1, requested type "simple"
  1944                           ; Number of cases is 4, Range of values is 1 to 4
  1945                           ; switch strategies available:
  1946                           ; Name         Instructions Cycles
  1947                           ; simple_byte           13     7 (average)
  1948                           ;	Chosen strategy is simple_byte
  1949   002AA2  5018               	movf	??_lcd_4bit_set_cursor^0,w,c
  1950   002AA4  0A01               	xorlw	1	; case 1
  1951   002AA6  B4D8               	btfsc	status,2,c
  1952   002AA8  EF17  F015         	goto	l5997
  1953   002AAC  0A03               	xorlw	3	; case 2
  1954   002AAE  B4D8               	btfsc	status,2,c
  1955   002AB0  EF23  F015         	goto	l5999
  1956   002AB4  0A01               	xorlw	1	; case 3
  1957   002AB6  B4D8               	btfsc	status,2,c
  1958   002AB8  EF2F  F015         	goto	l6001
  1959   002ABC  0A07               	xorlw	7	; case 4
  1960   002ABE  B4D8               	btfsc	status,2,c
  1961   002AC0  EF3B  F015         	goto	l6003
  1962   002AC4  EF64  F015         	goto	l6007
  1963   002AC8                     l6007:
  1964                           
  1965                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 580:     return ret;
  1966   002AC8  501A               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1967   002ACA  0012               	return		;funcret
  1968   002ACC                     __end_of_lcd_4bit_set_cursor:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _lcd_4bit_send_char_data *****************
  1972 ;; Defined at:
  1973 ;;		line 96 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  lcd             2   15[COMRAM] PTR const struct .
  1976 ;;		 -> lcd_1(6), 
  1977 ;;  data            1   17[COMRAM] unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  ret             1   18[COMRAM] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      unsigned char 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1989 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;Total ram usage:        4 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 4
  1996 ;; This function calls:
  1997 ;;		_gpio_pin_write_logic
  1998 ;;		_lcd_4bit_send_enable_signal
  1999 ;;		_lcd_send_4bits
  2000 ;; This function is called by:
  2001 ;;		_lcd_4bit_send_string_pos
  2002 ;;		_lcd_4bit_send_char_data_pos
  2003 ;;		_lcd_4bit_send_string
  2004 ;;		_lcd_4bit_send_custom_char
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text5
  2009   002E4A                     __ptext5:
  2010                           	callstack 0
  2011   002E4A                     _lcd_4bit_send_char_data:
  2012                           	callstack 25
  2013   002E4A                     
  2014                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 98:     if(((void*)0) == lcd){
  2015   002E4A  5010               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  2016   002E4C  1011               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  2017   002E4E  A4D8               	btfss	status,2,c
  2018   002E50  EF2C  F017         	goto	u4131
  2019   002E54  EF2E  F017         	goto	u4130
  2020   002E58                     u4131:
  2021   002E58  EF32  F017         	goto	l5987
  2022   002E5C                     u4130:
  2023   002E5C                     
  2024                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 99:         ret = (Std_ReturnType)0x00;
  2025   002E5C  0E00               	movlw	0
  2026   002E5E  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  2027                           
  2028                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 100:     }
  2029   002E60  EF5C  F017         	goto	l5989
  2030   002E64                     l5987:
  2031                           
  2032                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 104:         ret = gpio_pin_write_logic(&(lcd->lcd_rs)
      +                          , GPIO_HIGH);
  2033   002E64  C010  F002         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  2034   002E68  C011  F003         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  2035   002E6C  0E01               	movlw	1
  2036   002E6E  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  2037   002E70  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  2038   002E74  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  2039                           
  2040                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 106:         ret = lcd_send_4bits(lcd, data >> 4);
  2041   002E76  C010  F00C         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2042   002E7A  C011  F00D         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2043   002E7E  3812               	swapf	lcd_4bit_send_char_data@data^0,w,c
  2044   002E80  0B0F               	andlw	15
  2045   002E82  6E0E               	movwf	lcd_send_4bits@_data_command^0,c
  2046   002E84  EC04  F018         	call	_lcd_send_4bits	;wreg free
  2047   002E88  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  2048                           
  2049                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 108:         ret = lcd_4bit_send_enable_signal(lcd);
  2050   002E8A  C010  F00C         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  2051   002E8E  C011  F00D         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  2052   002E92  ECB6  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  2053   002E96  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  2054                           
  2055                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 110:         ret = lcd_send_4bits(lcd, data);
  2056   002E98  C010  F00C         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2057   002E9C  C011  F00D         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2058   002EA0  C012  F00E         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  2059   002EA4  EC04  F018         	call	_lcd_send_4bits	;wreg free
  2060   002EA8  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  2061                           
  2062                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 112:         ret = lcd_4bit_send_enable_signal(lcd);
  2063   002EAA  C010  F00C         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  2064   002EAE  C011  F00D         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  2065   002EB2  ECB6  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  2066   002EB6  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  2067   002EB8                     l5989:
  2068                           
  2069                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 114:     return ret;
  2070   002EB8  5013               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2071   002EBA  0012               	return		;funcret
  2072   002EBC                     __end_of_lcd_4bit_send_char_data:
  2073                           	callstack 0
  2074                           
  2075 ;; *************** function _dc_motor_stop *****************
  2076 ;; Defined at:
  2077 ;;		line 73 in file "ECU_Layer/DC_MOTOR/ecu_dc_motor.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  _dc_motor       2   11[COMRAM] PTR const struct .
  2080 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  ret             1   13[COMRAM] unsigned char 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      unsigned char 
  2085 ;; Registers used:
  2086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;Total ram usage:        3 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 3
  2099 ;; This function calls:
  2100 ;;		_gpio_pin_write_logic
  2101 ;; This function is called by:
  2102 ;;		_main
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text6
  2107   0031A0                     __ptext6:
  2108                           	callstack 0
  2109   0031A0                     _dc_motor_stop:
  2110                           	callstack 27
  2111   0031A0                     
  2112                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 74:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2113   0031A0  0E01               	movlw	1
  2114   0031A2  6E0E               	movwf	dc_motor_stop@ret^0,c
  2115   0031A4                     
  2116                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 75:     if(((void*)0) == _dc_motor){
  2117   0031A4  500C               	movf	dc_motor_stop@_dc_motor^0,w,c
  2118   0031A6  100D               	iorwf	(dc_motor_stop@_dc_motor+1)^0,w,c
  2119   0031A8  A4D8               	btfss	status,2,c
  2120   0031AA  EFD9  F018         	goto	u4481
  2121   0031AE  EFDB  F018         	goto	u4480
  2122   0031B2                     u4481:
  2123   0031B2  EFDF  F018         	goto	l6335
  2124   0031B6                     u4480:
  2125   0031B6                     
  2126                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 76:         ret = (Std_ReturnType)0x00;
  2127   0031B6  0E00               	movlw	0
  2128   0031B8  6E0E               	movwf	dc_motor_stop@ret^0,c
  2129                           
  2130                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 77:     }
  2131   0031BA  EFF1  F018         	goto	l6337
  2132   0031BE                     l6335:
  2133                           
  2134                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 79:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_LOW);
  2135   0031BE  C00C  F002         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
  2136   0031C2  C00D  F003         	movff	dc_motor_stop@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  2137   0031C6  0E00               	movlw	0
  2138   0031C8  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  2139   0031CA  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  2140                           
  2141                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 80:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_LOW);
  2142   0031CE  0E01               	movlw	1
  2143   0031D0  240C               	addwf	dc_motor_stop@_dc_motor^0,w,c
  2144   0031D2  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2145   0031D4  0E00               	movlw	0
  2146   0031D6  200D               	addwfc	(dc_motor_stop@_dc_motor+1)^0,w,c
  2147   0031D8  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2148   0031DA  0E00               	movlw	0
  2149   0031DC  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  2150   0031DE  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  2151   0031E2                     l6337:
  2152                           
  2153                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 82:     return ret;
  2154   0031E2  500E               	movf	dc_motor_stop@ret^0,w,c
  2155   0031E4  0012               	return		;funcret
  2156   0031E6                     __end_of_dc_motor_stop:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _dc_motor_move_right *****************
  2160 ;; Defined at:
  2161 ;;		line 35 in file "ECU_Layer/DC_MOTOR/ecu_dc_motor.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  _dc_motor       2   11[COMRAM] PTR const struct .
  2164 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  ret             1   13[COMRAM] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      unsigned char 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:        3 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 3
  2183 ;; This function calls:
  2184 ;;		_gpio_pin_write_logic
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text7
  2191   0031E6                     __ptext7:
  2192                           	callstack 0
  2193   0031E6                     _dc_motor_move_right:
  2194                           	callstack 27
  2195   0031E6                     
  2196                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 36:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2197   0031E6  0E01               	movlw	1
  2198   0031E8  6E0E               	movwf	dc_motor_move_right@ret^0,c
  2199   0031EA                     
  2200                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 37:     if(((void*)0) == _dc_motor){
  2201   0031EA  500C               	movf	dc_motor_move_right@_dc_motor^0,w,c
  2202   0031EC  100D               	iorwf	(dc_motor_move_right@_dc_motor+1)^0,w,c
  2203   0031EE  A4D8               	btfss	status,2,c
  2204   0031F0  EFFC  F018         	goto	u4471
  2205   0031F4  EFFE  F018         	goto	u4470
  2206   0031F8                     u4471:
  2207   0031F8  EF02  F019         	goto	l6323
  2208   0031FC                     u4470:
  2209   0031FC                     
  2210                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 38:         ret = (Std_ReturnType)0x00;
  2211   0031FC  0E00               	movlw	0
  2212   0031FE  6E0E               	movwf	dc_motor_move_right@ret^0,c
  2213                           
  2214                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 39:     }
  2215   003200  EF14  F019         	goto	l6325
  2216   003204                     l6323:
  2217                           
  2218                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 41:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_HIGH);
  2219   003204  C00C  F002         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
  2220   003208  C00D  F003         	movff	dc_motor_move_right@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  2221   00320C  0E01               	movlw	1
  2222   00320E  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  2223   003210  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  2224                           
  2225                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 42:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_LOW);
  2226   003214  0E01               	movlw	1
  2227   003216  240C               	addwf	dc_motor_move_right@_dc_motor^0,w,c
  2228   003218  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2229   00321A  0E00               	movlw	0
  2230   00321C  200D               	addwfc	(dc_motor_move_right@_dc_motor+1)^0,w,c
  2231   00321E  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2232   003220  0E00               	movlw	0
  2233   003222  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  2234   003224  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  2235   003228                     l6325:
  2236                           
  2237                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 44:     return ret;
  2238   003228  500E               	movf	dc_motor_move_right@ret^0,w,c
  2239   00322A  0012               	return		;funcret
  2240   00322C                     __end_of_dc_motor_move_right:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function _convert_uint16_to_string *****************
  2244 ;; Defined at:
  2245 ;;		line 439 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  value           2   85[COMRAM] unsigned short 
  2248 ;;  str             2   87[COMRAM] PTR unsigned char 
  2249 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  Temp_String     6   89[COMRAM] unsigned char [6]
  2252 ;;  DataCounter     1   96[COMRAM] unsigned char 
  2253 ;;  ret             1   95[COMRAM] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      unsigned char 
  2256 ;; Registers used:
  2257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2263 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;Total ram usage:       12 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 10
  2270 ;; This function calls:
  2271 ;;		_memset
  2272 ;;		_sprintf
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text8
  2279   0028BE                     __ptext8:
  2280                           	callstack 0
  2281   0028BE                     _convert_uint16_to_string:
  2282                           	callstack 20
  2283   0028BE                     
  2284                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 440:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2285   0028BE  0E01               	movlw	1
  2286   0028C0  6E60               	movwf	convert_uint16_to_string@ret^0,c
  2287   0028C2                     
  2288                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 441:     uint8 Temp_String[6] = {0};
  2289   0028C2  EE20  F05A         	lfsr	2,convert_uint16_to_string@Temp_String
  2290   0028C6  0E05               	movlw	5
  2291   0028C8                     u4441:
  2292   0028C8  6ADE               	clrf	postinc2,c
  2293   0028CA  06E8               	decf	wreg,f,c
  2294   0028CC  E2FD               	bc	u4441
  2295   0028CE                     
  2296                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 442:     uint8 DataCounter = 0;
  2297   0028CE  0E00               	movlw	0
  2298   0028D0  6E61               	movwf	convert_uint16_to_string@DataCounter^0,c
  2299   0028D2                     
  2300                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 443:     if(((void*)0) == str){
  2301   0028D2  5058               	movf	convert_uint16_to_string@str^0,w,c
  2302   0028D4  1059               	iorwf	(convert_uint16_to_string@str+1)^0,w,c
  2303   0028D6  A4D8               	btfss	status,2,c
  2304   0028D8  EF70  F014         	goto	u4451
  2305   0028DC  EF72  F014         	goto	u4450
  2306   0028E0                     u4451:
  2307   0028E0  EF76  F014         	goto	l6301
  2308   0028E4                     u4450:
  2309   0028E4                     
  2310                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 444:         ret = (Std_ReturnType)0x00;
  2311   0028E4  0E00               	movlw	0
  2312   0028E6  6E60               	movwf	convert_uint16_to_string@ret^0,c
  2313                           
  2314                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 445:     }
  2315   0028E8  EFB8  F014         	goto	l6313
  2316   0028EC                     l6301:
  2317                           
  2318                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 447:         memset(str, ' ', 5);
  2319   0028EC  C058  F002         	movff	convert_uint16_to_string@str,memset@dest
  2320   0028F0  C059  F003         	movff	convert_uint16_to_string@str+1,memset@dest+1
  2321   0028F4  0E00               	movlw	0
  2322   0028F6  6E05               	movwf	(memset@c+1)^0,c
  2323   0028F8  0E20               	movlw	32
  2324   0028FA  6E04               	movwf	memset@c^0,c
  2325   0028FC  0E00               	movlw	0
  2326   0028FE  6E07               	movwf	(memset@n+1)^0,c
  2327   002900  0E05               	movlw	5
  2328   002902  6E06               	movwf	memset@n^0,c
  2329   002904  ECC8  F00E         	call	_memset	;wreg free
  2330   002908                     
  2331                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 448:         str[5] = '\0';
  2332   002908  EE20 F005          	lfsr	2,5
  2333   00290C  5058               	movf	convert_uint16_to_string@str^0,w,c
  2334   00290E  26D9               	addwf	fsr2l,f,c
  2335   002910  5059               	movf	(convert_uint16_to_string@str+1)^0,w,c
  2336   002912  22DA               	addwfc	fsr2h,f,c
  2337   002914  6ADF               	clrf	indf2,c
  2338   002916                     
  2339                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 449:         sprintf((char *)Temp_String, "%i", value)
      +                          ;
  2340   002916  0E5A               	movlw	low convert_uint16_to_string@Temp_String
  2341   002918  6E40               	movwf	sprintf@s^0,c
  2342   00291A  0E00               	movlw	high convert_uint16_to_string@Temp_String
  2343   00291C  6E41               	movwf	(sprintf@s+1)^0,c
  2344   00291E  0E39               	movlw	low STR_1
  2345   002920  6E42               	movwf	sprintf@fmt^0,c
  2346   002922  0E10               	movlw	high STR_1
  2347   002924  6E43               	movwf	(sprintf@fmt+1)^0,c
  2348   002926  C056  F044         	movff	convert_uint16_to_string@value,?_sprintf+4
  2349   00292A  C057  F045         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  2350   00292E  EC60  F018         	call	_sprintf	;wreg free
  2351                           
  2352                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 450:         while(Temp_String[DataCounter] != '\0'){
  2353   002932  EFAA  F014         	goto	l6311
  2354   002936                     l6307:
  2355                           
  2356                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 451:             str[DataCounter] = Temp_String[DataCo
      +                          unter];
  2357   002936  0E5A               	movlw	low convert_uint16_to_string@Temp_String
  2358   002938  2461               	addwf	convert_uint16_to_string@DataCounter^0,w,c
  2359   00293A  6ED9               	movwf	fsr2l,c
  2360   00293C  6ADA               	clrf	fsr2h,c
  2361   00293E  0E00               	movlw	high convert_uint16_to_string@Temp_String
  2362   002940  22DA               	addwfc	fsr2h,f,c
  2363   002942  5061               	movf	convert_uint16_to_string@DataCounter^0,w,c
  2364   002944  2458               	addwf	convert_uint16_to_string@str^0,w,c
  2365   002946  6EE1               	movwf	fsr1l,c
  2366   002948  0E00               	movlw	0
  2367   00294A  2059               	addwfc	(convert_uint16_to_string@str+1)^0,w,c
  2368   00294C  6EE2               	movwf	fsr1h,c
  2369   00294E  CFDF FFE7          	movff	indf2,indf1
  2370   002952                     
  2371                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 452:             DataCounter++;
  2372   002952  2A61               	incf	convert_uint16_to_string@DataCounter^0,f,c
  2373   002954                     l6311:
  2374                           
  2375                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 450:         while(Temp_String[DataCounter] != '\0'){
  2376   002954  0E5A               	movlw	low convert_uint16_to_string@Temp_String
  2377   002956  2461               	addwf	convert_uint16_to_string@DataCounter^0,w,c
  2378   002958  6ED9               	movwf	fsr2l,c
  2379   00295A  6ADA               	clrf	fsr2h,c
  2380   00295C  0E00               	movlw	high convert_uint16_to_string@Temp_String
  2381   00295E  22DA               	addwfc	fsr2h,f,c
  2382   002960  50DF               	movf	indf2,w,c
  2383   002962  A4D8               	btfss	status,2,c
  2384   002964  EFB6  F014         	goto	u4461
  2385   002968  EFB8  F014         	goto	u4460
  2386   00296C                     u4461:
  2387   00296C  EF9B  F014         	goto	l6307
  2388   002970                     u4460:
  2389   002970                     l6313:
  2390                           
  2391                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 455:     return ret;
  2392   002970  5060               	movf	convert_uint16_to_string@ret^0,w,c
  2393   002972  0012               	return		;funcret
  2394   002974                     __end_of_convert_uint16_to_string:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _sprintf *****************
  2398 ;; Defined at:
  2399 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  s               2   63[COMRAM] PTR unsigned char 
  2402 ;;		 -> convert_uint16_to_string@Temp_String(6), 
  2403 ;;  fmt             2   65[COMRAM] PTR const unsigned char 
  2404 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  f              12   73[COMRAM] struct _IO_FILE
  2407 ;;  ap              2   71[COMRAM] PTR void [1]
  2408 ;;		 -> ?_sprintf(2), 
  2409 ;;  ret             2    0        int 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  2   63[COMRAM] int 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2419 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;Total ram usage:       22 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; Hardware stack levels required when called: 9
  2426 ;; This function calls:
  2427 ;;		_vfprintf
  2428 ;; This function is called by:
  2429 ;;		_convert_uint16_to_string
  2430 ;;		_convert_uint8_to_string
  2431 ;;		_convert_uint32_to_string
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text9
  2436   0030C0                     __ptext9:
  2437                           	callstack 0
  2438   0030C0                     _sprintf:
  2439                           	callstack 20
  2440   0030C0  0E44               	movlw	low (?_sprintf+4)
  2441   0030C2  6E48               	movwf	sprintf@ap^0,c
  2442   0030C4  0E00               	movlw	high (?_sprintf+4)
  2443   0030C6  6E49               	movwf	(sprintf@ap+1)^0,c
  2444   0030C8  C040  F04A         	movff	sprintf@s,sprintf@f
  2445   0030CC  C041  F04B         	movff	sprintf@s+1,sprintf@f+1
  2446   0030D0  0E00               	movlw	0
  2447   0030D2  6E4E               	movwf	(sprintf@f+4)^0,c
  2448   0030D4  0E00               	movlw	0
  2449   0030D6  6E4D               	movwf	(sprintf@f+3)^0,c
  2450   0030D8  0E00               	movlw	0
  2451   0030DA  6E55               	movwf	(sprintf@f+11)^0,c
  2452   0030DC  0E00               	movlw	0
  2453   0030DE  6E54               	movwf	(sprintf@f+10)^0,c
  2454   0030E0  0E4A               	movlw	low sprintf@f
  2455   0030E2  6E38               	movwf	vfprintf@fp^0,c
  2456   0030E4  0E00               	movlw	high sprintf@f
  2457   0030E6  6E39               	movwf	(vfprintf@fp+1)^0,c
  2458   0030E8  C042  F03A         	movff	sprintf@fmt,vfprintf@fmt
  2459   0030EC  C043  F03B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2460   0030F0  0E48               	movlw	low sprintf@ap
  2461   0030F2  6E3C               	movwf	vfprintf@ap^0,c
  2462   0030F4  0E00               	movlw	high sprintf@ap
  2463   0030F6  6E3D               	movwf	(vfprintf@ap+1)^0,c
  2464   0030F8  EC38  F018         	call	_vfprintf	;wreg free
  2465   0030FC  504D               	movf	(sprintf@f+3)^0,w,c
  2466   0030FE  2440               	addwf	sprintf@s^0,w,c
  2467   003100  6ED9               	movwf	fsr2l,c
  2468   003102  504E               	movf	(sprintf@f+4)^0,w,c
  2469   003104  2041               	addwfc	(sprintf@s+1)^0,w,c
  2470   003106  6EDA               	movwf	fsr2h,c
  2471   003108  6ADF               	clrf	indf2,c
  2472   00310A  0012               	return		;funcret
  2473   00310C                     __end_of_sprintf:
  2474                           	callstack 0
  2475                           
  2476 ;; *************** function _vfprintf *****************
  2477 ;; Defined at:
  2478 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  fp              2   55[COMRAM] PTR struct _IO_FILE
  2481 ;;		 -> sprintf@f(12), 
  2482 ;;  fmt             2   57[COMRAM] PTR const unsigned char 
  2483 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2484 ;;  ap              2   59[COMRAM] PTR PTR void 
  2485 ;;		 -> sprintf@ap(2), 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  cfmt            2   61[COMRAM] PTR unsigned char 
  2488 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  2   55[COMRAM] int 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2498 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;Total ram usage:        8 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 8
  2505 ;; This function calls:
  2506 ;;		_vfpfcnvrt
  2507 ;; This function is called by:
  2508 ;;		_sprintf
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text10
  2513   003070                     __ptext10:
  2514                           	callstack 0
  2515   003070                     _vfprintf:
  2516                           	callstack 20
  2517   003070                     
  2518                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2519   003070  C03A  F03E         	movff	vfprintf@fmt,vfprintf@cfmt
  2520   003074  C03B  F03F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2523   003078  EF4C  F018         	goto	l5929
  2524   00307C                     l5927:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2527   00307C  C038  F02A         	movff	vfprintf@fp,vfpfcnvrt@fp
  2528   003080  C039  F02B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2529   003084  0E3E               	movlw	low vfprintf@cfmt
  2530   003086  6E2C               	movwf	vfpfcnvrt@fmt^0,c
  2531   003088  0E00               	movlw	high vfprintf@cfmt
  2532   00308A  6E2D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2533   00308C  C03C  F02E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2534   003090  C03D  F02F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2535   003094  EC25  F010         	call	_vfpfcnvrt	;wreg free
  2536   003098                     l5929:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2539   003098  C03E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2540   00309C  C03F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2541   0030A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2542   0030A0  6AF8               	clrf	tblptru,c
  2543   0030A2                     	endif
  2544   0030A2                     	if	0	;tblptru may be non-zero
  2545   0030A2                     	endif
  2546   0030A2  0008               	tblrd		*
  2547   0030A4  50F5               	movf	tablat,w,c
  2548   0030A6  0900               	iorlw	0
  2549   0030A8  A4D8               	btfss	status,2,c
  2550   0030AA  EF59  F018         	goto	u4101
  2551   0030AE  EF5B  F018         	goto	u4100
  2552   0030B2                     u4101:
  2553   0030B2  EF3E  F018         	goto	l5927
  2554   0030B6                     u4100:
  2555   0030B6                     
  2556                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2557   0030B6  0E00               	movlw	0
  2558   0030B8  6E39               	movwf	(?_vfprintf+1)^0,c
  2559   0030BA  0E00               	movlw	0
  2560   0030BC  6E38               	movwf	?_vfprintf^0,c
  2561   0030BE  0012               	return		;funcret
  2562   0030C0                     __end_of_vfprintf:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _vfpfcnvrt *****************
  2566 ;; Defined at:
  2567 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  2570 ;;		 -> sprintf@f(12), 
  2571 ;;  fmt             2   43[COMRAM] PTR PTR unsigned char 
  2572 ;;		 -> vfprintf@cfmt(2), 
  2573 ;;  ap              2   45[COMRAM] PTR PTR void 
  2574 ;;		 -> sprintf@ap(2), 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  convarg         4   49[COMRAM] struct .
  2577 ;;  cp              2   53[COMRAM] PTR unsigned char 
  2578 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2579 ;;  i               2    0        int 
  2580 ;;  done            2    0        int 
  2581 ;;  c               1    0        unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2591 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;Total ram usage:       14 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 7
  2598 ;; This function calls:
  2599 ;;		_dtoa
  2600 ;;		_fputc
  2601 ;; This function is called by:
  2602 ;;		_vfprintf
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text11
  2607   00204A                     __ptext11:
  2608                           	callstack 0
  2609   00204A                     _vfpfcnvrt:
  2610                           	callstack 20
  2611   00204A                     
  2612                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2613   00204A  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2614   00204E  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2615   002052  CFDE FFF6          	movff	postinc2,tblptrl
  2616   002056  CFDD FFF7          	movff	postdec2,tblptrh
  2617   00205A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2618   00205A  6AF8               	clrf	tblptru,c
  2619   00205C                     	endif
  2620   00205C                     	if	0	;tblptru may be non-zero
  2621   00205C                     	endif
  2622   00205C  0008               	tblrd		*
  2623   00205E  50F5               	movf	tablat,w,c
  2624   002060  0A25               	xorlw	37
  2625   002062  A4D8               	btfss	status,2,c
  2626   002064  EF36  F010         	goto	u4001
  2627   002068  EF38  F010         	goto	u4000
  2628   00206C                     u4001:
  2629   00206C  EFA5  F010         	goto	l5847
  2630   002070                     u4000:
  2631   002070                     
  2632                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2633   002070  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2634   002074  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2635   002078  2ADE               	incf	postinc2,f,c
  2636   00207A  0E00               	movlw	0
  2637   00207C  22DD               	addwfc	postdec2,f,c
  2638   00207E                     
  2639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2640   00207E  0E00               	movlw	0
  2641   002080  0100               	movlb	0	; () banked
  2642   002082  6F8E               	movwf	(_width+1)& (0+255),b
  2643   002084  0E00               	movlw	0
  2644   002086  6F8D               	movwf	_width& (0+255),b
  2645   002088  C08D  F06A         	movff	_width,_flags
  2646   00208C                     
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2649   00208C  6864               	setf	_prec^0,c
  2650   00208E  6865               	setf	(_prec+1)^0,c
  2651   002090                     
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2654   002090  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2655   002094  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2656   002098  CFDE F036          	movff	postinc2,vfpfcnvrt@cp
  2657   00209C  CFDD F037          	movff	postdec2,vfpfcnvrt@cp+1
  2658   0020A0                     
  2659                           ; BSR set to: 0
  2660                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2661   0020A0  C036  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2662   0020A4  C037  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2663   0020A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2664   0020A8  6AF8               	clrf	tblptru,c
  2665   0020AA                     	endif
  2666   0020AA                     	if	0	;tblptru may be non-zero
  2667   0020AA                     	endif
  2668   0020AA  0008               	tblrd		*
  2669   0020AC  50F5               	movf	tablat,w,c
  2670   0020AE  0A64               	xorlw	100
  2671   0020B0  B4D8               	btfsc	status,2,c
  2672   0020B2  EF5D  F010         	goto	u4011
  2673   0020B6  EF5F  F010         	goto	u4010
  2674   0020BA                     u4011:
  2675   0020BA  EF6E  F010         	goto	l5837
  2676   0020BE                     u4010:
  2677   0020BE                     
  2678                           ; BSR set to: 0
  2679   0020BE  C036  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2680   0020C2  C037  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2681   0020C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2682   0020C6  6AF8               	clrf	tblptru,c
  2683   0020C8                     	endif
  2684   0020C8                     	if	0	;tblptru may be non-zero
  2685   0020C8                     	endif
  2686   0020C8  0008               	tblrd		*
  2687   0020CA  50F5               	movf	tablat,w,c
  2688   0020CC  0A69               	xorlw	105
  2689   0020CE  A4D8               	btfss	status,2,c
  2690   0020D0  EF6C  F010         	goto	u4021
  2691   0020D4  EF6E  F010         	goto	u4020
  2692   0020D8                     u4021:
  2693   0020D8  EF9C  F010         	goto	l5843
  2694   0020DC                     u4020:
  2695   0020DC                     l5837:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2699   0020DC  C02E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2700   0020E0  C02F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2701   0020E4  CFDF F030          	movff	indf2,??_vfpfcnvrt
  2702   0020E8  0E02               	movlw	2
  2703   0020EA  26DE               	addwf	postinc2,f,c
  2704   0020EC  CFDF F031          	movff	indf2,??_vfpfcnvrt+1
  2705   0020F0  0E00               	movlw	0
  2706   0020F2  22DD               	addwfc	postdec2,f,c
  2707   0020F4  C030  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2708   0020F8  C031  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2709   0020FC  CFDE F032          	movff	postinc2,vfpfcnvrt@convarg
  2710   002100  CFDD F033          	movff	postdec2,vfpfcnvrt@convarg+1
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2713   002104  0E01               	movlw	1
  2714   002106  2436               	addwf	vfpfcnvrt@cp^0,w,c
  2715   002108  6E30               	movwf	??_vfpfcnvrt^0,c
  2716   00210A  0E00               	movlw	0
  2717   00210C  2037               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2718   00210E  6E31               	movwf	(??_vfpfcnvrt+1)^0,c
  2719   002110  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2720   002114  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2721   002118  C030  FFDE         	movff	??_vfpfcnvrt,postinc2
  2722   00211C  C031  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2723   002120                     
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2726   002120  C02A  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  2727   002124  C02B  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2728   002128  C032  F01F         	movff	vfpfcnvrt@convarg,dtoa@d
  2729   00212C  C033  F020         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2730   002130  ECFE  F00D         	call	_dtoa	;wreg free
  2731   002134  EFBA  F010         	goto	l2391
  2732   002138                     l5843:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2735   002138  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2736   00213C  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2737   002140  2ADE               	incf	postinc2,f,c
  2738   002142  0E00               	movlw	0
  2739   002144  22DD               	addwfc	postdec2,f,c
  2740   002146  EFBA  F010         	goto	l2391
  2741   00214A                     l5847:
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2744   00214A  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2745   00214E  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2746   002152  CFDE FFF6          	movff	postinc2,tblptrl
  2747   002156  CFDD FFF7          	movff	postdec2,tblptrh
  2748   00215A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2749   00215A  6AF8               	clrf	tblptru,c
  2750   00215C                     	endif
  2751   00215C                     	if	0	;tblptru may be non-zero
  2752   00215C                     	endif
  2753   00215C  0008               	tblrd		*
  2754   00215E  50F5               	movf	tablat,w,c
  2755   002160  6E02               	movwf	fputc@c^0,c
  2756   002162  6A03               	clrf	(fputc@c+1)^0,c
  2757   002164  C02A  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2758   002168  C02B  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2759   00216C  ECD6  F012         	call	_fputc	;wreg free
  2760   002170  EF9C  F010         	goto	l5843
  2761   002174                     l2391:
  2762   002174  0012               	return		;funcret
  2763   002176                     __end_of_vfpfcnvrt:
  2764                           	callstack 0
  2765                           
  2766 ;; *************** function _dtoa *****************
  2767 ;; Defined at:
  2768 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2771 ;;		 -> sprintf@f(12), 
  2772 ;;  d               2   30[COMRAM] int 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  i               2   38[COMRAM] int 
  2775 ;;  w               2   36[COMRAM] int 
  2776 ;;  p               2   34[COMRAM] int 
  2777 ;;  s               1   40[COMRAM] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;Total ram usage:       13 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 6
  2794 ;; This function calls:
  2795 ;;		___awdiv
  2796 ;;		___awmod
  2797 ;;		_abs
  2798 ;;		_pad
  2799 ;; This function is called by:
  2800 ;;		_vfpfcnvrt
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text12
  2805   001BFC                     __ptext12:
  2806                           	callstack 0
  2807   001BFC                     _dtoa:
  2808                           	callstack 20
  2809   001BFC                     
  2810                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2811   001BFC  BE20               	btfsc	(dtoa@d+1)^0,7,c
  2812   001BFE  EF03  F00E         	goto	u3841
  2813   001C02  EF06  F00E         	goto	u3840
  2814   001C06                     u3841:
  2815   001C06  0E01               	movlw	1
  2816   001C08  EF07  F00E         	goto	u3850
  2817   001C0C                     u3840:
  2818   001C0C  0E00               	movlw	0
  2819   001C0E                     u3850:
  2820   001C0E  6E29               	movwf	dtoa@s^0,c
  2821   001C10                     
  2822                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2823   001C10  5029               	movf	dtoa@s^0,w,c
  2824   001C12  B4D8               	btfsc	status,2,c
  2825   001C14  EF0E  F00E         	goto	u3861
  2826   001C18  EF10  F00E         	goto	u3860
  2827   001C1C                     u3861:
  2828   001C1C  EF14  F00E         	goto	l5733
  2829   001C20                     u3860:
  2830   001C20                     
  2831                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2832   001C20  6C1F               	negf	dtoa@d^0,c
  2833   001C22  1E20               	comf	(dtoa@d+1)^0,f,c
  2834   001C24  B0D8               	btfsc	status,0,c
  2835   001C26  2A20               	incf	(dtoa@d+1)^0,f,c
  2836   001C28                     l5733:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2839   001C28  BE65               	btfsc	(_prec+1)^0,7,c
  2840   001C2A  EF1B  F00E         	goto	u3870
  2841   001C2E  EF19  F00E         	goto	u3871
  2842   001C32                     u3871:
  2843   001C32  EF21  F00E         	goto	l2370
  2844   001C36                     u3870:
  2845   001C36  0E00               	movlw	0
  2846   001C38  6E24               	movwf	(dtoa@p+1)^0,c
  2847   001C3A  0E01               	movlw	1
  2848   001C3C  6E23               	movwf	dtoa@p^0,c
  2849   001C3E  EF25  F00E         	goto	l2372
  2850   001C42                     l2370:
  2851   001C42  C064  F023         	movff	_prec,dtoa@p
  2852   001C46  C065  F024         	movff	_prec+1,dtoa@p+1
  2853   001C4A                     l2372:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2856   001C4A  C08D  F025         	movff	_width,dtoa@w
  2857   001C4E  C08E  F026         	movff	_width+1,dtoa@w+1
  2858   001C52                     
  2859                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2860   001C52  5029               	movf	dtoa@s^0,w,c
  2861   001C54  B4D8               	btfsc	status,2,c
  2862   001C56  EF2F  F00E         	goto	u3881
  2863   001C5A  EF31  F00E         	goto	u3880
  2864   001C5E                     u3881:
  2865   001C5E  EF48  F00E         	goto	l2373
  2866   001C62                     u3880:
  2867   001C62                     
  2868                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2869   001C62  0625               	decf	dtoa@w^0,f,c
  2870   001C64  A0D8               	btfss	status,0,c
  2871   001C66  0626               	decf	(dtoa@w+1)^0,f,c
  2872   001C68                     
  2873                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2874   001C68  5029               	movf	dtoa@s^0,w,c
  2875   001C6A  A4D8               	btfss	status,2,c
  2876   001C6C  EF3A  F00E         	goto	u3891
  2877   001C70  EF3C  F00E         	goto	u3890
  2878   001C74                     u3891:
  2879   001C74  EF42  F00E         	goto	l5745
  2880   001C78                     u3890:
  2881   001C78  0E00               	movlw	0
  2882   001C7A  6E22               	movwf	(_dtoa$4553+1)^0,c
  2883   001C7C  0E2B               	movlw	43
  2884   001C7E  6E21               	movwf	_dtoa$4553^0,c
  2885   001C80  EF46  F00E         	goto	l5747
  2886   001C84                     l5745:
  2887   001C84  0E00               	movlw	0
  2888   001C86  6E22               	movwf	(_dtoa$4553+1)^0,c
  2889   001C88  0E2D               	movlw	45
  2890   001C8A  6E21               	movwf	_dtoa$4553^0,c
  2891   001C8C                     l5747:
  2892   001C8C  C021  F029         	movff	_dtoa$4553,dtoa@s
  2893   001C90                     l2373:
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2896   001C90  0E00               	movlw	0
  2897   001C92  6E28               	movwf	(dtoa@i+1)^0,c
  2898   001C94  0E1F               	movlw	31
  2899   001C96  6E27               	movwf	dtoa@i^0,c
  2900   001C98                     
  2901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2902   001C98  0E00               	movlw	0
  2903   001C9A  0101               	movlb	1	; () banked
  2904   001C9C  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2907   001C9E  EF81  F00E         	goto	l5761
  2908   001CA2                     l5751:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2911   001CA2  0627               	decf	dtoa@i^0,f,c
  2912   001CA4  A0D8               	btfss	status,0,c
  2913   001CA6  0628               	decf	(dtoa@i+1)^0,f,c
  2914   001CA8                     
  2915                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2916   001CA8  0E00               	movlw	low _dbuf
  2917   001CAA  2427               	addwf	dtoa@i^0,w,c
  2918   001CAC  6ED9               	movwf	fsr2l,c
  2919   001CAE  0E01               	movlw	high _dbuf
  2920   001CB0  2028               	addwfc	(dtoa@i+1)^0,w,c
  2921   001CB2  6EDA               	movwf	fsr2h,c
  2922   001CB4  C01F  F002         	movff	dtoa@d,___awmod@dividend
  2923   001CB8  C020  F003         	movff	dtoa@d+1,___awmod@dividend+1
  2924   001CBC  0E00               	movlw	0
  2925   001CBE  6E05               	movwf	(___awmod@divisor+1)^0,c
  2926   001CC0  0E0A               	movlw	10
  2927   001CC2  6E04               	movwf	___awmod@divisor^0,c
  2928   001CC4  ECBA  F014         	call	___awmod	;wreg free
  2929   001CC8  C002  F008         	movff	?___awmod,abs@a
  2930   001CCC  C003  F009         	movff	?___awmod+1,abs@a+1
  2931   001CD0  EC5A  F019         	call	_abs	;wreg free
  2932   001CD4  5008               	movf	?_abs^0,w,c
  2933   001CD6  0F30               	addlw	48
  2934   001CD8  6EDF               	movwf	indf2,c
  2935   001CDA                     
  2936                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2937   001CDA  0623               	decf	dtoa@p^0,f,c
  2938   001CDC  A0D8               	btfss	status,0,c
  2939   001CDE  0624               	decf	(dtoa@p+1)^0,f,c
  2940   001CE0                     
  2941                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2942   001CE0  0625               	decf	dtoa@w^0,f,c
  2943   001CE2  A0D8               	btfss	status,0,c
  2944   001CE4  0626               	decf	(dtoa@w+1)^0,f,c
  2945   001CE6                     
  2946                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2947   001CE6  C01F  F002         	movff	dtoa@d,___awdiv@dividend
  2948   001CEA  C020  F003         	movff	dtoa@d+1,___awdiv@dividend+1
  2949   001CEE  0E00               	movlw	0
  2950   001CF0  6E05               	movwf	(___awdiv@divisor+1)^0,c
  2951   001CF2  0E0A               	movlw	10
  2952   001CF4  6E04               	movwf	___awdiv@divisor^0,c
  2953   001CF6  EC3B  F013         	call	___awdiv	;wreg free
  2954   001CFA  C002  F01F         	movff	?___awdiv,dtoa@d
  2955   001CFE  C003  F020         	movff	?___awdiv+1,dtoa@d+1
  2956   001D02                     l5761:
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2959   001D02  BE28               	btfsc	(dtoa@i+1)^0,7,c
  2960   001D04  EF8C  F00E         	goto	u3901
  2961   001D08  5028               	movf	(dtoa@i+1)^0,w,c
  2962   001D0A  E108               	bnz	u3900
  2963   001D0C  0427               	decf	dtoa@i^0,w,c
  2964   001D0E  A0D8               	btfss	status,0,c
  2965   001D10  EF8C  F00E         	goto	u3901
  2966   001D14  EF8E  F00E         	goto	u3900
  2967   001D18                     u3901:
  2968   001D18  EFA4  F00E         	goto	l5767
  2969   001D1C                     u3900:
  2970   001D1C  501F               	movf	dtoa@d^0,w,c
  2971   001D1E  1020               	iorwf	(dtoa@d+1)^0,w,c
  2972   001D20  A4D8               	btfss	status,2,c
  2973   001D22  EF95  F00E         	goto	u3911
  2974   001D26  EF97  F00E         	goto	u3910
  2975   001D2A                     u3911:
  2976   001D2A  EF51  F00E         	goto	l5751
  2977   001D2E                     u3910:
  2978   001D2E  BE24               	btfsc	(dtoa@p+1)^0,7,c
  2979   001D30  EFA4  F00E         	goto	u3920
  2980   001D34  5024               	movf	(dtoa@p+1)^0,w,c
  2981   001D36  E106               	bnz	u3921
  2982   001D38  0423               	decf	dtoa@p^0,w,c
  2983   001D3A  B0D8               	btfsc	status,0,c
  2984   001D3C  EFA2  F00E         	goto	u3921
  2985   001D40  EFA4  F00E         	goto	u3920
  2986   001D44                     u3921:
  2987   001D44  EF51  F00E         	goto	l5751
  2988   001D48                     u3920:
  2989   001D48                     l5767:
  2990                           
  2991                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2992   001D48  5029               	movf	dtoa@s^0,w,c
  2993   001D4A  B4D8               	btfsc	status,2,c
  2994   001D4C  EFAA  F00E         	goto	u3931
  2995   001D50  EFAC  F00E         	goto	u3930
  2996   001D54                     u3931:
  2997   001D54  EFB7  F00E         	goto	l5773
  2998   001D58                     u3930:
  2999   001D58                     
  3000                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3001   001D58  0627               	decf	dtoa@i^0,f,c
  3002   001D5A  A0D8               	btfss	status,0,c
  3003   001D5C  0628               	decf	(dtoa@i+1)^0,f,c
  3004   001D5E                     
  3005                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3006   001D5E  0E00               	movlw	low _dbuf
  3007   001D60  2427               	addwf	dtoa@i^0,w,c
  3008   001D62  6ED9               	movwf	fsr2l,c
  3009   001D64  0E01               	movlw	high _dbuf
  3010   001D66  2028               	addwfc	(dtoa@i+1)^0,w,c
  3011   001D68  6EDA               	movwf	fsr2h,c
  3012   001D6A  C029  FFDF         	movff	dtoa@s,indf2
  3013   001D6E                     l5773:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3016   001D6E  C01D  F012         	movff	dtoa@fp,pad@fp
  3017   001D72  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  3018   001D76  0E00               	movlw	low _dbuf
  3019   001D78  2427               	addwf	dtoa@i^0,w,c
  3020   001D7A  6E14               	movwf	pad@buf^0,c
  3021   001D7C  0E01               	movlw	high _dbuf
  3022   001D7E  2028               	addwfc	(dtoa@i+1)^0,w,c
  3023   001D80  6E15               	movwf	(pad@buf+1)^0,c
  3024   001D82  C025  F016         	movff	dtoa@w,pad@p
  3025   001D86  C026  F017         	movff	dtoa@w+1,pad@p+1
  3026   001D8A  EC74  F016         	call	_pad	;wreg free
  3027   001D8E  0012               	return		;funcret
  3028   001D90                     __end_of_dtoa:
  3029                           	callstack 0
  3030                           
  3031 ;; *************** function _pad *****************
  3032 ;; Defined at:
  3033 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3036 ;;		 -> sprintf@f(12), 
  3037 ;;  buf             2   19[COMRAM] PTR unsigned char 
  3038 ;;		 -> dbuf(32), 
  3039 ;;  p               2   21[COMRAM] int 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  w               2   26[COMRAM] int 
  3042 ;;  i               2   24[COMRAM] int 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3052 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;Total ram usage:       11 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 5
  3059 ;; This function calls:
  3060 ;;		_fputc
  3061 ;;		_fputs
  3062 ;; This function is called by:
  3063 ;;		_dtoa
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text13
  3068   002CE8                     __ptext13:
  3069                           	callstack 0
  3070   002CE8                     _pad:
  3071                           	callstack 20
  3072   002CE8                     
  3073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3074   002CE8  BE17               	btfsc	(pad@p+1)^0,7,c
  3075   002CEA  EF79  F016         	goto	u3771
  3076   002CEE  EF7B  F016         	goto	u3770
  3077   002CF2                     u3771:
  3078   002CF2  EF81  F016         	goto	l5689
  3079   002CF6                     u3770:
  3080   002CF6  C016  F01B         	movff	pad@p,pad@w
  3081   002CFA  C017  F01C         	movff	pad@p+1,pad@w+1
  3082   002CFE  EF85  F016         	goto	l2361
  3083   002D02                     l5689:
  3084   002D02  0E00               	movlw	0
  3085   002D04  6E1C               	movwf	(pad@w+1)^0,c
  3086   002D06  0E00               	movlw	0
  3087   002D08  6E1B               	movwf	pad@w^0,c
  3088   002D0A                     l2361:
  3089                           
  3090                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3091   002D0A  0E00               	movlw	0
  3092   002D0C  6E1A               	movwf	(pad@i+1)^0,c
  3093   002D0E  0E00               	movlw	0
  3094   002D10  6E19               	movwf	pad@i^0,c
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3097   002D12  EF97  F016         	goto	l5695
  3098   002D16                     l5691:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3101   002D16  0E00               	movlw	0
  3102   002D18  6E03               	movwf	(fputc@c+1)^0,c
  3103   002D1A  0E20               	movlw	32
  3104   002D1C  6E02               	movwf	fputc@c^0,c
  3105   002D1E  C012  F004         	movff	pad@fp,fputc@fp
  3106   002D22  C013  F005         	movff	pad@fp+1,fputc@fp+1
  3107   002D26  ECD6  F012         	call	_fputc	;wreg free
  3108   002D2A                     
  3109                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3110   002D2A  4A19               	infsnz	pad@i^0,f,c
  3111   002D2C  2A1A               	incf	(pad@i+1)^0,f,c
  3112   002D2E                     l5695:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3115   002D2E  501B               	movf	pad@w^0,w,c
  3116   002D30  5C19               	subwf	pad@i^0,w,c
  3117   002D32  501A               	movf	(pad@i+1)^0,w,c
  3118   002D34  0A80               	xorlw	128
  3119   002D36  6E18               	movwf	??_pad^0,c
  3120   002D38  501C               	movf	(pad@w+1)^0,w,c
  3121   002D3A  0A80               	xorlw	128
  3122   002D3C  5818               	subwfb	??_pad^0,w,c
  3123   002D3E  A0D8               	btfss	status,0,c
  3124   002D40  EFA4  F016         	goto	u3781
  3125   002D44  EFA6  F016         	goto	u3780
  3126   002D48                     u3781:
  3127   002D48  EF8B  F016         	goto	l5691
  3128   002D4C                     u3780:
  3129   002D4C                     
  3130                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3131   002D4C  C014  F00B         	movff	pad@buf,fputs@s
  3132   002D50  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3133   002D54  C012  F00D         	movff	pad@fp,fputs@fp
  3134   002D58  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3135   002D5C  EC16  F019         	call	_fputs	;wreg free
  3136   002D60  0012               	return		;funcret
  3137   002D62                     __end_of_pad:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _fputs *****************
  3141 ;; Defined at:
  3142 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3145 ;;		 -> dbuf(32), 
  3146 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3147 ;;		 -> sprintf@f(12), 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  i               2   15[COMRAM] int 
  3150 ;;  c               1   14[COMRAM] unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  2   10[COMRAM] int 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;Total ram usage:        7 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 4
  3167 ;; This function calls:
  3168 ;;		_fputc
  3169 ;; This function is called by:
  3170 ;;		_pad
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text14
  3175   00322C                     __ptext14:
  3176                           	callstack 0
  3177   00322C                     _fputs:
  3178                           	callstack 20
  3179   00322C  0E00               	movlw	0
  3180   00322E  6E11               	movwf	(fputs@i+1)^0,c
  3181   003230  0E00               	movlw	0
  3182   003232  6E10               	movwf	fputs@i^0,c
  3183   003234  EF27  F019         	goto	l5603
  3184   003238                     l5599:
  3185   003238  C00F  F002         	movff	fputs@c,fputc@c
  3186   00323C  6A03               	clrf	(fputc@c+1)^0,c
  3187   00323E  C00D  F004         	movff	fputs@fp,fputc@fp
  3188   003242  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3189   003246  ECD6  F012         	call	_fputc	;wreg free
  3190   00324A  4A10               	infsnz	fputs@i^0,f,c
  3191   00324C  2A11               	incf	(fputs@i+1)^0,f,c
  3192   00324E                     l5603:
  3193   00324E  5010               	movf	fputs@i^0,w,c
  3194   003250  240B               	addwf	fputs@s^0,w,c
  3195   003252  6ED9               	movwf	fsr2l,c
  3196   003254  5011               	movf	(fputs@i+1)^0,w,c
  3197   003256  200C               	addwfc	(fputs@s+1)^0,w,c
  3198   003258  6EDA               	movwf	fsr2h,c
  3199   00325A  50DF               	movf	indf2,w,c
  3200   00325C  6E0F               	movwf	fputs@c^0,c
  3201   00325E  500F               	movf	fputs@c^0,w,c
  3202   003260  A4D8               	btfss	status,2,c
  3203   003262  EF35  F019         	goto	u3641
  3204   003266  EF37  F019         	goto	u3640
  3205   00326A                     u3641:
  3206   00326A  EF1C  F019         	goto	l5599
  3207   00326E                     u3640:
  3208   00326E  0012               	return		;funcret
  3209   003270                     __end_of_fputs:
  3210                           	callstack 0
  3211                           
  3212 ;; *************** function _fputc *****************
  3213 ;; Defined at:
  3214 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  c               2    1[COMRAM] int 
  3217 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  3218 ;;		 -> sprintf@f(12), 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  2    1[COMRAM] int 
  3223 ;; Registers used:
  3224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;Total ram usage:        9 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 3
  3237 ;; This function calls:
  3238 ;;		_putch
  3239 ;; This function is called by:
  3240 ;;		_pad
  3241 ;;		_vfpfcnvrt
  3242 ;;		_fputs
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text15
  3247   0025AC                     __ptext15:
  3248                           	callstack 0
  3249   0025AC                     _fputc:
  3250                           	callstack 23
  3251   0025AC  5004               	movf	fputc@fp^0,w,c
  3252   0025AE  1005               	iorwf	(fputc@fp+1)^0,w,c
  3253   0025B0  B4D8               	btfsc	status,2,c
  3254   0025B2  EFDD  F012         	goto	u3601
  3255   0025B6  EFDF  F012         	goto	u3600
  3256   0025BA                     u3601:
  3257   0025BA  EFE8  F012         	goto	l5587
  3258   0025BE                     u3600:
  3259   0025BE  5004               	movf	fputc@fp^0,w,c
  3260   0025C0  1005               	iorwf	(fputc@fp+1)^0,w,c
  3261   0025C2  A4D8               	btfss	status,2,c
  3262   0025C4  EFE6  F012         	goto	u3611
  3263   0025C8  EFE8  F012         	goto	u3610
  3264   0025CC                     u3611:
  3265   0025CC  EFED  F012         	goto	l5589
  3266   0025D0                     u3610:
  3267   0025D0                     l5587:
  3268   0025D0  5002               	movf	fputc@c^0,w,c
  3269   0025D2  EC3C  F01A         	call	_putch
  3270   0025D6  EF3A  F013         	goto	l2416
  3271   0025DA                     l5589:
  3272   0025DA  EE20 F00A          	lfsr	2,10
  3273   0025DE  5004               	movf	fputc@fp^0,w,c
  3274   0025E0  26D9               	addwf	fsr2l,f,c
  3275   0025E2  5005               	movf	(fputc@fp+1)^0,w,c
  3276   0025E4  22DA               	addwfc	fsr2h,f,c
  3277   0025E6  50DE               	movf	postinc2,w,c
  3278   0025E8  10DE               	iorwf	postinc2,w,c
  3279   0025EA  B4D8               	btfsc	status,2,c
  3280   0025EC  EFFA  F012         	goto	u3621
  3281   0025F0  EFFC  F012         	goto	u3620
  3282   0025F4                     u3621:
  3283   0025F4  EF17  F013         	goto	l5593
  3284   0025F8                     u3620:
  3285   0025F8  EE20 F00A          	lfsr	2,10
  3286   0025FC  5004               	movf	fputc@fp^0,w,c
  3287   0025FE  26D9               	addwf	fsr2l,f,c
  3288   002600  5005               	movf	(fputc@fp+1)^0,w,c
  3289   002602  22DA               	addwfc	fsr2h,f,c
  3290   002604  EE10 F003          	lfsr	1,3
  3291   002608  5004               	movf	fputc@fp^0,w,c
  3292   00260A  26E1               	addwf	fsr1l,f,c
  3293   00260C  5005               	movf	(fputc@fp+1)^0,w,c
  3294   00260E  22E2               	addwfc	fsr1h,f,c
  3295   002610  50DE               	movf	postinc2,w,c
  3296   002612  5CE6               	subwf	postinc1,w,c
  3297   002614  50E6               	movf	postinc1,w,c
  3298   002616  0A80               	xorlw	128
  3299   002618  6E0A               	movwf	(??_fputc+4)^0,c
  3300   00261A  50DE               	movf	postinc2,w,c
  3301   00261C  0A80               	xorlw	128
  3302   00261E  580A               	subwfb	(??_fputc+4)^0,w,c
  3303   002620  B0D8               	btfsc	status,0,c
  3304   002622  EF15  F013         	goto	u3631
  3305   002626  EF17  F013         	goto	u3630
  3306   00262A                     u3631:
  3307   00262A  EF3A  F013         	goto	l2416
  3308   00262E                     u3630:
  3309   00262E                     l5593:
  3310   00262E  EE20 F003          	lfsr	2,3
  3311   002632  5004               	movf	fputc@fp^0,w,c
  3312   002634  26D9               	addwf	fsr2l,f,c
  3313   002636  5005               	movf	(fputc@fp+1)^0,w,c
  3314   002638  22DA               	addwfc	fsr2h,f,c
  3315   00263A  CFDE F006          	movff	postinc2,??_fputc
  3316   00263E  CFDD F007          	movff	postdec2,??_fputc+1
  3317   002642  C004  FFD9         	movff	fputc@fp,fsr2l
  3318   002646  C005  FFDA         	movff	fputc@fp+1,fsr2h
  3319   00264A  CFDE F008          	movff	postinc2,??_fputc+2
  3320   00264E  CFDD F009          	movff	postdec2,??_fputc+3
  3321   002652  5006               	movf	??_fputc^0,w,c
  3322   002654  2408               	addwf	(??_fputc+2)^0,w,c
  3323   002656  6ED9               	movwf	fsr2l,c
  3324   002658  5007               	movf	(??_fputc+1)^0,w,c
  3325   00265A  2009               	addwfc	(??_fputc+3)^0,w,c
  3326   00265C  6EDA               	movwf	fsr2h,c
  3327   00265E  C002  FFDF         	movff	fputc@c,indf2
  3328   002662  EE20 F003          	lfsr	2,3
  3329   002666  5004               	movf	fputc@fp^0,w,c
  3330   002668  26D9               	addwf	fsr2l,f,c
  3331   00266A  5005               	movf	(fputc@fp+1)^0,w,c
  3332   00266C  22DA               	addwfc	fsr2h,f,c
  3333   00266E  2ADE               	incf	postinc2,f,c
  3334   002670  0E00               	movlw	0
  3335   002672  22DD               	addwfc	postdec2,f,c
  3336   002674                     l2416:
  3337   002674  0012               	return		;funcret
  3338   002676                     __end_of_fputc:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function _putch *****************
  3342 ;; Defined at:
  3343 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  c               1    wreg     unsigned char 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  c               1    0[COMRAM] unsigned char 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;Total ram usage:        0 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; Hardware stack levels required when called: 2
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_fputc
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text16
  3372   003478                     __ptext16:
  3373                           	callstack 0
  3374   003478                     _putch:
  3375                           	callstack 23
  3376   003478  0012               	return		;funcret
  3377   00347A                     __end_of_putch:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _abs *****************
  3381 ;; Defined at:
  3382 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  a               2    7[COMRAM] int 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  2    7[COMRAM] int 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;Total ram usage:        4 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; Hardware stack levels required when called: 2
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_dtoa
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text17
  3411   0032B4                     __ptext17:
  3412                           	callstack 0
  3413   0032B4                     _abs:
  3414                           	callstack 23
  3415   0032B4  BE09               	btfsc	(abs@a+1)^0,7,c
  3416   0032B6  EF67  F019         	goto	u3790
  3417   0032BA  5009               	movf	(abs@a+1)^0,w,c
  3418   0032BC  E106               	bnz	u3791
  3419   0032BE  0408               	decf	abs@a^0,w,c
  3420   0032C0  B0D8               	btfsc	status,0,c
  3421   0032C2  EF65  F019         	goto	u3791
  3422   0032C6  EF67  F019         	goto	u3790
  3423   0032CA                     u3791:
  3424   0032CA  EF75  F019         	goto	l2401
  3425   0032CE                     u3790:
  3426   0032CE  C008  F00A         	movff	abs@a,??_abs
  3427   0032D2  C009  F00B         	movff	abs@a+1,??_abs+1
  3428   0032D6  1E0A               	comf	??_abs^0,f,c
  3429   0032D8  1E0B               	comf	(??_abs+1)^0,f,c
  3430   0032DA  4A0A               	infsnz	??_abs^0,f,c
  3431   0032DC  2A0B               	incf	(??_abs+1)^0,f,c
  3432   0032DE  C00A  F008         	movff	??_abs,?_abs
  3433   0032E2  C00B  F009         	movff	??_abs+1,?_abs+1
  3434   0032E6  EF79  F019         	goto	l2404
  3435   0032EA                     l2401:
  3436   0032EA  C008  F008         	movff	abs@a,?_abs
  3437   0032EE  C009  F009         	movff	abs@a+1,?_abs+1
  3438   0032F2                     l2404:
  3439   0032F2  0012               	return		;funcret
  3440   0032F4                     __end_of_abs:
  3441                           	callstack 0
  3442                           
  3443 ;; *************** function ___awmod *****************
  3444 ;; Defined at:
  3445 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  dividend        2    1[COMRAM] int 
  3448 ;;  divisor         2    3[COMRAM] int 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  sign            1    6[COMRAM] unsigned char 
  3451 ;;  counter         1    5[COMRAM] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  2    1[COMRAM] int 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;Total ram usage:        6 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; Hardware stack levels required when called: 2
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_dtoa
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text18
  3476   002974                     __ptext18:
  3477                           	callstack 0
  3478   002974                     ___awmod:
  3479                           	callstack 23
  3480   002974  0E00               	movlw	0
  3481   002976  6E07               	movwf	___awmod@sign^0,c
  3482   002978  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  3483   00297A  EFC3  F014         	goto	u3710
  3484   00297E  EFC1  F014         	goto	u3711
  3485   002982                     u3711:
  3486   002982  EFC9  F014         	goto	l5657
  3487   002986                     u3710:
  3488   002986  6C02               	negf	___awmod@dividend^0,c
  3489   002988  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3490   00298A  B0D8               	btfsc	status,0,c
  3491   00298C  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3492   00298E  0E01               	movlw	1
  3493   002990  6E07               	movwf	___awmod@sign^0,c
  3494   002992                     l5657:
  3495   002992  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  3496   002994  EFD0  F014         	goto	u3720
  3497   002998  EFCE  F014         	goto	u3721
  3498   00299C                     u3721:
  3499   00299C  EFD4  F014         	goto	l5661
  3500   0029A0                     u3720:
  3501   0029A0  6C04               	negf	___awmod@divisor^0,c
  3502   0029A2  1E05               	comf	(___awmod@divisor+1)^0,f,c
  3503   0029A4  B0D8               	btfsc	status,0,c
  3504   0029A6  2A05               	incf	(___awmod@divisor+1)^0,f,c
  3505   0029A8                     l5661:
  3506   0029A8  5004               	movf	___awmod@divisor^0,w,c
  3507   0029AA  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  3508   0029AC  B4D8               	btfsc	status,2,c
  3509   0029AE  EFDB  F014         	goto	u3731
  3510   0029B2  EFDD  F014         	goto	u3730
  3511   0029B6                     u3731:
  3512   0029B6  EF01  F015         	goto	l5677
  3513   0029BA                     u3730:
  3514   0029BA  0E01               	movlw	1
  3515   0029BC  6E06               	movwf	___awmod@counter^0,c
  3516   0029BE  EFE5  F014         	goto	l5667
  3517   0029C2                     l5665:
  3518   0029C2  90D8               	bcf	status,0,c
  3519   0029C4  3604               	rlcf	___awmod@divisor^0,f,c
  3520   0029C6  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  3521   0029C8  2A06               	incf	___awmod@counter^0,f,c
  3522   0029CA                     l5667:
  3523   0029CA  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  3524   0029CC  EFEA  F014         	goto	u3741
  3525   0029D0  EFEC  F014         	goto	u3740
  3526   0029D4                     u3741:
  3527   0029D4  EFE1  F014         	goto	l5665
  3528   0029D8                     u3740:
  3529   0029D8                     l5669:
  3530   0029D8  5004               	movf	___awmod@divisor^0,w,c
  3531   0029DA  5C02               	subwf	___awmod@dividend^0,w,c
  3532   0029DC  5005               	movf	(___awmod@divisor+1)^0,w,c
  3533   0029DE  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  3534   0029E0  A0D8               	btfss	status,0,c
  3535   0029E2  EFF5  F014         	goto	u3751
  3536   0029E6  EFF7  F014         	goto	u3750
  3537   0029EA                     u3751:
  3538   0029EA  EFFB  F014         	goto	l5673
  3539   0029EE                     u3750:
  3540   0029EE  5004               	movf	___awmod@divisor^0,w,c
  3541   0029F0  5E02               	subwf	___awmod@dividend^0,f,c
  3542   0029F2  5005               	movf	(___awmod@divisor+1)^0,w,c
  3543   0029F4  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  3544   0029F6                     l5673:
  3545   0029F6  90D8               	bcf	status,0,c
  3546   0029F8  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  3547   0029FA  3204               	rrcf	___awmod@divisor^0,f,c
  3548   0029FC  2E06               	decfsz	___awmod@counter^0,f,c
  3549   0029FE  EFEC  F014         	goto	l5669
  3550   002A02                     l5677:
  3551   002A02  5007               	movf	___awmod@sign^0,w,c
  3552   002A04  B4D8               	btfsc	status,2,c
  3553   002A06  EF07  F015         	goto	u3761
  3554   002A0A  EF09  F015         	goto	u3760
  3555   002A0E                     u3761:
  3556   002A0E  EF0D  F015         	goto	l5681
  3557   002A12                     u3760:
  3558   002A12  6C02               	negf	___awmod@dividend^0,c
  3559   002A14  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3560   002A16  B0D8               	btfsc	status,0,c
  3561   002A18  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3562   002A1A                     l5681:
  3563   002A1A  C002  F002         	movff	___awmod@dividend,?___awmod
  3564   002A1E  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  3565   002A22  0012               	return		;funcret
  3566   002A24                     __end_of___awmod:
  3567                           	callstack 0
  3568                           
  3569 ;; *************** function ___awdiv *****************
  3570 ;; Defined at:
  3571 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  dividend        2    1[COMRAM] int 
  3574 ;;  divisor         2    3[COMRAM] int 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  quotient        2    7[COMRAM] int 
  3577 ;;  sign            1    6[COMRAM] unsigned char 
  3578 ;;  counter         1    5[COMRAM] unsigned char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  2    1[COMRAM] int 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3588 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;Total ram usage:        8 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; Hardware stack levels required when called: 2
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_dtoa
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text19
  3603   002676                     __ptext19:
  3604                           	callstack 0
  3605   002676                     ___awdiv:
  3606                           	callstack 23
  3607   002676  0E00               	movlw	0
  3608   002678  6E07               	movwf	___awdiv@sign^0,c
  3609   00267A  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  3610   00267C  EF44  F013         	goto	u3650
  3611   002680  EF42  F013         	goto	u3651
  3612   002684                     u3651:
  3613   002684  EF4A  F013         	goto	l5613
  3614   002688                     u3650:
  3615   002688  6C04               	negf	___awdiv@divisor^0,c
  3616   00268A  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  3617   00268C  B0D8               	btfsc	status,0,c
  3618   00268E  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  3619   002690  0E01               	movlw	1
  3620   002692  6E07               	movwf	___awdiv@sign^0,c
  3621   002694                     l5613:
  3622   002694  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  3623   002696  EF51  F013         	goto	u3660
  3624   00269A  EF4F  F013         	goto	u3661
  3625   00269E                     u3661:
  3626   00269E  EF57  F013         	goto	l5619
  3627   0026A2                     u3660:
  3628   0026A2  6C02               	negf	___awdiv@dividend^0,c
  3629   0026A4  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  3630   0026A6  B0D8               	btfsc	status,0,c
  3631   0026A8  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  3632   0026AA  0E01               	movlw	1
  3633   0026AC  1A07               	xorwf	___awdiv@sign^0,f,c
  3634   0026AE                     l5619:
  3635   0026AE  0E00               	movlw	0
  3636   0026B0  6E09               	movwf	(___awdiv@quotient+1)^0,c
  3637   0026B2  0E00               	movlw	0
  3638   0026B4  6E08               	movwf	___awdiv@quotient^0,c
  3639   0026B6  5004               	movf	___awdiv@divisor^0,w,c
  3640   0026B8  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  3641   0026BA  B4D8               	btfsc	status,2,c
  3642   0026BC  EF62  F013         	goto	u3671
  3643   0026C0  EF64  F013         	goto	u3670
  3644   0026C4                     u3671:
  3645   0026C4  EF8C  F013         	goto	l5641
  3646   0026C8                     u3670:
  3647   0026C8  0E01               	movlw	1
  3648   0026CA  6E06               	movwf	___awdiv@counter^0,c
  3649   0026CC  EF6C  F013         	goto	l5627
  3650   0026D0                     l5625:
  3651   0026D0  90D8               	bcf	status,0,c
  3652   0026D2  3604               	rlcf	___awdiv@divisor^0,f,c
  3653   0026D4  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  3654   0026D6  2A06               	incf	___awdiv@counter^0,f,c
  3655   0026D8                     l5627:
  3656   0026D8  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  3657   0026DA  EF71  F013         	goto	u3681
  3658   0026DE  EF73  F013         	goto	u3680
  3659   0026E2                     u3681:
  3660   0026E2  EF68  F013         	goto	l5625
  3661   0026E6                     u3680:
  3662   0026E6                     l5629:
  3663   0026E6  90D8               	bcf	status,0,c
  3664   0026E8  3608               	rlcf	___awdiv@quotient^0,f,c
  3665   0026EA  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  3666   0026EC  5004               	movf	___awdiv@divisor^0,w,c
  3667   0026EE  5C02               	subwf	___awdiv@dividend^0,w,c
  3668   0026F0  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3669   0026F2  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  3670   0026F4  A0D8               	btfss	status,0,c
  3671   0026F6  EF7F  F013         	goto	u3691
  3672   0026FA  EF81  F013         	goto	u3690
  3673   0026FE                     u3691:
  3674   0026FE  EF86  F013         	goto	l5637
  3675   002702                     u3690:
  3676   002702  5004               	movf	___awdiv@divisor^0,w,c
  3677   002704  5E02               	subwf	___awdiv@dividend^0,f,c
  3678   002706  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3679   002708  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  3680   00270A  8008               	bsf	___awdiv@quotient^0,0,c
  3681   00270C                     l5637:
  3682   00270C  90D8               	bcf	status,0,c
  3683   00270E  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  3684   002710  3204               	rrcf	___awdiv@divisor^0,f,c
  3685   002712  2E06               	decfsz	___awdiv@counter^0,f,c
  3686   002714  EF73  F013         	goto	l5629
  3687   002718                     l5641:
  3688   002718  5007               	movf	___awdiv@sign^0,w,c
  3689   00271A  B4D8               	btfsc	status,2,c
  3690   00271C  EF92  F013         	goto	u3701
  3691   002720  EF94  F013         	goto	u3700
  3692   002724                     u3701:
  3693   002724  EF98  F013         	goto	l5645
  3694   002728                     u3700:
  3695   002728  6C08               	negf	___awdiv@quotient^0,c
  3696   00272A  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  3697   00272C  B0D8               	btfsc	status,0,c
  3698   00272E  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  3699   002730                     l5645:
  3700   002730  C008  F002         	movff	___awdiv@quotient,?___awdiv
  3701   002734  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  3702   002738  0012               	return		;funcret
  3703   00273A                     __end_of___awdiv:
  3704                           	callstack 0
  3705                           
  3706 ;; *************** function _memset *****************
  3707 ;; Defined at:
  3708 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  dest            2    1[COMRAM] PTR void 
  3711 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  3712 ;;  c               2    3[COMRAM] int 
  3713 ;;  n               2    5[COMRAM] unsigned int 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  s               2   11[COMRAM] PTR unsigned char 
  3716 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  3717 ;;  k               2    9[COMRAM] unsigned int 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  2    1[COMRAM] PTR void 
  3720 ;; Registers used:
  3721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3727 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;Total ram usage:       12 bytes
  3732 ;; Hardware stack levels used: 1
  3733 ;; Hardware stack levels required when called: 2
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_convert_uint16_to_string
  3738 ;;		_convert_uint8_to_string
  3739 ;;		_convert_uint32_to_string
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text20
  3744   001D90                     __ptext20:
  3745                           	callstack 0
  3746   001D90                     _memset:
  3747                           	callstack 27
  3748   001D90  C002  F00C         	movff	memset@dest,memset@s
  3749   001D94  C003  F00D         	movff	memset@dest+1,memset@s+1
  3750   001D98  5006               	movf	memset@n^0,w,c
  3751   001D9A  1007               	iorwf	(memset@n+1)^0,w,c
  3752   001D9C  A4D8               	btfss	status,2,c
  3753   001D9E  EFD3  F00E         	goto	u4171
  3754   001DA2  EFD5  F00E         	goto	u4170
  3755   001DA6                     u4171:
  3756   001DA6  EFD7  F00E         	goto	l6055
  3757   001DAA                     u4170:
  3758   001DAA  EF82  F00F         	goto	l2326
  3759   001DAE                     l6055:
  3760   001DAE  C00C  FFD9         	movff	memset@s,fsr2l
  3761   001DB2  C00D  FFDA         	movff	memset@s+1,fsr2h
  3762   001DB6  C004  FFDF         	movff	memset@c,indf2
  3763   001DBA  5006               	movf	memset@n^0,w,c
  3764   001DBC  240C               	addwf	memset@s^0,w,c
  3765   001DBE  6E08               	movwf	??_memset^0,c
  3766   001DC0  5007               	movf	(memset@n+1)^0,w,c
  3767   001DC2  200D               	addwfc	(memset@s+1)^0,w,c
  3768   001DC4  6E09               	movwf	(??_memset+1)^0,c
  3769   001DC6  0EFF               	movlw	255
  3770   001DC8  2408               	addwf	??_memset^0,w,c
  3771   001DCA  6ED9               	movwf	fsr2l,c
  3772   001DCC  0EFF               	movlw	255
  3773   001DCE  2009               	addwfc	(??_memset+1)^0,w,c
  3774   001DD0  6EDA               	movwf	fsr2h,c
  3775   001DD2  C004  FFDF         	movff	memset@c,indf2
  3776   001DD6  5007               	movf	(memset@n+1)^0,w,c
  3777   001DD8  E107               	bnz	u4181
  3778   001DDA  0E03               	movlw	3
  3779   001DDC  5C06               	subwf	memset@n^0,w,c
  3780   001DDE  B0D8               	btfsc	status,0,c
  3781   001DE0  EFF4  F00E         	goto	u4181
  3782   001DE4  EFF6  F00E         	goto	u4180
  3783   001DE8                     u4181:
  3784   001DE8  EFF8  F00E         	goto	l6061
  3785   001DEC                     u4180:
  3786   001DEC  EF82  F00F         	goto	l2326
  3787   001DF0                     l6061:
  3788   001DF0  EE20 F001          	lfsr	2,1
  3789   001DF4  500C               	movf	memset@s^0,w,c
  3790   001DF6  26D9               	addwf	fsr2l,f,c
  3791   001DF8  500D               	movf	(memset@s+1)^0,w,c
  3792   001DFA  22DA               	addwfc	fsr2h,f,c
  3793   001DFC  C004  FFDF         	movff	memset@c,indf2
  3794   001E00  EE20 F002          	lfsr	2,2
  3795   001E04  500C               	movf	memset@s^0,w,c
  3796   001E06  26D9               	addwf	fsr2l,f,c
  3797   001E08  500D               	movf	(memset@s+1)^0,w,c
  3798   001E0A  22DA               	addwfc	fsr2h,f,c
  3799   001E0C  C004  FFDF         	movff	memset@c,indf2
  3800   001E10  5006               	movf	memset@n^0,w,c
  3801   001E12  240C               	addwf	memset@s^0,w,c
  3802   001E14  6E08               	movwf	??_memset^0,c
  3803   001E16  5007               	movf	(memset@n+1)^0,w,c
  3804   001E18  200D               	addwfc	(memset@s+1)^0,w,c
  3805   001E1A  6E09               	movwf	(??_memset+1)^0,c
  3806   001E1C  0EFE               	movlw	254
  3807   001E1E  2408               	addwf	??_memset^0,w,c
  3808   001E20  6ED9               	movwf	fsr2l,c
  3809   001E22  0EFF               	movlw	255
  3810   001E24  2009               	addwfc	(??_memset+1)^0,w,c
  3811   001E26  6EDA               	movwf	fsr2h,c
  3812   001E28  C004  FFDF         	movff	memset@c,indf2
  3813   001E2C  5006               	movf	memset@n^0,w,c
  3814   001E2E  240C               	addwf	memset@s^0,w,c
  3815   001E30  6E08               	movwf	??_memset^0,c
  3816   001E32  5007               	movf	(memset@n+1)^0,w,c
  3817   001E34  200D               	addwfc	(memset@s+1)^0,w,c
  3818   001E36  6E09               	movwf	(??_memset+1)^0,c
  3819   001E38  0EFD               	movlw	253
  3820   001E3A  2408               	addwf	??_memset^0,w,c
  3821   001E3C  6ED9               	movwf	fsr2l,c
  3822   001E3E  0EFF               	movlw	255
  3823   001E40  2009               	addwfc	(??_memset+1)^0,w,c
  3824   001E42  6EDA               	movwf	fsr2h,c
  3825   001E44  C004  FFDF         	movff	memset@c,indf2
  3826   001E48  5007               	movf	(memset@n+1)^0,w,c
  3827   001E4A  E107               	bnz	u4191
  3828   001E4C  0E07               	movlw	7
  3829   001E4E  5C06               	subwf	memset@n^0,w,c
  3830   001E50  B0D8               	btfsc	status,0,c
  3831   001E52  EF2D  F00F         	goto	u4191
  3832   001E56  EF2F  F00F         	goto	u4190
  3833   001E5A                     u4191:
  3834   001E5A  EF31  F00F         	goto	l6067
  3835   001E5E                     u4190:
  3836   001E5E  EF82  F00F         	goto	l2326
  3837   001E62                     l6067:
  3838   001E62  EE20 F003          	lfsr	2,3
  3839   001E66  500C               	movf	memset@s^0,w,c
  3840   001E68  26D9               	addwf	fsr2l,f,c
  3841   001E6A  500D               	movf	(memset@s+1)^0,w,c
  3842   001E6C  22DA               	addwfc	fsr2h,f,c
  3843   001E6E  C004  FFDF         	movff	memset@c,indf2
  3844   001E72  5006               	movf	memset@n^0,w,c
  3845   001E74  240C               	addwf	memset@s^0,w,c
  3846   001E76  6E08               	movwf	??_memset^0,c
  3847   001E78  5007               	movf	(memset@n+1)^0,w,c
  3848   001E7A  200D               	addwfc	(memset@s+1)^0,w,c
  3849   001E7C  6E09               	movwf	(??_memset+1)^0,c
  3850   001E7E  0EFC               	movlw	252
  3851   001E80  2408               	addwf	??_memset^0,w,c
  3852   001E82  6ED9               	movwf	fsr2l,c
  3853   001E84  0EFF               	movlw	255
  3854   001E86  2009               	addwfc	(??_memset+1)^0,w,c
  3855   001E88  6EDA               	movwf	fsr2h,c
  3856   001E8A  C004  FFDF         	movff	memset@c,indf2
  3857   001E8E  5007               	movf	(memset@n+1)^0,w,c
  3858   001E90  E107               	bnz	u4201
  3859   001E92  0E09               	movlw	9
  3860   001E94  5C06               	subwf	memset@n^0,w,c
  3861   001E96  B0D8               	btfsc	status,0,c
  3862   001E98  EF50  F00F         	goto	u4201
  3863   001E9C  EF52  F00F         	goto	u4200
  3864   001EA0                     u4201:
  3865   001EA0  EF54  F00F         	goto	l6073
  3866   001EA4                     u4200:
  3867   001EA4  EF82  F00F         	goto	l2326
  3868   001EA8                     l6073:
  3869   001EA8  C00C  F008         	movff	memset@s,??_memset
  3870   001EAC  C00D  F009         	movff	memset@s+1,??_memset+1
  3871   001EB0  1E08               	comf	??_memset^0,f,c
  3872   001EB2  1E09               	comf	(??_memset+1)^0,f,c
  3873   001EB4  4A08               	infsnz	??_memset^0,f,c
  3874   001EB6  2A09               	incf	(??_memset+1)^0,f,c
  3875   001EB8  0E03               	movlw	3
  3876   001EBA  1408               	andwf	??_memset^0,w,c
  3877   001EBC  6E0A               	movwf	memset@k^0,c
  3878   001EBE  6A0B               	clrf	(memset@k+1)^0,c
  3879   001EC0  500A               	movf	memset@k^0,w,c
  3880   001EC2  260C               	addwf	memset@s^0,f,c
  3881   001EC4  500B               	movf	(memset@k+1)^0,w,c
  3882   001EC6  220D               	addwfc	(memset@s+1)^0,f,c
  3883   001EC8  500A               	movf	memset@k^0,w,c
  3884   001ECA  5E06               	subwf	memset@n^0,f,c
  3885   001ECC  500B               	movf	(memset@k+1)^0,w,c
  3886   001ECE  5A07               	subwfb	(memset@n+1)^0,f,c
  3887   001ED0  0EFC               	movlw	252
  3888   001ED2  1606               	andwf	memset@n^0,f,c
  3889   001ED4  0EFF               	movlw	255
  3890   001ED6  1607               	andwf	(memset@n+1)^0,f,c
  3891   001ED8  EF79  F00F         	goto	l6081
  3892   001EDC                     l6075:
  3893   001EDC  C00C  FFD9         	movff	memset@s,fsr2l
  3894   001EE0  C00D  FFDA         	movff	memset@s+1,fsr2h
  3895   001EE4  C004  FFDF         	movff	memset@c,indf2
  3896   001EE8  0606               	decf	memset@n^0,f,c
  3897   001EEA  A0D8               	btfss	status,0,c
  3898   001EEC  0607               	decf	(memset@n+1)^0,f,c
  3899   001EEE  4A0C               	infsnz	memset@s^0,f,c
  3900   001EF0  2A0D               	incf	(memset@s+1)^0,f,c
  3901   001EF2                     l6081:
  3902   001EF2  5006               	movf	memset@n^0,w,c
  3903   001EF4  1007               	iorwf	(memset@n+1)^0,w,c
  3904   001EF6  A4D8               	btfss	status,2,c
  3905   001EF8  EF80  F00F         	goto	u4211
  3906   001EFC  EF82  F00F         	goto	u4210
  3907   001F00                     u4211:
  3908   001F00  EF6E  F00F         	goto	l6075
  3909   001F04                     u4210:
  3910   001F04                     l2326:
  3911   001F04  0012               	return		;funcret
  3912   001F06                     __end_of_memset:
  3913                           	callstack 0
  3914                           
  3915 ;; *************** function _application_intialize *****************
  3916 ;; Defined at:
  3917 ;;		line 145 in file "application.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  ret             1    0        unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; Hardware stack levels required when called: 6
  3938 ;; This function calls:
  3939 ;;		_ADC_Init
  3940 ;;		_dc_motor_initialize
  3941 ;;		_lcd_4bit_intialize
  3942 ;;		_led_initialize
  3943 ;; This function is called by:
  3944 ;;		_main
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text21
  3949   00310C                     __ptext21:
  3950                           	callstack 0
  3951   00310C                     _application_intialize:
  3952                           	callstack 24
  3953   00310C  0EF2               	movlw	low _lcd_1
  3954   00310E  6E14               	movwf	lcd_4bit_intialize@lcd^0,c
  3955   003110  0E00               	movlw	high _lcd_1
  3956   003112  6E15               	movwf	(lcd_4bit_intialize@lcd+1)^0,c
  3957   003114  ECBB  F010         	call	_lcd_4bit_intialize	;wreg free
  3958   003118  0EEB               	movlw	low _adc_1
  3959   00311A  6E05               	movwf	ADC_Init@_adc^0,c
  3960   00311C  0E00               	movlw	high _adc_1
  3961   00311E  6E06               	movwf	(ADC_Init@_adc+1)^0,c
  3962   003120  ECFF  F013         	call	_ADC_Init	;wreg free
  3963   003124  0EFA               	movlw	low _dc_motor_1
  3964   003126  6E10               	movwf	dc_motor_initialize@_dc_motor^0,c
  3965   003128  0E00               	movlw	high _dc_motor_1
  3966   00312A  6E11               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
  3967   00312C  EC7A  F019         	call	_dc_motor_initialize	;wreg free
  3968   003130  0EF8               	movlw	low _dc_motor_2
  3969   003132  6E10               	movwf	dc_motor_initialize@_dc_motor^0,c
  3970   003134  0E00               	movlw	high _dc_motor_2
  3971   003136  6E11               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
  3972   003138  EC7A  F019         	call	_dc_motor_initialize	;wreg free
  3973   00313C  0E7D               	movlw	low _led1
  3974   00313E  6E10               	movwf	led_initialize@led^0,c
  3975   003140  0E00               	movlw	high _led1
  3976   003142  6E11               	movwf	(led_initialize@led+1)^0,c
  3977   003144  EC36  F016         	call	_led_initialize	;wreg free
  3978   003148  0E7C               	movlw	low _led2
  3979   00314A  6E10               	movwf	led_initialize@led^0,c
  3980   00314C  0E00               	movlw	high _led2
  3981   00314E  6E11               	movwf	(led_initialize@led+1)^0,c
  3982   003150  EC36  F016         	call	_led_initialize	;wreg free
  3983   003154  0012               	return		;funcret
  3984   003156                     __end_of_application_intialize:
  3985                           	callstack 0
  3986                           
  3987 ;; *************** function _led_initialize *****************
  3988 ;; Defined at:
  3989 ;;		line 16 in file "ECU_Layer/LED/ecu_led.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  led             2   15[COMRAM] PTR const struct .
  3992 ;;		 -> led2(1), led1(1), 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  pin_obj         1   19[COMRAM] struct .
  3995 ;;  ret             1   18[COMRAM] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      unsigned char 
  3998 ;; Registers used:
  3999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;Total ram usage:        5 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 4
  4012 ;; This function calls:
  4013 ;;		_gpio_pin_intialize
  4014 ;; This function is called by:
  4015 ;;		_application_intialize
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text22
  4020   002C6C                     __ptext22:
  4021                           	callstack 0
  4022   002C6C                     _led_initialize:
  4023                           	callstack 25
  4024   002C6C                     
  4025                           ;ECU_Layer/LED/ecu_led.c: 17:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4026   002C6C  0E01               	movlw	1
  4027   002C6E  6E13               	movwf	led_initialize@ret^0,c
  4028   002C70                     
  4029                           ;ECU_Layer/LED/ecu_led.c: 18:     if(((void*)0) == led){
  4030   002C70  5010               	movf	led_initialize@led^0,w,c
  4031   002C72  1011               	iorwf	(led_initialize@led+1)^0,w,c
  4032   002C74  A4D8               	btfss	status,2,c
  4033   002C76  EF3F  F016         	goto	u4231
  4034   002C7A  EF41  F016         	goto	u4230
  4035   002C7E                     u4231:
  4036   002C7E  EF45  F016         	goto	l277
  4037   002C82                     u4230:
  4038   002C82                     
  4039                           ;ECU_Layer/LED/ecu_led.c: 19:         ret = (Std_ReturnType)0x00;
  4040   002C82  0E00               	movlw	0
  4041   002C84  6E13               	movwf	led_initialize@ret^0,c
  4042                           
  4043                           ;ECU_Layer/LED/ecu_led.c: 20:     }
  4044   002C86  EF72  F016         	goto	l6121
  4045   002C8A                     l277:
  4046                           
  4047                           ;ECU_Layer/LED/ecu_led.c: 22:         pin_config_t pin_obj = { .port = led->port_name, .
      +                          pin = led->pin,
  4048   002C8A  C072  F014         	movff	led_initialize@F3048,led_initialize@pin_obj
  4049   002C8E  C010  FFD9         	movff	led_initialize@led,fsr2l
  4050   002C92  C011  FFDA         	movff	led_initialize@led+1,fsr2h
  4051   002C96  50DF               	movf	223,w,c
  4052   002C98  0B0F               	andlw	15
  4053   002C9A  6E12               	movwf	??_led_initialize^0,c
  4054   002C9C  5014               	movf	led_initialize@pin_obj^0,w,c
  4055   002C9E  1812               	xorwf	??_led_initialize^0,w,c
  4056   002CA0  0BF8               	andlw	-8
  4057   002CA2  1812               	xorwf	??_led_initialize^0,w,c
  4058   002CA4  6E14               	movwf	led_initialize@pin_obj^0,c
  4059   002CA6  C010  FFD9         	movff	led_initialize@led,fsr2l
  4060   002CAA  C011  FFDA         	movff	led_initialize@led+1,fsr2h
  4061   002CAE  38DF               	swapf	223,w,c
  4062   002CB0  0B07               	andlw	7
  4063   002CB2  6E12               	movwf	??_led_initialize^0,c
  4064   002CB4  4612               	rlncf	??_led_initialize^0,f,c
  4065   002CB6  4612               	rlncf	??_led_initialize^0,f,c
  4066   002CB8  4612               	rlncf	??_led_initialize^0,f,c
  4067   002CBA  5014               	movf	led_initialize@pin_obj^0,w,c
  4068   002CBC  1812               	xorwf	??_led_initialize^0,w,c
  4069   002CBE  0BC7               	andlw	-57
  4070   002CC0  1812               	xorwf	??_led_initialize^0,w,c
  4071   002CC2  6E14               	movwf	led_initialize@pin_obj^0,c
  4072   002CC4  9C14               	bcf	led_initialize@pin_obj^0,6,c
  4073   002CC6  C010  FFD9         	movff	led_initialize@led,fsr2l
  4074   002CCA  C011  FFDA         	movff	led_initialize@led+1,fsr2h
  4075   002CCE  AEDF               	btfss	indf2,7,c
  4076   002CD0  D002               	bra	u4245
  4077   002CD2  8E14               	bsf	led_initialize@pin_obj^0,7,c
  4078   002CD4  D001               	bra	u4247
  4079   002CD6                     u4245:
  4080   002CD6  9E14               	bcf	led_initialize@pin_obj^0,7,c
  4081   002CD8                     u4247:
  4082   002CD8                     
  4083                           ;ECU_Layer/LED/ecu_led.c: 24:         gpio_pin_intialize(&pin_obj);
  4084   002CD8  0E14               	movlw	low led_initialize@pin_obj
  4085   002CDA  6E0C               	movwf	gpio_pin_intialize@_pin_config^0,c
  4086   002CDC  0E00               	movlw	high led_initialize@pin_obj
  4087   002CDE  6E0D               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4088   002CE0  ECCE  F017         	call	_gpio_pin_intialize	;wreg free
  4089   002CE4                     l6121:
  4090                           
  4091                           ;ECU_Layer/LED/ecu_led.c: 26:     return ret;
  4092   002CE4  5013               	movf	led_initialize@ret^0,w,c
  4093   002CE6  0012               	return		;funcret
  4094   002CE8                     __end_of_led_initialize:
  4095                           	callstack 0
  4096                           
  4097 ;; *************** function _lcd_4bit_intialize *****************
  4098 ;; Defined at:
  4099 ;;		line 30 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  lcd             2   19[COMRAM] PTR const struct .
  4102 ;;		 -> lcd_1(6), 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  ret             1   24[COMRAM] unsigned char 
  4105 ;;  l_data_pins_    1   23[COMRAM] unsigned char 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      unsigned char 
  4108 ;; Registers used:
  4109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;Total ram usage:        6 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 5
  4122 ;; This function calls:
  4123 ;;		_gpio_pin_intialize
  4124 ;;		_lcd_4bit_send_command
  4125 ;; This function is called by:
  4126 ;;		_application_intialize
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text23
  4131   002176                     __ptext23:
  4132                           	callstack 0
  4133   002176                     _lcd_4bit_intialize:
  4134                           	callstack 24
  4135   002176                     
  4136                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:     uint8 l_data_pins_counter = 0;
  4137   002176  0E00               	movlw	0
  4138   002178  6E18               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  4139   00217A                     
  4140                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 33:     if(((void*)0) == lcd){
  4141   00217A  5014               	movf	lcd_4bit_intialize@lcd^0,w,c
  4142   00217C  1015               	iorwf	(lcd_4bit_intialize@lcd+1)^0,w,c
  4143   00217E  A4D8               	btfss	status,2,c
  4144   002180  EFC4  F010         	goto	u4111
  4145   002184  EFC6  F010         	goto	u4110
  4146   002188                     u4111:
  4147   002188  EFCA  F010         	goto	l5941
  4148   00218C                     u4110:
  4149   00218C                     
  4150                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 34:         ret = (Std_ReturnType)0x00;
  4151   00218C  0E00               	movlw	0
  4152   00218E  6E19               	movwf	lcd_4bit_intialize@ret^0,c
  4153                           
  4154                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:     }
  4155   002190  EF4F  F011         	goto	l5977
  4156   002194                     l5941:
  4157                           
  4158                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 37:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  4159   002194  C014  F00C         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  4160   002198  C015  F00D         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
  4161   00219C  ECCE  F017         	call	_gpio_pin_intialize	;wreg free
  4162   0021A0  6E19               	movwf	lcd_4bit_intialize@ret^0,c
  4163                           
  4164                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 38:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  4165   0021A2  0E01               	movlw	1
  4166   0021A4  2414               	addwf	lcd_4bit_intialize@lcd^0,w,c
  4167   0021A6  6E0C               	movwf	gpio_pin_intialize@_pin_config^0,c
  4168   0021A8  0E00               	movlw	0
  4169   0021AA  2015               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  4170   0021AC  6E0D               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4171   0021AE  ECCE  F017         	call	_gpio_pin_intialize	;wreg free
  4172   0021B2  6E19               	movwf	lcd_4bit_intialize@ret^0,c
  4173   0021B4                     
  4174                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 39:         for(l_data_pins_counter=0; l_data_pins_cou
      +                          nter<4; l_data_pins_counter++){
  4175   0021B4  0E00               	movlw	0
  4176   0021B6  6E18               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  4177   0021B8                     l5949:
  4178   0021B8  5018               	movf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
  4179   0021BA  2414               	addwf	lcd_4bit_intialize@lcd^0,w,c
  4180   0021BC  6E16               	movwf	??_lcd_4bit_intialize^0,c
  4181   0021BE  0E00               	movlw	0
  4182   0021C0  2015               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  4183   0021C2  6E17               	movwf	(??_lcd_4bit_intialize+1)^0,c
  4184   0021C4  0E02               	movlw	2
  4185   0021C6  2416               	addwf	??_lcd_4bit_intialize^0,w,c
  4186   0021C8  6E0C               	movwf	gpio_pin_intialize@_pin_config^0,c
  4187   0021CA  0E00               	movlw	0
  4188   0021CC  2017               	addwfc	(??_lcd_4bit_intialize+1)^0,w,c
  4189   0021CE  6E0D               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4190   0021D0  ECCE  F017         	call	_gpio_pin_intialize	;wreg free
  4191   0021D4                     
  4192                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 41:         }
  4193   0021D4  2A18               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
  4194   0021D6  0E03               	movlw	3
  4195   0021D8  6418               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
  4196   0021DA  EFF1  F010         	goto	u4121
  4197   0021DE  EFF3  F010         	goto	u4120
  4198   0021E2                     u4121:
  4199   0021E2  EFDC  F010         	goto	l5949
  4200   0021E6                     u4120:
  4201   0021E6                     
  4202                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 42:         _delay((unsigned long)((20)*(4000000UL/400
      +                          0.0)));
  4203   0021E6  0E1A               	movlw	26
  4204   0021E8  6E16               	movwf	??_lcd_4bit_intialize^0,c
  4205   0021EA  0EF8               	movlw	248
  4206   0021EC                     u6567:
  4207   0021EC  2EE8               	decfsz	wreg,f,c
  4208   0021EE  D7FE               	bra	u6567
  4209   0021F0  2E16               	decfsz	??_lcd_4bit_intialize^0,f,c
  4210   0021F2  D7FC               	bra	u6567
  4211   0021F4  D000               	nop2	
  4212   0021F6  C014  F010         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4213   0021FA  C015  F011         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4214   0021FE  0E38               	movlw	56
  4215   002200  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4216   002202  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  4217   002206                     
  4218                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 44:         _delay((unsigned long)((5)*(4000000UL/4000
      +                          .0)));
  4219   002206  0E07               	movlw	7
  4220   002208  6E16               	movwf	??_lcd_4bit_intialize^0,c
  4221   00220A  0E7D               	movlw	125
  4222   00220C                     u6577:
  4223   00220C  2EE8               	decfsz	wreg,f,c
  4224   00220E  D7FE               	bra	u6577
  4225   002210  2E16               	decfsz	??_lcd_4bit_intialize^0,f,c
  4226   002212  D7FC               	bra	u6577
  4227   002214  F000               	nop	
  4228   002216  C014  F010         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4229   00221A  C015  F011         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4230   00221E  0E38               	movlw	56
  4231   002220  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4232   002222  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  4233   002226                     
  4234                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 46:         _delay((unsigned long)((150)*(4000000UL/40
      +                          00000.0)));
  4235   002226  0E32               	movlw	50
  4236   002228                     u6587:
  4237   002228  2EE8               	decfsz	wreg,f,c
  4238   00222A  D7FE               	bra	u6587
  4239   00222C  C014  F010         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4240   002230  C015  F011         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4241   002234  0E38               	movlw	56
  4242   002236  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4243   002238  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  4244   00223C  C014  F010         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4245   002240  C015  F011         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4246   002244  0E01               	movlw	1
  4247   002246  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4248   002248  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  4249   00224C  C014  F010         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4250   002250  C015  F011         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4251   002254  0E02               	movlw	2
  4252   002256  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4253   002258  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  4254   00225C  C014  F010         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4255   002260  C015  F011         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4256   002264  0E06               	movlw	6
  4257   002266  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4258   002268  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  4259   00226C  C014  F010         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4260   002270  C015  F011         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4261   002274  0E0C               	movlw	12
  4262   002276  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4263   002278  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  4264   00227C  C014  F010         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4265   002280  C015  F011         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4266   002284  0E28               	movlw	40
  4267   002286  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4268   002288  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  4269   00228C                     
  4270                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 54:         ret = lcd_4bit_send_command(lcd, 0x80);
  4271   00228C  C014  F010         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4272   002290  C015  F011         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4273   002294  0E80               	movlw	128
  4274   002296  6E12               	movwf	lcd_4bit_send_command@command^0,c
  4275   002298  EC5E  F017         	call	_lcd_4bit_send_command	;wreg free
  4276   00229C  6E19               	movwf	lcd_4bit_intialize@ret^0,c
  4277   00229E                     l5977:
  4278                           
  4279                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 56:     return ret;
  4280   00229E  5019               	movf	lcd_4bit_intialize@ret^0,w,c
  4281   0022A0  0012               	return		;funcret
  4282   0022A2                     __end_of_lcd_4bit_intialize:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function _lcd_4bit_send_command *****************
  4286 ;; Defined at:
  4287 ;;		line 67 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  lcd             2   15[COMRAM] PTR const struct .
  4290 ;;		 -> lcd_1(6), 
  4291 ;;  command         1   17[COMRAM] unsigned char 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  ret             1   18[COMRAM] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      unsigned char 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4303 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;Total ram usage:        4 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 4
  4310 ;; This function calls:
  4311 ;;		_gpio_pin_write_logic
  4312 ;;		_lcd_4bit_send_enable_signal
  4313 ;;		_lcd_send_4bits
  4314 ;; This function is called by:
  4315 ;;		_lcd_4bit_intialize
  4316 ;;		_lcd_4bit_set_cursor
  4317 ;;		_main
  4318 ;;		_lcd_4bit_send_custom_char
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text24
  4323   002EBC                     __ptext24:
  4324                           	callstack 0
  4325   002EBC                     _lcd_4bit_send_command:
  4326                           	callstack 24
  4327   002EBC                     
  4328                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:     if(((void*)0) == lcd){
  4329   002EBC  5010               	movf	lcd_4bit_send_command@lcd^0,w,c
  4330   002EBE  1011               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  4331   002EC0  A4D8               	btfss	status,2,c
  4332   002EC2  EF65  F017         	goto	u4051
  4333   002EC6  EF67  F017         	goto	u4050
  4334   002ECA                     u4051:
  4335   002ECA  EF6B  F017         	goto	l5873
  4336   002ECE                     u4050:
  4337   002ECE                     
  4338                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = (Std_ReturnType)0x00;
  4339   002ECE  0E00               	movlw	0
  4340   002ED0  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4341                           
  4342                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:     }
  4343   002ED2  EF95  F017         	goto	l5875
  4344   002ED6                     l5873:
  4345                           
  4346                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 75:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  4347   002ED6  C010  F002         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  4348   002EDA  C011  F003         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  4349   002EDE  0E00               	movlw	0
  4350   002EE0  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4351   002EE2  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  4352   002EE6  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4353                           
  4354                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 77:         ret = lcd_send_4bits(lcd, command >> 4);
  4355   002EE8  C010  F00C         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4356   002EEC  C011  F00D         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  4357   002EF0  3812               	swapf	lcd_4bit_send_command@command^0,w,c
  4358   002EF2  0B0F               	andlw	15
  4359   002EF4  6E0E               	movwf	lcd_send_4bits@_data_command^0,c
  4360   002EF6  EC04  F018         	call	_lcd_send_4bits	;wreg free
  4361   002EFA  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4362                           
  4363                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 79:         ret = lcd_4bit_send_enable_signal(lcd);
  4364   002EFC  C010  F00C         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4365   002F00  C011  F00D         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4366   002F04  ECB6  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  4367   002F08  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4368                           
  4369                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 81:         ret = lcd_send_4bits(lcd, command);
  4370   002F0A  C010  F00C         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4371   002F0E  C011  F00D         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  4372   002F12  C012  F00E         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  4373   002F16  EC04  F018         	call	_lcd_send_4bits	;wreg free
  4374   002F1A  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4375                           
  4376                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 83:         ret = lcd_4bit_send_enable_signal(lcd);
  4377   002F1C  C010  F00C         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4378   002F20  C011  F00D         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4379   002F24  ECB6  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  4380   002F28  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  4381   002F2A                     l5875:
  4382                           
  4383                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 85:     return ret;
  4384   002F2A  5013               	movf	lcd_4bit_send_command@ret^0,w,c
  4385   002F2C  0012               	return		;funcret
  4386   002F2E                     __end_of_lcd_4bit_send_command:
  4387                           	callstack 0
  4388                           
  4389 ;; *************** function _lcd_send_4bits *****************
  4390 ;; Defined at:
  4391 ;;		line 500 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  lcd             2   11[COMRAM] PTR const struct .
  4394 ;;		 -> lcd_1(6), 
  4395 ;;  _data_comman    1   13[COMRAM] unsigned char 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  ret             1   14[COMRAM] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      unsigned char 
  4400 ;; Registers used:
  4401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4407 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;Total ram usage:        4 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; Hardware stack levels required when called: 3
  4414 ;; This function calls:
  4415 ;;		_gpio_pin_write_logic
  4416 ;; This function is called by:
  4417 ;;		_lcd_4bit_send_command
  4418 ;;		_lcd_4bit_send_char_data
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text25
  4423   003008                     __ptext25:
  4424                           	callstack 0
  4425   003008                     _lcd_send_4bits:
  4426                           	callstack 24
  4427   003008  0E02               	movlw	2
  4428   00300A  240C               	addwf	lcd_send_4bits@lcd^0,w,c
  4429   00300C  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4430   00300E  0E00               	movlw	0
  4431   003010  200D               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4432   003012  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4433   003014  500E               	movf	lcd_send_4bits@_data_command^0,w,c
  4434   003016  0B01               	andlw	1
  4435   003018  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4436   00301A  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  4437   00301E  0E03               	movlw	3
  4438   003020  240C               	addwf	lcd_send_4bits@lcd^0,w,c
  4439   003022  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4440   003024  0E00               	movlw	0
  4441   003026  200D               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4442   003028  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4443   00302A  90D8               	bcf	status,0,c
  4444   00302C  300E               	rrcf	lcd_send_4bits@_data_command^0,w,c
  4445   00302E  0B01               	andlw	1
  4446   003030  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4447   003032  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  4448   003036  0E04               	movlw	4
  4449   003038  240C               	addwf	lcd_send_4bits@lcd^0,w,c
  4450   00303A  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4451   00303C  0E00               	movlw	0
  4452   00303E  200D               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4453   003040  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4454   003042  400E               	rrncf	lcd_send_4bits@_data_command^0,w,c
  4455   003044  42E8               	rrncf	wreg,f,c
  4456   003046  0B3F               	andlw	63
  4457   003048  0B01               	andlw	1
  4458   00304A  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4459   00304C  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  4460   003050                     
  4461                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 505:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  4462   003050  0E05               	movlw	5
  4463   003052  240C               	addwf	lcd_send_4bits@lcd^0,w,c
  4464   003054  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4465   003056  0E00               	movlw	0
  4466   003058  200D               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4467   00305A  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4468   00305C  380E               	swapf	lcd_send_4bits@_data_command^0,w,c
  4469   00305E  46E8               	rlncf	wreg,f,c
  4470   003060  0B1F               	andlw	31
  4471   003062  0B01               	andlw	1
  4472   003064  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4473   003066  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  4474   00306A  6E0F               	movwf	lcd_send_4bits@ret^0,c
  4475                           
  4476                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 506:     return ret;
  4477   00306C  500F               	movf	lcd_send_4bits@ret^0,w,c
  4478   00306E  0012               	return		;funcret
  4479   003070                     __end_of_lcd_send_4bits:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _lcd_4bit_send_enable_signal *****************
  4483 ;; Defined at:
  4484 ;;		line 516 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  lcd             2   11[COMRAM] PTR const struct .
  4487 ;;		 -> lcd_1(6), 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  ret             1   13[COMRAM] unsigned char 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  1    wreg      unsigned char 
  4492 ;; Registers used:
  4493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;Total ram usage:        3 bytes
  4504 ;; Hardware stack levels used: 1
  4505 ;; Hardware stack levels required when called: 3
  4506 ;; This function calls:
  4507 ;;		_gpio_pin_write_logic
  4508 ;; This function is called by:
  4509 ;;		_lcd_4bit_send_command
  4510 ;;		_lcd_4bit_send_char_data
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text26
  4515   00336C                     __ptext26:
  4516                           	callstack 0
  4517   00336C                     _lcd_4bit_send_enable_signal:
  4518                           	callstack 24
  4519   00336C  0E01               	movlw	1
  4520   00336E  240C               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4521   003370  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4522   003372  0E00               	movlw	0
  4523   003374  200D               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4524   003376  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4525   003378  0E01               	movlw	1
  4526   00337A  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4527   00337C  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  4528   003380                     
  4529                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 519:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  4530   003380  D000               	nop2		;2 cycle nop
  4531   003382  D000               	nop2		;2 cycle nop
  4532   003384  F000               	nop	
  4533   003386                     
  4534                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 520:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  4535   003386  0E01               	movlw	1
  4536   003388  240C               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4537   00338A  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4538   00338C  0E00               	movlw	0
  4539   00338E  200D               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4540   003390  6E03               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4541   003392  0E00               	movlw	0
  4542   003394  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4543   003396  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  4544   00339A  6E0E               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  4545                           
  4546                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 521:     return ret;
  4547   00339C  500E               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  4548   00339E  0012               	return		;funcret
  4549   0033A0                     __end_of_lcd_4bit_send_enable_signal:
  4550                           	callstack 0
  4551                           
  4552 ;; *************** function _dc_motor_initialize *****************
  4553 ;; Defined at:
  4554 ;;		line 16 in file "ECU_Layer/DC_MOTOR/ecu_dc_motor.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  _dc_motor       2   15[COMRAM] PTR const struct .
  4557 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  ret             1   17[COMRAM] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      unsigned char 
  4562 ;; Registers used:
  4563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;Total ram usage:        3 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; Hardware stack levels required when called: 4
  4576 ;; This function calls:
  4577 ;;		_gpio_pin_intialize
  4578 ;; This function is called by:
  4579 ;;		_application_intialize
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text27
  4584   0032F4                     __ptext27:
  4585                           	callstack 0
  4586   0032F4                     _dc_motor_initialize:
  4587                           	callstack 25
  4588   0032F4                     
  4589                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 17:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4590   0032F4  0E01               	movlw	1
  4591   0032F6  6E12               	movwf	dc_motor_initialize@ret^0,c
  4592   0032F8                     
  4593                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 18:     if(((void*)0) == _dc_motor){
  4594   0032F8  5010               	movf	dc_motor_initialize@_dc_motor^0,w,c
  4595   0032FA  1011               	iorwf	(dc_motor_initialize@_dc_motor+1)^0,w,c
  4596   0032FC  A4D8               	btfss	status,2,c
  4597   0032FE  EF83  F019         	goto	u4221
  4598   003302  EF85  F019         	goto	u4220
  4599   003306                     u4221:
  4600   003306  EF89  F019         	goto	l6101
  4601   00330A                     u4220:
  4602   00330A                     
  4603                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 19:         ret = (Std_ReturnType)0x00;
  4604   00330A  0E00               	movlw	0
  4605   00330C  6E12               	movwf	dc_motor_initialize@ret^0,c
  4606                           
  4607                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 20:     }
  4608   00330E  EF97  F019         	goto	l6103
  4609   003312                     l6101:
  4610                           
  4611                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 22:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[0x00U]));
  4612   003312  C010  F00C         	movff	dc_motor_initialize@_dc_motor,gpio_pin_intialize@_pin_config
  4613   003316  C011  F00D         	movff	dc_motor_initialize@_dc_motor+1,gpio_pin_intialize@_pin_config+1
  4614   00331A  ECCE  F017         	call	_gpio_pin_intialize	;wreg free
  4615                           
  4616                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 23:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[0x01U]));
  4617   00331E  0E01               	movlw	1
  4618   003320  2410               	addwf	dc_motor_initialize@_dc_motor^0,w,c
  4619   003322  6E0C               	movwf	gpio_pin_intialize@_pin_config^0,c
  4620   003324  0E00               	movlw	0
  4621   003326  2011               	addwfc	(dc_motor_initialize@_dc_motor+1)^0,w,c
  4622   003328  6E0D               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4623   00332A  ECCE  F017         	call	_gpio_pin_intialize	;wreg free
  4624   00332E                     l6103:
  4625                           
  4626                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 25:     return ret;
  4627   00332E  5012               	movf	dc_motor_initialize@ret^0,w,c
  4628   003330  0012               	return		;funcret
  4629   003332                     __end_of_dc_motor_initialize:
  4630                           	callstack 0
  4631                           
  4632 ;; *************** function _gpio_pin_intialize *****************
  4633 ;; Defined at:
  4634 ;;		line 146 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  _pin_config     2   11[COMRAM] PTR const struct .
  4637 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), dc_motor_2.dc_motor_pin(2), dc_motor_2(2), 
  4638 ;;		 -> dc_motor_1.dc_motor_pin(2), dc_motor_1(2), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  ret             1   14[COMRAM] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      unsigned char 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;Total ram usage:        4 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; Hardware stack levels required when called: 3
  4657 ;; This function calls:
  4658 ;;		_gpio_pin_direction_intialize
  4659 ;;		_gpio_pin_write_logic
  4660 ;; This function is called by:
  4661 ;;		_lcd_4bit_intialize
  4662 ;;		_dc_motor_initialize
  4663 ;;		_led_initialize
  4664 ;;		_seven_segement_intialize
  4665 ;;		_lcd_8bit_intialize
  4666 ;;		_keypad_initialize
  4667 ;;		_relay_initialize
  4668 ;;		_CCP_Init
  4669 ;;		_spi_pins_configuration_for_master
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text28
  4674   002F9C                     __ptext28:
  4675                           	callstack 0
  4676   002F9C                     _gpio_pin_intialize:
  4677                           	callstack 25
  4678   002F9C                     
  4679                           ;MCAL_Layer/GPIO/hal_gpio.c: 148:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1){
  4680   002F9C  500C               	movf	gpio_pin_intialize@_pin_config^0,w,c
  4681   002F9E  100D               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  4682   002FA0  B4D8               	btfsc	status,2,c
  4683   002FA2  EFD5  F017         	goto	u4031
  4684   002FA6  EFD7  F017         	goto	u4030
  4685   002FAA                     u4031:
  4686   002FAA  EFE8  F017         	goto	l5859
  4687   002FAE                     u4030:
  4688   002FAE  C00C  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  4689   002FB2  C00D  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  4690   002FB6  30DF               	rrcf	223,w,c
  4691   002FB8  32E8               	rrcf	wreg,f,c
  4692   002FBA  32E8               	rrcf	wreg,f,c
  4693   002FBC  0B07               	andlw	7
  4694   002FBE  6E0E               	movwf	??_gpio_pin_intialize^0,c
  4695   002FC0  0E07               	movlw	7
  4696   002FC2  640E               	cpfsgt	??_gpio_pin_intialize^0,c
  4697   002FC4  EFE6  F017         	goto	u4041
  4698   002FC8  EFE8  F017         	goto	u4040
  4699   002FCC                     u4041:
  4700   002FCC  EFEC  F017         	goto	l5861
  4701   002FD0                     u4040:
  4702   002FD0                     l5859:
  4703                           
  4704                           ;MCAL_Layer/GPIO/hal_gpio.c: 149:         ret = (Std_ReturnType)0x00;
  4705   002FD0  0E00               	movlw	0
  4706   002FD2  6E0F               	movwf	gpio_pin_intialize@ret^0,c
  4707                           
  4708                           ;MCAL_Layer/GPIO/hal_gpio.c: 150:     }
  4709   002FD4  EF02  F018         	goto	l5863
  4710   002FD8                     l5861:
  4711                           
  4712                           ;MCAL_Layer/GPIO/hal_gpio.c: 152:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
  4713   002FD8  C00C  F002         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  4714   002FDC  C00D  F003         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  4715   002FE0  EC83  F00F         	call	_gpio_pin_direction_intialize	;wreg free
  4716   002FE4  6E0F               	movwf	gpio_pin_intialize@ret^0,c
  4717                           
  4718                           ;MCAL_Layer/GPIO/hal_gpio.c: 153:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
  4719   002FE6  C00C  F002         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  4720   002FEA  C00D  F003         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  4721   002FEE  C00C  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  4722   002FF2  C00D  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  4723   002FF6  0E00               	movlw	0
  4724   002FF8  BEDF               	btfsc	indf2,7,c
  4725   002FFA  0E01               	movlw	1
  4726   002FFC  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  4727   002FFE  EC51  F011         	call	_gpio_pin_write_logic	;wreg free
  4728   003002  6E0F               	movwf	gpio_pin_intialize@ret^0,c
  4729   003004                     l5863:
  4730                           
  4731                           ;MCAL_Layer/GPIO/hal_gpio.c: 155:     return ret;
  4732   003004  500F               	movf	gpio_pin_intialize@ret^0,w,c
  4733   003006  0012               	return		;funcret
  4734   003008                     __end_of_gpio_pin_intialize:
  4735                           	callstack 0
  4736                           
  4737 ;; *************** function _gpio_pin_write_logic *****************
  4738 ;; Defined at:
  4739 ;;		line 78 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  _pin_config     2    1[COMRAM] PTR const struct .
  4742 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), dc_motor_2.dc_motor_pin(2), dc_motor_2(2), 
  4743 ;;		 -> dc_motor_1.dc_motor_pin(2), dc_motor_1(2), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  4744 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  4745 ;;  logic           1    3[COMRAM] enum E2968
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  ret             1   10[COMRAM] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      unsigned char 
  4750 ;; Registers used:
  4751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4757 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;Total ram usage:       10 bytes
  4762 ;; Hardware stack levels used: 1
  4763 ;; Hardware stack levels required when called: 2
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_lcd_4bit_send_command
  4768 ;;		_lcd_4bit_send_char_data
  4769 ;;		_lcd_send_4bits
  4770 ;;		_lcd_4bit_send_enable_signal
  4771 ;;		_dc_motor_move_right
  4772 ;;		_dc_motor_stop
  4773 ;;		_led_turn_on
  4774 ;;		_led_turn_off
  4775 ;;		_gpio_pin_intialize
  4776 ;;		_seven_segement_write_number
  4777 ;;		_lcd_8bit_send_command
  4778 ;;		_lcd_8bit_send_char_data
  4779 ;;		_lcd_8bit_send_enable_signal
  4780 ;;		_dc_motor_move_left
  4781 ;;		_keypad_read_switch
  4782 ;;		_relay_turn_on
  4783 ;;		_relay_turn_off
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text29
  4788   0022A2                     __ptext29:
  4789                           	callstack 0
  4790   0022A2                     _gpio_pin_write_logic:
  4791                           	callstack 27
  4792   0022A2                     
  4793                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4794   0022A2  0E01               	movlw	1
  4795   0022A4  6E0B               	movwf	gpio_pin_write_logic@ret^0,c
  4796   0022A6                     
  4797                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  4798   0022A6  5002               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4799   0022A8  1003               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  4800   0022AA  B4D8               	btfsc	status,2,c
  4801   0022AC  EF5A  F011         	goto	u3801
  4802   0022B0  EF5C  F011         	goto	u3800
  4803   0022B4                     u3801:
  4804   0022B4  EF6D  F011         	goto	l5709
  4805   0022B8                     u3800:
  4806   0022B8  C002  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4807   0022BC  C003  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4808   0022C0  30DF               	rrcf	223,w,c
  4809   0022C2  32E8               	rrcf	wreg,f,c
  4810   0022C4  32E8               	rrcf	wreg,f,c
  4811   0022C6  0B07               	andlw	7
  4812   0022C8  6E05               	movwf	??_gpio_pin_write_logic^0,c
  4813   0022CA  0E07               	movlw	7
  4814   0022CC  6405               	cpfsgt	??_gpio_pin_write_logic^0,c
  4815   0022CE  EF6B  F011         	goto	u3811
  4816   0022D2  EF6D  F011         	goto	u3810
  4817   0022D6                     u3811:
  4818   0022D6  EFD0  F011         	goto	l5717
  4819   0022DA                     u3810:
  4820   0022DA                     l5709:
  4821                           
  4822                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:         ret = (Std_ReturnType)0x00;
  4823   0022DA  0E00               	movlw	0
  4824   0022DC  6E0B               	movwf	gpio_pin_write_logic@ret^0,c
  4825                           
  4826                           ;MCAL_Layer/GPIO/hal_gpio.c: 82:     }
  4827   0022DE  EFE5  F011         	goto	l5719
  4828   0022E2                     l5711:
  4829                           
  4830                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  4831   0022E2  C002  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4832   0022E6  C003  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4833   0022EA  30DF               	rrcf	223,w,c
  4834   0022EC  32E8               	rrcf	wreg,f,c
  4835   0022EE  32E8               	rrcf	wreg,f,c
  4836   0022F0  0B07               	andlw	7
  4837   0022F2  6E05               	movwf	??_gpio_pin_write_logic^0,c
  4838   0022F4  0E01               	movlw	1
  4839   0022F6  6E06               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4840   0022F8  2A05               	incf	??_gpio_pin_write_logic^0,f,c
  4841   0022FA  EF81  F011         	goto	u3824
  4842   0022FE                     u3825:
  4843   0022FE  90D8               	bcf	status,0,c
  4844   002300  3606               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4845   002302                     u3824:
  4846   002302  2E05               	decfsz	??_gpio_pin_write_logic^0,f,c
  4847   002304  EF7F  F011         	goto	u3825
  4848   002308  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4849   00230A  0AFF               	xorlw	255
  4850   00230C  6E07               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4851   00230E  C002  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4852   002312  C003  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4853   002316  50DF               	movf	223,w,c
  4854   002318  0B07               	andlw	7
  4855   00231A  6E08               	movwf	(??_gpio_pin_write_logic+3)^0,c
  4856   00231C  5008               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  4857   00231E  0D02               	mullw	2
  4858   002320  0ED7               	movlw	low _lat_registers
  4859   002322  24F3               	addwf	243,w,c
  4860   002324  6ED9               	movwf	fsr2l,c
  4861   002326  0E00               	movlw	high _lat_registers
  4862   002328  20F4               	addwfc	prodh,w,c
  4863   00232A  6EDA               	movwf	fsr2h,c
  4864   00232C  CFDE F009          	movff	postinc2,??_gpio_pin_write_logic+4
  4865   002330  CFDD F00A          	movff	postdec2,??_gpio_pin_write_logic+5
  4866   002334  C009  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  4867   002338  C00A  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  4868   00233C  5007               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4869   00233E  16DF               	andwf	indf2,f,c
  4870                           
  4871                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
  4872   002340  EFE5  F011         	goto	l5719
  4873   002344                     l5713:
  4874                           
  4875                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  4876   002344  C002  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4877   002348  C003  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4878   00234C  30DF               	rrcf	223,w,c
  4879   00234E  32E8               	rrcf	wreg,f,c
  4880   002350  32E8               	rrcf	wreg,f,c
  4881   002352  0B07               	andlw	7
  4882   002354  6E05               	movwf	??_gpio_pin_write_logic^0,c
  4883   002356  0E01               	movlw	1
  4884   002358  6E06               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4885   00235A  2A05               	incf	??_gpio_pin_write_logic^0,f,c
  4886   00235C  EFB2  F011         	goto	u3834
  4887   002360                     u3835:
  4888   002360  90D8               	bcf	status,0,c
  4889   002362  3606               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4890   002364                     u3834:
  4891   002364  2E05               	decfsz	??_gpio_pin_write_logic^0,f,c
  4892   002366  EFB0  F011         	goto	u3835
  4893   00236A  C002  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4894   00236E  C003  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4895   002372  50DF               	movf	223,w,c
  4896   002374  0B07               	andlw	7
  4897   002376  6E07               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4898   002378  5007               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4899   00237A  0D02               	mullw	2
  4900   00237C  0ED7               	movlw	low _lat_registers
  4901   00237E  24F3               	addwf	243,w,c
  4902   002380  6ED9               	movwf	fsr2l,c
  4903   002382  0E00               	movlw	high _lat_registers
  4904   002384  20F4               	addwfc	prodh,w,c
  4905   002386  6EDA               	movwf	fsr2h,c
  4906   002388  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+3
  4907   00238C  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+4
  4908   002390  C008  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4909   002394  C009  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4910   002398  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4911   00239A  12DF               	iorwf	indf2,f,c
  4912                           
  4913                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:                 break;
  4914   00239C  EFE5  F011         	goto	l5719
  4915   0023A0                     l5717:
  4916   0023A0  5004               	movf	gpio_pin_write_logic@logic^0,w,c
  4917   0023A2  6E05               	movwf	??_gpio_pin_write_logic^0,c
  4918   0023A4  6A06               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4919                           
  4920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4921                           ; Switch size 1, requested type "simple"
  4922                           ; Number of cases is 1, Range of values is 0 to 0
  4923                           ; switch strategies available:
  4924                           ; Name         Instructions Cycles
  4925                           ; simple_byte            4     3 (average)
  4926                           ;	Chosen strategy is simple_byte
  4927   0023A6  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4928   0023A8  0A00               	xorlw	0	; case 0
  4929   0023AA  B4D8               	btfsc	status,2,c
  4930   0023AC  EFDA  F011         	goto	l8069
  4931   0023B0  EF6D  F011         	goto	l5709
  4932   0023B4                     l8069:
  4933                           
  4934                           ; Switch size 1, requested type "simple"
  4935                           ; Number of cases is 2, Range of values is 0 to 1
  4936                           ; switch strategies available:
  4937                           ; Name         Instructions Cycles
  4938                           ; simple_byte            7     4 (average)
  4939                           ;	Chosen strategy is simple_byte
  4940   0023B4  5005               	movf	??_gpio_pin_write_logic^0,w,c
  4941   0023B6  0A00               	xorlw	0	; case 0
  4942   0023B8  B4D8               	btfsc	status,2,c
  4943   0023BA  EF71  F011         	goto	l5711
  4944   0023BE  0A01               	xorlw	1	; case 1
  4945   0023C0  B4D8               	btfsc	status,2,c
  4946   0023C2  EFA2  F011         	goto	l5713
  4947   0023C6  EF6D  F011         	goto	l5709
  4948   0023CA                     l5719:
  4949                           
  4950                           ;MCAL_Layer/GPIO/hal_gpio.c: 94:     return ret;
  4951   0023CA  500B               	movf	gpio_pin_write_logic@ret^0,w,c
  4952   0023CC  0012               	return		;funcret
  4953   0023CE                     __end_of_gpio_pin_write_logic:
  4954                           	callstack 0
  4955                           
  4956 ;; *************** function _gpio_pin_direction_intialize *****************
  4957 ;; Defined at:
  4958 ;;		line 28 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  _pin_config     2    1[COMRAM] PTR const struct .
  4961 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), dc_motor_2.dc_motor_pin(2), dc_motor_2(2), 
  4962 ;;		 -> dc_motor_1.dc_motor_pin(2), dc_motor_1(2), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  ret             1    9[COMRAM] unsigned char 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      unsigned char 
  4967 ;; Registers used:
  4968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;Total ram usage:        9 bytes
  4979 ;; Hardware stack levels used: 1
  4980 ;; Hardware stack levels required when called: 2
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_gpio_pin_intialize
  4985 ;;		_button_initialize
  4986 ;;		_keypad_initialize
  4987 ;;		_Interrupt_RBx_Init
  4988 ;;		_Interrupt_INTx_Pin_Init
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text30
  4993   001F06                     __ptext30:
  4994                           	callstack 0
  4995   001F06                     _gpio_pin_direction_intialize:
  4996                           	callstack 25
  4997   001F06                     
  4998                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4999   001F06  0E01               	movlw	1
  5000   001F08  6E0A               	movwf	gpio_pin_direction_intialize@ret^0,c
  5001   001F0A                     
  5002                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  5003   001F0A  5002               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5004   001F0C  1003               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  5005   001F0E  B4D8               	btfsc	status,2,c
  5006   001F10  EF8C  F00F         	goto	u3941
  5007   001F14  EF8E  F00F         	goto	u3940
  5008   001F18                     u3941:
  5009   001F18  EF9F  F00F         	goto	l5783
  5010   001F1C                     u3940:
  5011   001F1C  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5012   001F20  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5013   001F24  30DF               	rrcf	223,w,c
  5014   001F26  32E8               	rrcf	wreg,f,c
  5015   001F28  32E8               	rrcf	wreg,f,c
  5016   001F2A  0B07               	andlw	7
  5017   001F2C  6E04               	movwf	??_gpio_pin_direction_intialize^0,c
  5018   001F2E  0E07               	movlw	7
  5019   001F30  6404               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  5020   001F32  EF9D  F00F         	goto	u3951
  5021   001F36  EF9F  F00F         	goto	u3950
  5022   001F3A                     u3951:
  5023   001F3A  EF02  F010         	goto	l5791
  5024   001F3E                     u3950:
  5025   001F3E                     l5783:
  5026                           
  5027                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret = (Std_ReturnType)0x00;
  5028   001F3E  0E00               	movlw	0
  5029   001F40  6E0A               	movwf	gpio_pin_direction_intialize@ret^0,c
  5030                           
  5031                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:     }
  5032   001F42  EF23  F010         	goto	l5793
  5033   001F46                     l5785:
  5034                           
  5035                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  5036   001F46  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5037   001F4A  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5038   001F4E  30DF               	rrcf	223,w,c
  5039   001F50  32E8               	rrcf	wreg,f,c
  5040   001F52  32E8               	rrcf	wreg,f,c
  5041   001F54  0B07               	andlw	7
  5042   001F56  6E04               	movwf	??_gpio_pin_direction_intialize^0,c
  5043   001F58  0E01               	movlw	1
  5044   001F5A  6E05               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5045   001F5C  2A04               	incf	??_gpio_pin_direction_intialize^0,f,c
  5046   001F5E  EFB3  F00F         	goto	u3964
  5047   001F62                     u3965:
  5048   001F62  90D8               	bcf	status,0,c
  5049   001F64  3605               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5050   001F66                     u3964:
  5051   001F66  2E04               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5052   001F68  EFB1  F00F         	goto	u3965
  5053   001F6C  5005               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5054   001F6E  0AFF               	xorlw	255
  5055   001F70  6E06               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5056   001F72  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5057   001F76  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5058   001F7A  50DF               	movf	223,w,c
  5059   001F7C  0B07               	andlw	7
  5060   001F7E  6E07               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  5061   001F80  5007               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  5062   001F82  0D02               	mullw	2
  5063   001F84  0EE1               	movlw	low _tris_registers
  5064   001F86  24F3               	addwf	243,w,c
  5065   001F88  6ED9               	movwf	fsr2l,c
  5066   001F8A  0E00               	movlw	high _tris_registers
  5067   001F8C  20F4               	addwfc	prodh,w,c
  5068   001F8E  6EDA               	movwf	fsr2h,c
  5069   001F90  CFDE F008          	movff	postinc2,??_gpio_pin_direction_intialize+4
  5070   001F94  CFDD F009          	movff	postdec2,??_gpio_pin_direction_intialize+5
  5071   001F98  C008  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  5072   001F9C  C009  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  5073   001FA0  5006               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5074   001FA2  16DF               	andwf	indf2,f,c
  5075                           
  5076                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  5077   001FA4  EF23  F010         	goto	l5793
  5078   001FA8                     l5787:
  5079                           
  5080                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  5081   001FA8  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5082   001FAC  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5083   001FB0  30DF               	rrcf	223,w,c
  5084   001FB2  32E8               	rrcf	wreg,f,c
  5085   001FB4  32E8               	rrcf	wreg,f,c
  5086   001FB6  0B07               	andlw	7
  5087   001FB8  6E04               	movwf	??_gpio_pin_direction_intialize^0,c
  5088   001FBA  0E01               	movlw	1
  5089   001FBC  6E05               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5090   001FBE  2A04               	incf	??_gpio_pin_direction_intialize^0,f,c
  5091   001FC0  EFE4  F00F         	goto	u3974
  5092   001FC4                     u3975:
  5093   001FC4  90D8               	bcf	status,0,c
  5094   001FC6  3605               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5095   001FC8                     u3974:
  5096   001FC8  2E04               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5097   001FCA  EFE2  F00F         	goto	u3975
  5098   001FCE  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5099   001FD2  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5100   001FD6  50DF               	movf	223,w,c
  5101   001FD8  0B07               	andlw	7
  5102   001FDA  6E06               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5103   001FDC  5006               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5104   001FDE  0D02               	mullw	2
  5105   001FE0  0EE1               	movlw	low _tris_registers
  5106   001FE2  24F3               	addwf	243,w,c
  5107   001FE4  6ED9               	movwf	fsr2l,c
  5108   001FE6  0E00               	movlw	high _tris_registers
  5109   001FE8  20F4               	addwfc	prodh,w,c
  5110   001FEA  6EDA               	movwf	fsr2h,c
  5111   001FEC  CFDE F007          	movff	postinc2,??_gpio_pin_direction_intialize+3
  5112   001FF0  CFDD F008          	movff	postdec2,??_gpio_pin_direction_intialize+4
  5113   001FF4  C007  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  5114   001FF8  C008  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  5115   001FFC  5005               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5116   001FFE  12DF               	iorwf	indf2,f,c
  5117                           
  5118                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:                 break;
  5119   002000  EF23  F010         	goto	l5793
  5120   002004                     l5791:
  5121   002004  C002  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5122   002008  C003  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5123   00200C  BCDF               	btfsc	indf2,6,c
  5124   00200E  EF0B  F010         	goto	u3981
  5125   002012  EF0E  F010         	goto	u3980
  5126   002016                     u3981:
  5127   002016  0E01               	movlw	1
  5128   002018  EF0F  F010         	goto	u3990
  5129   00201C                     u3980:
  5130   00201C  0E00               	movlw	0
  5131   00201E                     u3990:
  5132   00201E  6E04               	movwf	??_gpio_pin_direction_intialize^0,c
  5133   002020  6A05               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  5134                           
  5135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5136                           ; Switch size 1, requested type "simple"
  5137                           ; Number of cases is 1, Range of values is 0 to 0
  5138                           ; switch strategies available:
  5139                           ; Name         Instructions Cycles
  5140                           ; simple_byte            4     3 (average)
  5141                           ;	Chosen strategy is simple_byte
  5142   002022  5005               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5143   002024  0A00               	xorlw	0	; case 0
  5144   002026  B4D8               	btfsc	status,2,c
  5145   002028  EF18  F010         	goto	l8071
  5146   00202C  EF9F  F00F         	goto	l5783
  5147   002030                     l8071:
  5148                           
  5149                           ; Switch size 1, requested type "simple"
  5150                           ; Number of cases is 2, Range of values is 0 to 1
  5151                           ; switch strategies available:
  5152                           ; Name         Instructions Cycles
  5153                           ; simple_byte            7     4 (average)
  5154                           ;	Chosen strategy is simple_byte
  5155   002030  5004               	movf	??_gpio_pin_direction_intialize^0,w,c
  5156   002032  0A00               	xorlw	0	; case 0
  5157   002034  B4D8               	btfsc	status,2,c
  5158   002036  EFA3  F00F         	goto	l5785
  5159   00203A  0A01               	xorlw	1	; case 1
  5160   00203C  B4D8               	btfsc	status,2,c
  5161   00203E  EFD4  F00F         	goto	l5787
  5162   002042  EF9F  F00F         	goto	l5783
  5163   002046                     l5793:
  5164                           
  5165                           ;MCAL_Layer/GPIO/hal_gpio.c: 44:     return ret;
  5166   002046  500A               	movf	gpio_pin_direction_intialize@ret^0,w,c
  5167   002048  0012               	return		;funcret
  5168   00204A                     __end_of_gpio_pin_direction_intialize:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _ADC_Init *****************
  5172 ;; Defined at:
  5173 ;;		line 29 in file "MCAL_Layer/ADC/hal_adc.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  _adc            2    4[COMRAM] PTR const struct .
  5176 ;;		 -> adc_1(7), 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  ret             1    7[COMRAM] unsigned char 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  1    wreg      unsigned char 
  5181 ;; Registers used:
  5182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;Total ram usage:        4 bytes
  5193 ;; Hardware stack levels used: 1
  5194 ;; Hardware stack levels required when called: 3
  5195 ;; This function calls:
  5196 ;;		_adc_input_channel_port_configure
  5197 ;;		_configure_voltage_reference
  5198 ;;		_select_result_format
  5199 ;; This function is called by:
  5200 ;;		_application_intialize
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text31
  5205   0027FE                     __ptext31:
  5206                           	callstack 0
  5207   0027FE                     _ADC_Init:
  5208                           	callstack 26
  5209   0027FE                     
  5210                           ;MCAL_Layer/ADC/hal_adc.c: 31:     if(((void*)0) == _adc){
  5211   0027FE  5005               	movf	ADC_Init@_adc^0,w,c
  5212   002800  1006               	iorwf	(ADC_Init@_adc+1)^0,w,c
  5213   002802  A4D8               	btfss	status,2,c
  5214   002804  EF06  F014         	goto	u4251
  5215   002808  EF08  F014         	goto	u4250
  5216   00280C                     u4251:
  5217   00280C  EF0C  F014         	goto	l360
  5218   002810                     u4250:
  5219   002810                     
  5220                           ;MCAL_Layer/ADC/hal_adc.c: 32:         ret = (Std_ReturnType)0x00;
  5221   002810  0E00               	movlw	0
  5222   002812  6E08               	movwf	ADC_Init@ret^0,c
  5223                           
  5224                           ;MCAL_Layer/ADC/hal_adc.c: 33:     }
  5225   002814  EF5D  F014         	goto	l6153
  5226   002818                     l360:
  5227                           
  5228                           ;MCAL_Layer/ADC/hal_adc.c: 36:         (ADCON0bits.ADON = 0);
  5229   002818  90C2               	bcf	194,0,c	;volatile
  5230   00281A                     
  5231                           ;MCAL_Layer/ADC/hal_adc.c: 38:         ADCON2bits.ACQT = _adc->acquisition_time;
  5232   00281A  EE20 F003          	lfsr	2,3
  5233   00281E  5005               	movf	ADC_Init@_adc^0,w,c
  5234   002820  26D9               	addwf	fsr2l,f,c
  5235   002822  5006               	movf	(ADC_Init@_adc+1)^0,w,c
  5236   002824  22DA               	addwfc	fsr2h,f,c
  5237   002826  50DF               	movf	indf2,w,c
  5238   002828  6E07               	movwf	??_ADC_Init^0,c
  5239   00282A  4607               	rlncf	??_ADC_Init^0,f,c
  5240   00282C  4607               	rlncf	??_ADC_Init^0,f,c
  5241   00282E  4607               	rlncf	??_ADC_Init^0,f,c
  5242   002830  50C0               	movf	192,w,c	;volatile
  5243   002832  1807               	xorwf	??_ADC_Init^0,w,c
  5244   002834  0BC7               	andlw	-57
  5245   002836  1807               	xorwf	??_ADC_Init^0,w,c
  5246   002838  6EC0               	movwf	192,c	;volatile
  5247                           
  5248                           ;MCAL_Layer/ADC/hal_adc.c: 40:         ADCON2bits.ADCS = _adc->conversion_clock;
  5249   00283A  EE20 F004          	lfsr	2,4
  5250   00283E  5005               	movf	ADC_Init@_adc^0,w,c
  5251   002840  26D9               	addwf	fsr2l,f,c
  5252   002842  5006               	movf	(ADC_Init@_adc+1)^0,w,c
  5253   002844  22DA               	addwfc	fsr2h,f,c
  5254   002846  50DF               	movf	indf2,w,c
  5255   002848  6E07               	movwf	??_ADC_Init^0,c
  5256   00284A  50C0               	movf	192,w,c	;volatile
  5257   00284C  1807               	xorwf	??_ADC_Init^0,w,c
  5258   00284E  0BF8               	andlw	-8
  5259   002850  1807               	xorwf	??_ADC_Init^0,w,c
  5260   002852  6EC0               	movwf	192,c	;volatile
  5261                           
  5262                           ;MCAL_Layer/ADC/hal_adc.c: 42:         ADCON0bits.CHS = _adc->adc_channel;
  5263   002854  EE20 F005          	lfsr	2,5
  5264   002858  5005               	movf	ADC_Init@_adc^0,w,c
  5265   00285A  26D9               	addwf	fsr2l,f,c
  5266   00285C  5006               	movf	(ADC_Init@_adc+1)^0,w,c
  5267   00285E  22DA               	addwfc	fsr2h,f,c
  5268   002860  50DF               	movf	indf2,w,c
  5269   002862  6E07               	movwf	??_ADC_Init^0,c
  5270   002864  4607               	rlncf	??_ADC_Init^0,f,c
  5271   002866  4607               	rlncf	??_ADC_Init^0,f,c
  5272   002868  50C2               	movf	194,w,c	;volatile
  5273   00286A  1807               	xorwf	??_ADC_Init^0,w,c
  5274   00286C  0BC3               	andlw	-61
  5275   00286E  1807               	xorwf	??_ADC_Init^0,w,c
  5276   002870  6EC2               	movwf	194,c	;volatile
  5277   002872                     
  5278                           ;MCAL_Layer/ADC/hal_adc.c: 43:         adc_input_channel_port_configure(_adc->adc_channe
      +                          l);
  5279   002872  EE20 F005          	lfsr	2,5
  5280   002876  5005               	movf	ADC_Init@_adc^0,w,c
  5281   002878  26D9               	addwf	fsr2l,f,c
  5282   00287A  5006               	movf	(ADC_Init@_adc+1)^0,w,c
  5283   00287C  22DA               	addwfc	fsr2h,f,c
  5284   00287E  50DF               	movf	indf2,w,c
  5285   002880  EC6A  F012         	call	_adc_input_channel_port_configure
  5286   002884                     
  5287                           ;MCAL_Layer/ADC/hal_adc.c: 46:         (INTCONbits.GIE = 1);
  5288   002884  8EF2               	bsf	242,7,c	;volatile
  5289   002886                     
  5290                           ;MCAL_Layer/ADC/hal_adc.c: 47:         (INTCONbits.PEIE = 1);
  5291   002886  8CF2               	bsf	242,6,c	;volatile
  5292   002888                     
  5293                           ;MCAL_Layer/ADC/hal_adc.c: 48:         (PIE1bits.ADIE = 1);
  5294   002888  8C9D               	bsf	157,6,c	;volatile
  5295   00288A                     
  5296                           ;MCAL_Layer/ADC/hal_adc.c: 49:         (PIR1bits.ADIF = 0);
  5297   00288A  9C9E               	bcf	158,6,c	;volatile
  5298   00288C                     
  5299                           ;MCAL_Layer/ADC/hal_adc.c: 61:         ADC_InterruptHandler = _adc->ADC_InterruptHandler
      +                          ;
  5300   00288C  C005  FFD9         	movff	ADC_Init@_adc,fsr2l
  5301   002890  C006  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  5302   002894  CFDE F0BD          	movff	postinc2,_ADC_InterruptHandler
  5303   002898  CFDD F0BE          	movff	postdec2,_ADC_InterruptHandler+1
  5304   00289C                     
  5305                           ;MCAL_Layer/ADC/hal_adc.c: 64:         select_result_format(_adc);
  5306   00289C  C005  F002         	movff	ADC_Init@_adc,select_result_format@_adc
  5307   0028A0  C006  F003         	movff	ADC_Init@_adc+1,select_result_format@_adc+1
  5308   0028A4  EC38  F019         	call	_select_result_format	;wreg free
  5309   0028A8                     
  5310                           ;MCAL_Layer/ADC/hal_adc.c: 66:         configure_voltage_reference(_adc);
  5311   0028A8  C005  F002         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  5312   0028AC  C006  F003         	movff	ADC_Init@_adc+1,configure_voltage_reference@_adc+1
  5313   0028B0  ECAB  F018         	call	_configure_voltage_reference	;wreg free
  5314   0028B4                     
  5315                           ;MCAL_Layer/ADC/hal_adc.c: 68:         (ADCON0bits.ADON = 1);
  5316   0028B4  80C2               	bsf	194,0,c	;volatile
  5317   0028B6                     
  5318                           ;MCAL_Layer/ADC/hal_adc.c: 69:         ret = (Std_ReturnType)0x01;
  5319   0028B6  0E01               	movlw	1
  5320   0028B8  6E08               	movwf	ADC_Init@ret^0,c
  5321   0028BA                     l6153:
  5322                           
  5323                           ;MCAL_Layer/ADC/hal_adc.c: 71:     return ret;
  5324   0028BA  5008               	movf	ADC_Init@ret^0,w,c
  5325   0028BC  0012               	return		;funcret
  5326   0028BE                     __end_of_ADC_Init:
  5327                           	callstack 0
  5328                           
  5329 ;; *************** function _select_result_format *****************
  5330 ;; Defined at:
  5331 ;;		line 274 in file "MCAL_Layer/ADC/hal_adc.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  _adc            2    1[COMRAM] PTR const struct .
  5334 ;;		 -> adc_1(7), 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;		None
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      void 
  5339 ;; Registers used:
  5340 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;Total ram usage:        2 bytes
  5351 ;; Hardware stack levels used: 1
  5352 ;; Hardware stack levels required when called: 2
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_ADC_Init
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text32
  5361   003270                     __ptext32:
  5362                           	callstack 0
  5363   003270                     _select_result_format:
  5364                           	callstack 26
  5365   003270                     
  5366                           ;MCAL_Layer/ADC/hal_adc.c: 275:     if(0x01U == _adc->result_format){
  5367   003270  EE20 F006          	lfsr	2,6
  5368   003274  5002               	movf	select_result_format@_adc^0,w,c
  5369   003276  26D9               	addwf	fsr2l,f,c
  5370   003278  5003               	movf	(select_result_format@_adc+1)^0,w,c
  5371   00327A  22DA               	addwfc	fsr2h,f,c
  5372   00327C  A2DF               	btfss	indf2,1,c
  5373   00327E  EF43  F019         	goto	u4061
  5374   003282  EF45  F019         	goto	u4060
  5375   003286                     u4061:
  5376   003286  EF48  F019         	goto	l5917
  5377   00328A                     u4060:
  5378   00328A                     
  5379                           ;MCAL_Layer/ADC/hal_adc.c: 276:         (ADCON2bits.ADFM = 1);
  5380   00328A  8EC0               	bsf	192,7,c	;volatile
  5381                           
  5382                           ;MCAL_Layer/ADC/hal_adc.c: 277:     }
  5383   00328C  EF59  F019         	goto	l436
  5384   003290                     l5917:
  5385   003290  EE20 F006          	lfsr	2,6
  5386   003294  5002               	movf	select_result_format@_adc^0,w,c
  5387   003296  26D9               	addwf	fsr2l,f,c
  5388   003298  5003               	movf	(select_result_format@_adc+1)^0,w,c
  5389   00329A  22DA               	addwfc	fsr2h,f,c
  5390   00329C  B2DF               	btfsc	indf2,1,c
  5391   00329E  EF53  F019         	goto	u4071
  5392   0032A2  EF55  F019         	goto	u4070
  5393   0032A6                     u4071:
  5394   0032A6  EF58  F019         	goto	l434
  5395   0032AA                     u4070:
  5396   0032AA                     
  5397                           ;MCAL_Layer/ADC/hal_adc.c: 279:         (ADCON2bits.ADFM = 0);
  5398   0032AA  9EC0               	bcf	192,7,c	;volatile
  5399                           
  5400                           ;MCAL_Layer/ADC/hal_adc.c: 280:     }
  5401   0032AC  EF59  F019         	goto	l436
  5402   0032B0                     l434:
  5403                           
  5404                           ;MCAL_Layer/ADC/hal_adc.c: 282:         (ADCON2bits.ADFM = 1);
  5405   0032B0  8EC0               	bsf	192,7,c	;volatile
  5406   0032B2                     l436:
  5407   0032B2  0012               	return		;funcret
  5408   0032B4                     __end_of_select_result_format:
  5409                           	callstack 0
  5410                           
  5411 ;; *************** function _configure_voltage_reference *****************
  5412 ;; Defined at:
  5413 ;;		line 286 in file "MCAL_Layer/ADC/hal_adc.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  _adc            2    1[COMRAM] PTR const struct .
  5416 ;;		 -> adc_1(7), 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      void 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;Total ram usage:        2 bytes
  5433 ;; Hardware stack levels used: 1
  5434 ;; Hardware stack levels required when called: 2
  5435 ;; This function calls:
  5436 ;;		Nothing
  5437 ;; This function is called by:
  5438 ;;		_ADC_Init
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text33
  5443   003156                     __ptext33:
  5444                           	callstack 0
  5445   003156                     _configure_voltage_reference:
  5446                           	callstack 26
  5447   003156                     
  5448                           ;MCAL_Layer/ADC/hal_adc.c: 287:     if(0x01U == _adc->voltage_reference){
  5449   003156  EE20 F006          	lfsr	2,6
  5450   00315A  5002               	movf	configure_voltage_reference@_adc^0,w,c
  5451   00315C  26D9               	addwf	fsr2l,f,c
  5452   00315E  5003               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  5453   003160  22DA               	addwfc	fsr2h,f,c
  5454   003162  A0DF               	btfss	indf2,0,c
  5455   003164  EFB6  F018         	goto	u4081
  5456   003168  EFB8  F018         	goto	u4080
  5457   00316C                     u4081:
  5458   00316C  EFBC  F018         	goto	l5923
  5459   003170                     u4080:
  5460   003170  8AC1               	bsf	193,5,c	;volatile
  5461   003172  88C1               	bsf	193,4,c	;volatile
  5462   003174  EFCF  F018         	goto	l449
  5463   003178                     l5923:
  5464   003178  EE20 F006          	lfsr	2,6
  5465   00317C  5002               	movf	configure_voltage_reference@_adc^0,w,c
  5466   00317E  26D9               	addwf	fsr2l,f,c
  5467   003180  5003               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  5468   003182  22DA               	addwfc	fsr2h,f,c
  5469   003184  B0DF               	btfsc	indf2,0,c
  5470   003186  EFC7  F018         	goto	u4091
  5471   00318A  EFC9  F018         	goto	u4090
  5472   00318E                     u4091:
  5473   00318E  EFCD  F018         	goto	l447
  5474   003192                     u4090:
  5475   003192  9AC1               	bcf	193,5,c	;volatile
  5476   003194  98C1               	bcf	193,4,c	;volatile
  5477   003196  EFCF  F018         	goto	l449
  5478   00319A                     l447:
  5479   00319A  9AC1               	bcf	193,5,c	;volatile
  5480   00319C  98C1               	bcf	193,4,c	;volatile
  5481   00319E                     l449:
  5482   00319E  0012               	return		;funcret
  5483   0031A0                     __end_of_configure_voltage_reference:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function ___xxtofl *****************
  5487 ;; Defined at:
  5488 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  sign            1    wreg     unsigned char 
  5491 ;;  val             4    1[COMRAM] long 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  sign            1    9[COMRAM] unsigned char 
  5494 ;;  arg             4   11[COMRAM] unsigned long 
  5495 ;;  exp             1   10[COMRAM] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  4    1[COMRAM] unsigned char 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;Total ram usage:       14 bytes
  5510 ;; Hardware stack levels used: 1
  5511 ;; Hardware stack levels required when called: 2
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_main
  5516 ;;		_CCP_PWM_Set_Duty
  5517 ;;		_CCP_PWM_Mode_Config
  5518 ;;		_i2c_clock_gen_for_master_configuration
  5519 ;;		_EUSART_Baud_Rate_Calculation
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text34
  5524   001A48                     __ptext34:
  5525                           	callstack 0
  5526   001A48                     ___xxtofl:
  5527                           	callstack 28
  5528                           
  5529                           ;incstack = 0
  5530                           ;___xxtofl@sign stored from wreg
  5531   001A48  6E0A               	movwf	___xxtofl@sign^0,c
  5532   001A4A  500A               	movf	___xxtofl@sign^0,w,c
  5533   001A4C  B4D8               	btfsc	status,2,c
  5534   001A4E  EF2B  F00D         	goto	u4921
  5535   001A52  EF2D  F00D         	goto	u4920
  5536   001A56                     u4921:
  5537   001A56  EF4F  F00D         	goto	l2306
  5538   001A5A                     u4920:
  5539   001A5A  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  5540   001A5C  EF34  F00D         	goto	u4930
  5541   001A60  EF32  F00D         	goto	u4931
  5542   001A64                     u4931:
  5543   001A64  EF4F  F00D         	goto	l2306
  5544   001A68                     u4930:
  5545   001A68  C002  F006         	movff	___xxtofl@val,??___xxtofl
  5546   001A6C  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
  5547   001A70  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
  5548   001A74  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
  5549   001A78  1E06               	comf	??___xxtofl^0,f,c
  5550   001A7A  1E07               	comf	(??___xxtofl+1)^0,f,c
  5551   001A7C  1E08               	comf	(??___xxtofl+2)^0,f,c
  5552   001A7E  1E09               	comf	(??___xxtofl+3)^0,f,c
  5553   001A80  2A06               	incf	??___xxtofl^0,f,c
  5554   001A82  0E00               	movlw	0
  5555   001A84  2207               	addwfc	(??___xxtofl+1)^0,f,c
  5556   001A86  2208               	addwfc	(??___xxtofl+2)^0,f,c
  5557   001A88  2209               	addwfc	(??___xxtofl+3)^0,f,c
  5558   001A8A  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
  5559   001A8E  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
  5560   001A92  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
  5561   001A96  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
  5562   001A9A  EF57  F00D         	goto	l6747
  5563   001A9E                     l2306:
  5564   001A9E  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
  5565   001AA2  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5566   001AA6  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5567   001AAA  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5568   001AAE                     l6747:
  5569   001AAE  5002               	movf	___xxtofl@val^0,w,c
  5570   001AB0  1003               	iorwf	(___xxtofl@val+1)^0,w,c
  5571   001AB2  1004               	iorwf	(___xxtofl@val+2)^0,w,c
  5572   001AB4  1005               	iorwf	(___xxtofl@val+3)^0,w,c
  5573   001AB6  A4D8               	btfss	status,2,c
  5574   001AB8  EF60  F00D         	goto	u4941
  5575   001ABC  EF62  F00D         	goto	u4940
  5576   001AC0                     u4941:
  5577   001AC0  EF6C  F00D         	goto	l6753
  5578   001AC4                     u4940:
  5579   001AC4  0E00               	movlw	0
  5580   001AC6  6E02               	movwf	?___xxtofl^0,c
  5581   001AC8  0E00               	movlw	0
  5582   001ACA  6E03               	movwf	(?___xxtofl+1)^0,c
  5583   001ACC  0E00               	movlw	0
  5584   001ACE  6E04               	movwf	(?___xxtofl+2)^0,c
  5585   001AD0  0E00               	movlw	0
  5586   001AD2  6E05               	movwf	(?___xxtofl+3)^0,c
  5587   001AD4  EFFD  F00D         	goto	l2309
  5588   001AD8                     l6753:
  5589   001AD8  0E96               	movlw	150
  5590   001ADA  6E0B               	movwf	___xxtofl@exp^0,c
  5591   001ADC  EF76  F00D         	goto	l6757
  5592   001AE0                     l6755:
  5593   001AE0  2A0B               	incf	___xxtofl@exp^0,f,c
  5594   001AE2  90D8               	bcf	status,0,c
  5595   001AE4  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5596   001AE6  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5597   001AE8  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5598   001AEA  320C               	rrcf	___xxtofl@arg^0,f,c
  5599   001AEC                     l6757:
  5600   001AEC  0E00               	movlw	0
  5601   001AEE  140C               	andwf	___xxtofl@arg^0,w,c
  5602   001AF0  6E06               	movwf	??___xxtofl^0,c
  5603   001AF2  0E00               	movlw	0
  5604   001AF4  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  5605   001AF6  6E07               	movwf	(??___xxtofl+1)^0,c
  5606   001AF8  0E00               	movlw	0
  5607   001AFA  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  5608   001AFC  6E08               	movwf	(??___xxtofl+2)^0,c
  5609   001AFE  0EFE               	movlw	254
  5610   001B00  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  5611   001B02  6E09               	movwf	(??___xxtofl+3)^0,c
  5612   001B04  5006               	movf	??___xxtofl^0,w,c
  5613   001B06  1007               	iorwf	(??___xxtofl+1)^0,w,c
  5614   001B08  1008               	iorwf	(??___xxtofl+2)^0,w,c
  5615   001B0A  1009               	iorwf	(??___xxtofl+3)^0,w,c
  5616   001B0C  A4D8               	btfss	status,2,c
  5617   001B0E  EF8B  F00D         	goto	u4951
  5618   001B12  EF8D  F00D         	goto	u4950
  5619   001B16                     u4951:
  5620   001B16  EF70  F00D         	goto	l6755
  5621   001B1A                     u4950:
  5622   001B1A  EF9B  F00D         	goto	l2313
  5623   001B1E                     l6759:
  5624   001B1E  2A0B               	incf	___xxtofl@exp^0,f,c
  5625   001B20  0E01               	movlw	1
  5626   001B22  260C               	addwf	___xxtofl@arg^0,f,c
  5627   001B24  0E00               	movlw	0
  5628   001B26  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
  5629   001B28  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
  5630   001B2A  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
  5631   001B2C  90D8               	bcf	status,0,c
  5632   001B2E  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5633   001B30  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5634   001B32  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5635   001B34  320C               	rrcf	___xxtofl@arg^0,f,c
  5636   001B36                     l2313:
  5637   001B36  0E00               	movlw	0
  5638   001B38  140C               	andwf	___xxtofl@arg^0,w,c
  5639   001B3A  6E06               	movwf	??___xxtofl^0,c
  5640   001B3C  0E00               	movlw	0
  5641   001B3E  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  5642   001B40  6E07               	movwf	(??___xxtofl+1)^0,c
  5643   001B42  0E00               	movlw	0
  5644   001B44  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  5645   001B46  6E08               	movwf	(??___xxtofl+2)^0,c
  5646   001B48  0EFF               	movlw	255
  5647   001B4A  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  5648   001B4C  6E09               	movwf	(??___xxtofl+3)^0,c
  5649   001B4E  5006               	movf	??___xxtofl^0,w,c
  5650   001B50  1007               	iorwf	(??___xxtofl+1)^0,w,c
  5651   001B52  1008               	iorwf	(??___xxtofl+2)^0,w,c
  5652   001B54  1009               	iorwf	(??___xxtofl+3)^0,w,c
  5653   001B56  A4D8               	btfss	status,2,c
  5654   001B58  EFB0  F00D         	goto	u4961
  5655   001B5C  EFB2  F00D         	goto	u4960
  5656   001B60                     u4961:
  5657   001B60  EF8F  F00D         	goto	l6759
  5658   001B64                     u4960:
  5659   001B64  EFBA  F00D         	goto	l6767
  5660   001B68                     l6765:
  5661   001B68  060B               	decf	___xxtofl@exp^0,f,c
  5662   001B6A  90D8               	bcf	status,0,c
  5663   001B6C  360C               	rlcf	___xxtofl@arg^0,f,c
  5664   001B6E  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
  5665   001B70  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
  5666   001B72  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
  5667   001B74                     l6767:
  5668   001B74  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
  5669   001B76  EFBF  F00D         	goto	u4971
  5670   001B7A  EFC1  F00D         	goto	u4970
  5671   001B7E                     u4971:
  5672   001B7E  EFC9  F00D         	goto	l2320
  5673   001B82                     u4970:
  5674   001B82  0E02               	movlw	2
  5675   001B84  600B               	cpfslt	___xxtofl@exp^0,c
  5676   001B86  EFC7  F00D         	goto	u4981
  5677   001B8A  EFC9  F00D         	goto	u4980
  5678   001B8E                     u4981:
  5679   001B8E  EFB4  F00D         	goto	l6765
  5680   001B92                     u4980:
  5681   001B92                     l2320:
  5682   001B92  B00B               	btfsc	___xxtofl@exp^0,0,c
  5683   001B94  EFCE  F00D         	goto	u4991
  5684   001B98  EFD0  F00D         	goto	u4990
  5685   001B9C                     u4991:
  5686   001B9C  EFD1  F00D         	goto	l6773
  5687   001BA0                     u4990:
  5688   001BA0  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
  5689   001BA2                     l6773:
  5690   001BA2  90D8               	bcf	status,0,c
  5691   001BA4  320B               	rrcf	___xxtofl@exp^0,f,c
  5692   001BA6  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
  5693   001BAA  6A07               	clrf	(??___xxtofl+1)^0,c
  5694   001BAC  6A08               	clrf	(??___xxtofl+2)^0,c
  5695   001BAE  6A09               	clrf	(??___xxtofl+3)^0,c
  5696   001BB0  C006  F009         	movff	??___xxtofl,??___xxtofl+3
  5697   001BB4  6A08               	clrf	(??___xxtofl+2)^0,c
  5698   001BB6  6A07               	clrf	(??___xxtofl+1)^0,c
  5699   001BB8  6A06               	clrf	??___xxtofl^0,c
  5700   001BBA  5006               	movf	??___xxtofl^0,w,c
  5701   001BBC  120C               	iorwf	___xxtofl@arg^0,f,c
  5702   001BBE  5007               	movf	(??___xxtofl+1)^0,w,c
  5703   001BC0  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
  5704   001BC2  5008               	movf	(??___xxtofl+2)^0,w,c
  5705   001BC4  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
  5706   001BC6  5009               	movf	(??___xxtofl+3)^0,w,c
  5707   001BC8  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
  5708   001BCA  500A               	movf	___xxtofl@sign^0,w,c
  5709   001BCC  B4D8               	btfsc	status,2,c
  5710   001BCE  EFEB  F00D         	goto	u5001
  5711   001BD2  EFED  F00D         	goto	u5000
  5712   001BD6                     u5001:
  5713   001BD6  EFF5  F00D         	goto	l6783
  5714   001BDA                     u5000:
  5715   001BDA  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  5716   001BDC  EFF4  F00D         	goto	u5010
  5717   001BE0  EFF2  F00D         	goto	u5011
  5718   001BE4                     u5011:
  5719   001BE4  EFF5  F00D         	goto	l6783
  5720   001BE8                     u5010:
  5721   001BE8  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
  5722   001BEA                     l6783:
  5723   001BEA  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
  5724   001BEE  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
  5725   001BF2  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
  5726   001BF6  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
  5727   001BFA                     l2309:
  5728   001BFA  0012               	return		;funcret
  5729   001BFC                     __end_of___xxtofl:
  5730                           	callstack 0
  5731                           
  5732 ;; *************** function ___lwdiv *****************
  5733 ;; Defined at:
  5734 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  dividend        2    1[COMRAM] unsigned int 
  5737 ;;  divisor         2    3[COMRAM] unsigned int 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  quotient        2    5[COMRAM] unsigned int 
  5740 ;;  counter         1    7[COMRAM] unsigned char 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  2    1[COMRAM] unsigned int 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;Total ram usage:        7 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; Hardware stack levels required when called: 2
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_main
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text35
  5765   002D62                     __ptext35:
  5766                           	callstack 0
  5767   002D62                     ___lwdiv:
  5768                           	callstack 28
  5769   002D62  0E00               	movlw	0
  5770   002D64  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  5771   002D66  0E00               	movlw	0
  5772   002D68  6E06               	movwf	___lwdiv@quotient^0,c
  5773   002D6A  5004               	movf	___lwdiv@divisor^0,w,c
  5774   002D6C  1005               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5775   002D6E  B4D8               	btfsc	status,2,c
  5776   002D70  EFBC  F016         	goto	u4891
  5777   002D74  EFBE  F016         	goto	u4890
  5778   002D78                     u4891:
  5779   002D78  EFE6  F016         	goto	l2142
  5780   002D7C                     u4890:
  5781   002D7C  0E01               	movlw	1
  5782   002D7E  6E08               	movwf	___lwdiv@counter^0,c
  5783   002D80  EFC6  F016         	goto	l6727
  5784   002D84                     l6725:
  5785   002D84  90D8               	bcf	status,0,c
  5786   002D86  3604               	rlcf	___lwdiv@divisor^0,f,c
  5787   002D88  3605               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5788   002D8A  2A08               	incf	___lwdiv@counter^0,f,c
  5789   002D8C                     l6727:
  5790   002D8C  AE05               	btfss	(___lwdiv@divisor+1)^0,7,c
  5791   002D8E  EFCB  F016         	goto	u4901
  5792   002D92  EFCD  F016         	goto	u4900
  5793   002D96                     u4901:
  5794   002D96  EFC2  F016         	goto	l6725
  5795   002D9A                     u4900:
  5796   002D9A                     l6729:
  5797   002D9A  90D8               	bcf	status,0,c
  5798   002D9C  3606               	rlcf	___lwdiv@quotient^0,f,c
  5799   002D9E  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5800   002DA0  5004               	movf	___lwdiv@divisor^0,w,c
  5801   002DA2  5C02               	subwf	___lwdiv@dividend^0,w,c
  5802   002DA4  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  5803   002DA6  5803               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5804   002DA8  A0D8               	btfss	status,0,c
  5805   002DAA  EFD9  F016         	goto	u4911
  5806   002DAE  EFDB  F016         	goto	u4910
  5807   002DB2                     u4911:
  5808   002DB2  EFE0  F016         	goto	l6737
  5809   002DB6                     u4910:
  5810   002DB6  5004               	movf	___lwdiv@divisor^0,w,c
  5811   002DB8  5E02               	subwf	___lwdiv@dividend^0,f,c
  5812   002DBA  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  5813   002DBC  5A03               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5814   002DBE  8006               	bsf	___lwdiv@quotient^0,0,c
  5815   002DC0                     l6737:
  5816   002DC0  90D8               	bcf	status,0,c
  5817   002DC2  3205               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5818   002DC4  3204               	rrcf	___lwdiv@divisor^0,f,c
  5819   002DC6  2E08               	decfsz	___lwdiv@counter^0,f,c
  5820   002DC8  EFCD  F016         	goto	l6729
  5821   002DCC                     l2142:
  5822   002DCC  C006  F002         	movff	___lwdiv@quotient,?___lwdiv
  5823   002DD0  C007  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5824   002DD4  0012               	return		;funcret
  5825   002DD6                     __end_of___lwdiv:
  5826                           	callstack 0
  5827                           
  5828 ;; *************** function ___fltol *****************
  5829 ;; Defined at:
  5830 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;  f1              4   40[COMRAM] unsigned int 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  exp1            1   49[COMRAM] unsigned char 
  5835 ;;  sign1           1   48[COMRAM] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  4   40[COMRAM] long 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;Total ram usage:       10 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 2
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_main
  5856 ;;		_CCP_PWM_Set_Duty
  5857 ;;		_CCP_PWM_Mode_Config
  5858 ;;		_i2c_clock_gen_for_master_configuration
  5859 ;;		_EUSART_Baud_Rate_Calculation
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text36
  5864   0023CE                     __ptext36:
  5865                           	callstack 0
  5866   0023CE                     ___fltol:
  5867                           	callstack 28
  5868   0023CE  342B               	rlcf	(___fltol@f1+2)^0,w,c
  5869   0023D0  342C               	rlcf	(___fltol@f1+3)^0,w,c
  5870   0023D2  6E32               	movwf	___fltol@exp1^0,c
  5871   0023D4  5032               	movf	___fltol@exp1^0,w,c
  5872   0023D6  A4D8               	btfss	status,2,c
  5873   0023D8  EFF0  F011         	goto	u4821
  5874   0023DC  EFF2  F011         	goto	u4820
  5875   0023E0                     u4821:
  5876   0023E0  EFFC  F011         	goto	l6681
  5877   0023E4                     u4820:
  5878   0023E4                     l6677:
  5879   0023E4  0E00               	movlw	0
  5880   0023E6  6E29               	movwf	?___fltol^0,c
  5881   0023E8  0E00               	movlw	0
  5882   0023EA  6E2A               	movwf	(?___fltol+1)^0,c
  5883   0023EC  0E00               	movlw	0
  5884   0023EE  6E2B               	movwf	(?___fltol+2)^0,c
  5885   0023F0  0E00               	movlw	0
  5886   0023F2  6E2C               	movwf	(?___fltol+3)^0,c
  5887   0023F4  EF69  F012         	goto	l1948
  5888   0023F8                     l6681:
  5889   0023F8  C029  F02D         	movff	___fltol@f1,??___fltol
  5890   0023FC  C02A  F02E         	movff	___fltol@f1+1,??___fltol+1
  5891   002400  C02B  F02F         	movff	___fltol@f1+2,??___fltol+2
  5892   002404  C02C  F030         	movff	___fltol@f1+3,??___fltol+3
  5893   002408  0E20               	movlw	32
  5894   00240A  EF0C  F012         	goto	u4830
  5895   00240E                     u4835:
  5896   00240E  90D8               	bcf	status,0,c
  5897   002410  3230               	rrcf	(??___fltol+3)^0,f,c
  5898   002412  322F               	rrcf	(??___fltol+2)^0,f,c
  5899   002414  322E               	rrcf	(??___fltol+1)^0,f,c
  5900   002416  322D               	rrcf	??___fltol^0,f,c
  5901   002418                     u4830:
  5902   002418  2EE8               	decfsz	wreg,f,c
  5903   00241A  EF07  F012         	goto	u4835
  5904   00241E  502D               	movf	??___fltol^0,w,c
  5905   002420  6E31               	movwf	___fltol@sign1^0,c
  5906   002422  8E2B               	bsf	(___fltol@f1+2)^0,7,c
  5907   002424  0EFF               	movlw	255
  5908   002426  1629               	andwf	___fltol@f1^0,f,c
  5909   002428  0EFF               	movlw	255
  5910   00242A  162A               	andwf	(___fltol@f1+1)^0,f,c
  5911   00242C  0EFF               	movlw	255
  5912   00242E  162B               	andwf	(___fltol@f1+2)^0,f,c
  5913   002430  0E00               	movlw	0
  5914   002432  162C               	andwf	(___fltol@f1+3)^0,f,c
  5915   002434  0E96               	movlw	150
  5916   002436  5E32               	subwf	___fltol@exp1^0,f,c
  5917   002438  BE32               	btfsc	___fltol@exp1^0,7,c
  5918   00243A  EF23  F012         	goto	u4840
  5919   00243E  EF21  F012         	goto	u4841
  5920   002442                     u4841:
  5921   002442  EF39  F012         	goto	l6701
  5922   002446                     u4840:
  5923   002446  5032               	movf	___fltol@exp1^0,w,c
  5924   002448  0A80               	xorlw	128
  5925   00244A  0F97               	addlw	151
  5926   00244C  B0D8               	btfsc	status,0,c
  5927   00244E  EF2B  F012         	goto	u4851
  5928   002452  EF2D  F012         	goto	u4850
  5929   002456                     u4851:
  5930   002456  EF2F  F012         	goto	l6697
  5931   00245A                     u4850:
  5932   00245A  EFF2  F011         	goto	l6677
  5933   00245E                     l6697:
  5934   00245E  90D8               	bcf	status,0,c
  5935   002460  322C               	rrcf	(___fltol@f1+3)^0,f,c
  5936   002462  322B               	rrcf	(___fltol@f1+2)^0,f,c
  5937   002464  322A               	rrcf	(___fltol@f1+1)^0,f,c
  5938   002466  3229               	rrcf	___fltol@f1^0,f,c
  5939   002468  3E32               	incfsz	___fltol@exp1^0,f,c
  5940   00246A  EF2F  F012         	goto	l6697
  5941   00246E  EF51  F012         	goto	l6711
  5942   002472                     l6701:
  5943   002472  0E1F               	movlw	31
  5944   002474  6432               	cpfsgt	___fltol@exp1^0,c
  5945   002476  EF3F  F012         	goto	u4861
  5946   00247A  EF41  F012         	goto	u4860
  5947   00247E                     u4861:
  5948   00247E  EF49  F012         	goto	l6709
  5949   002482                     u4860:
  5950   002482  EFF2  F011         	goto	l6677
  5951   002486                     l6707:
  5952   002486  90D8               	bcf	status,0,c
  5953   002488  3629               	rlcf	___fltol@f1^0,f,c
  5954   00248A  362A               	rlcf	(___fltol@f1+1)^0,f,c
  5955   00248C  362B               	rlcf	(___fltol@f1+2)^0,f,c
  5956   00248E  362C               	rlcf	(___fltol@f1+3)^0,f,c
  5957   002490  0632               	decf	___fltol@exp1^0,f,c
  5958   002492                     l6709:
  5959   002492  5032               	movf	___fltol@exp1^0,w,c
  5960   002494  A4D8               	btfss	status,2,c
  5961   002496  EF4F  F012         	goto	u4871
  5962   00249A  EF51  F012         	goto	u4870
  5963   00249E                     u4871:
  5964   00249E  EF43  F012         	goto	l6707
  5965   0024A2                     u4870:
  5966   0024A2                     l6711:
  5967   0024A2  5031               	movf	___fltol@sign1^0,w,c
  5968   0024A4  B4D8               	btfsc	status,2,c
  5969   0024A6  EF57  F012         	goto	u4881
  5970   0024AA  EF59  F012         	goto	u4880
  5971   0024AE                     u4881:
  5972   0024AE  EF61  F012         	goto	l6715
  5973   0024B2                     u4880:
  5974   0024B2  1E2C               	comf	(___fltol@f1+3)^0,f,c
  5975   0024B4  1E2B               	comf	(___fltol@f1+2)^0,f,c
  5976   0024B6  1E2A               	comf	(___fltol@f1+1)^0,f,c
  5977   0024B8  6C29               	negf	___fltol@f1^0,c
  5978   0024BA  0E00               	movlw	0
  5979   0024BC  222A               	addwfc	(___fltol@f1+1)^0,f,c
  5980   0024BE  222B               	addwfc	(___fltol@f1+2)^0,f,c
  5981   0024C0  222C               	addwfc	(___fltol@f1+3)^0,f,c
  5982   0024C2                     l6715:
  5983   0024C2  C029  F029         	movff	___fltol@f1,?___fltol
  5984   0024C6  C02A  F02A         	movff	___fltol@f1+1,?___fltol+1
  5985   0024CA  C02B  F02B         	movff	___fltol@f1+2,?___fltol+2
  5986   0024CE  C02C  F02C         	movff	___fltol@f1+3,?___fltol+3
  5987   0024D2                     l1948:
  5988   0024D2  0012               	return		;funcret
  5989   0024D4                     __end_of___fltol:
  5990                           	callstack 0
  5991                           
  5992 ;; *************** function ___flmul *****************
  5993 ;; Defined at:
  5994 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  b               4   15[COMRAM] long 
  5997 ;;  a               4   19[COMRAM] long 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  prod            4   34[COMRAM] struct .
  6000 ;;  grs             4   28[COMRAM] unsigned long 
  6001 ;;  temp            2   38[COMRAM] struct .
  6002 ;;  bexp            1   33[COMRAM] unsigned char 
  6003 ;;  aexp            1   32[COMRAM] unsigned char 
  6004 ;;  sign            1   27[COMRAM] unsigned char 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  4   15[COMRAM] unsigned char 
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0, prodl, prodh
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6014 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;Total ram usage:       25 bytes
  6019 ;; Hardware stack levels used: 1
  6020 ;; Hardware stack levels required when called: 2
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_main
  6025 ;;		_CCP_PWM_Set_Duty
  6026 ;;		_CCP_PWM_Mode_Config
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text37
  6031   00103E                     __ptext37:
  6032                           	callstack 0
  6033   00103E                     ___flmul:
  6034                           	callstack 28
  6035   00103E  5013               	movf	(___flmul@b+3)^0,w,c
  6036   001040  0B80               	andlw	128
  6037   001042  6E1C               	movwf	___flmul@sign^0,c
  6038   001044  5013               	movf	(___flmul@b+3)^0,w,c
  6039   001046  2413               	addwf	(___flmul@b+3)^0,w,c
  6040   001048  6E22               	movwf	___flmul@bexp^0,c
  6041   00104A  AE12               	btfss	(___flmul@b+2)^0,7,c
  6042   00104C  EF2A  F008         	goto	u4631
  6043   001050  EF2C  F008         	goto	u4630
  6044   001054                     u4631:
  6045   001054  EF2D  F008         	goto	l6551
  6046   001058                     u4630:
  6047   001058  8022               	bsf	___flmul@bexp^0,0,c
  6048   00105A                     l6551:
  6049   00105A  5022               	movf	___flmul@bexp^0,w,c
  6050   00105C  B4D8               	btfsc	status,2,c
  6051   00105E  EF33  F008         	goto	u4641
  6052   001062  EF35  F008         	goto	u4640
  6053   001066                     u4641:
  6054   001066  EF48  F008         	goto	l6559
  6055   00106A                     u4640:
  6056   00106A  2822               	incf	___flmul@bexp^0,w,c
  6057   00106C  A4D8               	btfss	status,2,c
  6058   00106E  EF3B  F008         	goto	u4651
  6059   001072  EF3D  F008         	goto	u4650
  6060   001076                     u4651:
  6061   001076  EF45  F008         	goto	l6557
  6062   00107A                     u4650:
  6063   00107A  0E00               	movlw	0
  6064   00107C  6E10               	movwf	___flmul@b^0,c
  6065   00107E  0E00               	movlw	0
  6066   001080  6E11               	movwf	(___flmul@b+1)^0,c
  6067   001082  0E00               	movlw	0
  6068   001084  6E12               	movwf	(___flmul@b+2)^0,c
  6069   001086  0E00               	movlw	0
  6070   001088  6E13               	movwf	(___flmul@b+3)^0,c
  6071   00108A                     l6557:
  6072   00108A  8E12               	bsf	(___flmul@b+2)^0,7,c
  6073   00108C  EF50  F008         	goto	l6561
  6074   001090                     l6559:
  6075   001090  0E00               	movlw	0
  6076   001092  6E10               	movwf	___flmul@b^0,c
  6077   001094  0E00               	movlw	0
  6078   001096  6E11               	movwf	(___flmul@b+1)^0,c
  6079   001098  0E00               	movlw	0
  6080   00109A  6E12               	movwf	(___flmul@b+2)^0,c
  6081   00109C  0E00               	movlw	0
  6082   00109E  6E13               	movwf	(___flmul@b+3)^0,c
  6083   0010A0                     l6561:
  6084   0010A0  5017               	movf	(___flmul@a+3)^0,w,c
  6085   0010A2  0B80               	andlw	128
  6086   0010A4  1A1C               	xorwf	___flmul@sign^0,f,c
  6087   0010A6  5017               	movf	(___flmul@a+3)^0,w,c
  6088   0010A8  2417               	addwf	(___flmul@a+3)^0,w,c
  6089   0010AA  6E21               	movwf	___flmul@aexp^0,c
  6090   0010AC  AE16               	btfss	(___flmul@a+2)^0,7,c
  6091   0010AE  EF5B  F008         	goto	u4661
  6092   0010B2  EF5D  F008         	goto	u4660
  6093   0010B6                     u4661:
  6094   0010B6  EF5E  F008         	goto	l6569
  6095   0010BA                     u4660:
  6096   0010BA  8021               	bsf	___flmul@aexp^0,0,c
  6097   0010BC                     l6569:
  6098   0010BC  5021               	movf	___flmul@aexp^0,w,c
  6099   0010BE  B4D8               	btfsc	status,2,c
  6100   0010C0  EF64  F008         	goto	u4671
  6101   0010C4  EF66  F008         	goto	u4670
  6102   0010C8                     u4671:
  6103   0010C8  EF79  F008         	goto	l6577
  6104   0010CC                     u4670:
  6105   0010CC  2821               	incf	___flmul@aexp^0,w,c
  6106   0010CE  A4D8               	btfss	status,2,c
  6107   0010D0  EF6C  F008         	goto	u4681
  6108   0010D4  EF6E  F008         	goto	u4680
  6109   0010D8                     u4681:
  6110   0010D8  EF76  F008         	goto	l6575
  6111   0010DC                     u4680:
  6112   0010DC  0E00               	movlw	0
  6113   0010DE  6E14               	movwf	___flmul@a^0,c
  6114   0010E0  0E00               	movlw	0
  6115   0010E2  6E15               	movwf	(___flmul@a+1)^0,c
  6116   0010E4  0E00               	movlw	0
  6117   0010E6  6E16               	movwf	(___flmul@a+2)^0,c
  6118   0010E8  0E00               	movlw	0
  6119   0010EA  6E17               	movwf	(___flmul@a+3)^0,c
  6120   0010EC                     l6575:
  6121   0010EC  8E16               	bsf	(___flmul@a+2)^0,7,c
  6122   0010EE  EF81  F008         	goto	l2265
  6123   0010F2                     l6577:
  6124   0010F2  0E00               	movlw	0
  6125   0010F4  6E14               	movwf	___flmul@a^0,c
  6126   0010F6  0E00               	movlw	0
  6127   0010F8  6E15               	movwf	(___flmul@a+1)^0,c
  6128   0010FA  0E00               	movlw	0
  6129   0010FC  6E16               	movwf	(___flmul@a+2)^0,c
  6130   0010FE  0E00               	movlw	0
  6131   001100  6E17               	movwf	(___flmul@a+3)^0,c
  6132   001102                     l2265:
  6133   001102  5021               	movf	___flmul@aexp^0,w,c
  6134   001104  B4D8               	btfsc	status,2,c
  6135   001106  EF87  F008         	goto	u4691
  6136   00110A  EF89  F008         	goto	u4690
  6137   00110E                     u4691:
  6138   00110E  EF91  F008         	goto	l6581
  6139   001112                     u4690:
  6140   001112  5022               	movf	___flmul@bexp^0,w,c
  6141   001114  A4D8               	btfss	status,2,c
  6142   001116  EF8F  F008         	goto	u4701
  6143   00111A  EF91  F008         	goto	u4700
  6144   00111E                     u4701:
  6145   00111E  EF9B  F008         	goto	l6585
  6146   001122                     u4700:
  6147   001122                     l6581:
  6148   001122  0E00               	movlw	0
  6149   001124  6E10               	movwf	?___flmul^0,c
  6150   001126  0E00               	movlw	0
  6151   001128  6E11               	movwf	(?___flmul+1)^0,c
  6152   00112A  0E00               	movlw	0
  6153   00112C  6E12               	movwf	(?___flmul+2)^0,c
  6154   00112E  0E00               	movlw	0
  6155   001130  6E13               	movwf	(?___flmul+3)^0,c
  6156   001132  EF33  F00A         	goto	l2269
  6157   001136                     l6585:
  6158   001136  5016               	movf	(___flmul@a+2)^0,w,c
  6159   001138  0210               	mulwf	___flmul@b^0,c
  6160   00113A  CFF3 F027          	movff	prodl,___flmul@temp
  6161   00113E  CFF4 F028          	movff	prodh,___flmul@temp+1
  6162   001142  5027               	movf	___flmul@temp^0,w,c
  6163   001144  6E1D               	movwf	___flmul@grs^0,c
  6164   001146  6A1E               	clrf	(___flmul@grs+1)^0,c
  6165   001148  6A1F               	clrf	(___flmul@grs+2)^0,c
  6166   00114A  6A20               	clrf	(___flmul@grs+3)^0,c
  6167   00114C  5028               	movf	(___flmul@temp+1)^0,w,c
  6168   00114E  6E23               	movwf	___flmul@prod^0,c
  6169   001150  6A24               	clrf	(___flmul@prod+1)^0,c
  6170   001152  6A25               	clrf	(___flmul@prod+2)^0,c
  6171   001154  6A26               	clrf	(___flmul@prod+3)^0,c
  6172   001156  5015               	movf	(___flmul@a+1)^0,w,c
  6173   001158  0211               	mulwf	(___flmul@b+1)^0,c
  6174   00115A  CFF3 F027          	movff	prodl,___flmul@temp
  6175   00115E  CFF4 F028          	movff	prodh,___flmul@temp+1
  6176   001162  5027               	movf	___flmul@temp^0,w,c
  6177   001164  261D               	addwf	___flmul@grs^0,f,c
  6178   001166  0E00               	movlw	0
  6179   001168  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6180   00116A  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6181   00116C  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6182   00116E  5028               	movf	(___flmul@temp+1)^0,w,c
  6183   001170  2623               	addwf	___flmul@prod^0,f,c
  6184   001172  0E00               	movlw	0
  6185   001174  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6186   001176  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6187   001178  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6188   00117A  5014               	movf	___flmul@a^0,w,c
  6189   00117C  0212               	mulwf	(___flmul@b+2)^0,c
  6190   00117E  CFF3 F027          	movff	prodl,___flmul@temp
  6191   001182  CFF4 F028          	movff	prodh,___flmul@temp+1
  6192   001186  5027               	movf	___flmul@temp^0,w,c
  6193   001188  261D               	addwf	___flmul@grs^0,f,c
  6194   00118A  0E00               	movlw	0
  6195   00118C  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6196   00118E  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6197   001190  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6198   001192  5028               	movf	(___flmul@temp+1)^0,w,c
  6199   001194  2623               	addwf	___flmul@prod^0,f,c
  6200   001196  0E00               	movlw	0
  6201   001198  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6202   00119A  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6203   00119C  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6204   00119E  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6205   0011A2  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6206   0011A6  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6207   0011AA  6A1D               	clrf	___flmul@grs^0,c
  6208   0011AC  5014               	movf	___flmul@a^0,w,c
  6209   0011AE  0211               	mulwf	(___flmul@b+1)^0,c
  6210   0011B0  CFF3 F027          	movff	prodl,___flmul@temp
  6211   0011B4  CFF4 F028          	movff	prodh,___flmul@temp+1
  6212   0011B8  5027               	movf	___flmul@temp^0,w,c
  6213   0011BA  261D               	addwf	___flmul@grs^0,f,c
  6214   0011BC  5028               	movf	(___flmul@temp+1)^0,w,c
  6215   0011BE  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6216   0011C0  0E00               	movlw	0
  6217   0011C2  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6218   0011C4  0E00               	movlw	0
  6219   0011C6  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6220   0011C8  5015               	movf	(___flmul@a+1)^0,w,c
  6221   0011CA  0210               	mulwf	___flmul@b^0,c
  6222   0011CC  CFF3 F027          	movff	prodl,___flmul@temp
  6223   0011D0  CFF4 F028          	movff	prodh,___flmul@temp+1
  6224   0011D4  5027               	movf	___flmul@temp^0,w,c
  6225   0011D6  261D               	addwf	___flmul@grs^0,f,c
  6226   0011D8  5028               	movf	(___flmul@temp+1)^0,w,c
  6227   0011DA  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6228   0011DC  0E00               	movlw	0
  6229   0011DE  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6230   0011E0  0E00               	movlw	0
  6231   0011E2  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6232   0011E4  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6233   0011E8  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6234   0011EC  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6235   0011F0  6A1D               	clrf	___flmul@grs^0,c
  6236   0011F2  5014               	movf	___flmul@a^0,w,c
  6237   0011F4  0210               	mulwf	___flmul@b^0,c
  6238   0011F6  CFF3 F027          	movff	prodl,___flmul@temp
  6239   0011FA  CFF4 F028          	movff	prodh,___flmul@temp+1
  6240   0011FE  5027               	movf	___flmul@temp^0,w,c
  6241   001200  261D               	addwf	___flmul@grs^0,f,c
  6242   001202  5028               	movf	(___flmul@temp+1)^0,w,c
  6243   001204  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6244   001206  0E00               	movlw	0
  6245   001208  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6246   00120A  0E00               	movlw	0
  6247   00120C  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6248   00120E  5016               	movf	(___flmul@a+2)^0,w,c
  6249   001210  0211               	mulwf	(___flmul@b+1)^0,c
  6250   001212  CFF3 F027          	movff	prodl,___flmul@temp
  6251   001216  CFF4 F028          	movff	prodh,___flmul@temp+1
  6252   00121A  5027               	movf	___flmul@temp^0,w,c
  6253   00121C  2623               	addwf	___flmul@prod^0,f,c
  6254   00121E  5028               	movf	(___flmul@temp+1)^0,w,c
  6255   001220  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6256   001222  0E00               	movlw	0
  6257   001224  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6258   001226  0E00               	movlw	0
  6259   001228  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6260   00122A  5015               	movf	(___flmul@a+1)^0,w,c
  6261   00122C  0212               	mulwf	(___flmul@b+2)^0,c
  6262   00122E  CFF3 F027          	movff	prodl,___flmul@temp
  6263   001232  CFF4 F028          	movff	prodh,___flmul@temp+1
  6264   001236  5027               	movf	___flmul@temp^0,w,c
  6265   001238  2623               	addwf	___flmul@prod^0,f,c
  6266   00123A  5028               	movf	(___flmul@temp+1)^0,w,c
  6267   00123C  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6268   00123E  0E00               	movlw	0
  6269   001240  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6270   001242  0E00               	movlw	0
  6271   001244  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6272   001246  5016               	movf	(___flmul@a+2)^0,w,c
  6273   001248  0212               	mulwf	(___flmul@b+2)^0,c
  6274   00124A  CFF3 F027          	movff	prodl,___flmul@temp
  6275   00124E  CFF4 F028          	movff	prodh,___flmul@temp+1
  6276   001252  5027               	movf	___flmul@temp^0,w,c
  6277   001254  6E18               	movwf	??___flmul^0,c
  6278   001256  5028               	movf	(___flmul@temp+1)^0,w,c
  6279   001258  6E19               	movwf	(??___flmul+1)^0,c
  6280   00125A  6A1A               	clrf	(??___flmul+2)^0,c
  6281   00125C  6A1B               	clrf	(??___flmul+3)^0,c
  6282   00125E  C01A  F01B         	movff	??___flmul+2,??___flmul+3
  6283   001262  C019  F01A         	movff	??___flmul+1,??___flmul+2
  6284   001266  C018  F019         	movff	??___flmul,??___flmul+1
  6285   00126A  6A18               	clrf	??___flmul^0,c
  6286   00126C  5018               	movf	??___flmul^0,w,c
  6287   00126E  2623               	addwf	___flmul@prod^0,f,c
  6288   001270  5019               	movf	(??___flmul+1)^0,w,c
  6289   001272  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6290   001274  501A               	movf	(??___flmul+2)^0,w,c
  6291   001276  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6292   001278  501B               	movf	(??___flmul+3)^0,w,c
  6293   00127A  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6294   00127C  C01D  F018         	movff	___flmul@grs,??___flmul
  6295   001280  C01E  F019         	movff	___flmul@grs+1,??___flmul+1
  6296   001284  C01F  F01A         	movff	___flmul@grs+2,??___flmul+2
  6297   001288  C020  F01B         	movff	___flmul@grs+3,??___flmul+3
  6298   00128C  0E19               	movlw	25
  6299   00128E  EF4E  F009         	goto	u4710
  6300   001292                     u4715:
  6301   001292  90D8               	bcf	status,0,c
  6302   001294  321B               	rrcf	(??___flmul+3)^0,f,c
  6303   001296  321A               	rrcf	(??___flmul+2)^0,f,c
  6304   001298  3219               	rrcf	(??___flmul+1)^0,f,c
  6305   00129A  3218               	rrcf	??___flmul^0,f,c
  6306   00129C                     u4710:
  6307   00129C  2EE8               	decfsz	wreg,f,c
  6308   00129E  EF49  F009         	goto	u4715
  6309   0012A2  5018               	movf	??___flmul^0,w,c
  6310   0012A4  2623               	addwf	___flmul@prod^0,f,c
  6311   0012A6  5019               	movf	(??___flmul+1)^0,w,c
  6312   0012A8  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6313   0012AA  501A               	movf	(??___flmul+2)^0,w,c
  6314   0012AC  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6315   0012AE  501B               	movf	(??___flmul+3)^0,w,c
  6316   0012B0  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6317   0012B2  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6318   0012B6  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6319   0012BA  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6320   0012BE  6A1D               	clrf	___flmul@grs^0,c
  6321   0012C0  5021               	movf	___flmul@aexp^0,w,c
  6322   0012C2  C022  F018         	movff	___flmul@bexp,??___flmul
  6323   0012C6  6A19               	clrf	(??___flmul+1)^0,c
  6324   0012C8  2618               	addwf	??___flmul^0,f,c
  6325   0012CA  0E00               	movlw	0
  6326   0012CC  2219               	addwfc	(??___flmul+1)^0,f,c
  6327   0012CE  0E82               	movlw	130
  6328   0012D0  2418               	addwf	??___flmul^0,w,c
  6329   0012D2  6E27               	movwf	___flmul@temp^0,c
  6330   0012D4  0EFF               	movlw	255
  6331   0012D6  2019               	addwfc	(??___flmul+1)^0,w,c
  6332   0012D8  6E28               	movwf	(___flmul@temp+1)^0,c
  6333   0012DA  EF84  F009         	goto	l6633
  6334   0012DE                     l6627:
  6335   0012DE  90D8               	bcf	status,0,c
  6336   0012E0  3623               	rlcf	___flmul@prod^0,f,c
  6337   0012E2  3624               	rlcf	(___flmul@prod+1)^0,f,c
  6338   0012E4  3625               	rlcf	(___flmul@prod+2)^0,f,c
  6339   0012E6  3626               	rlcf	(___flmul@prod+3)^0,f,c
  6340   0012E8  AE20               	btfss	(___flmul@grs+3)^0,7,c
  6341   0012EA  EF79  F009         	goto	u4721
  6342   0012EE  EF7B  F009         	goto	u4720
  6343   0012F2                     u4721:
  6344   0012F2  EF7C  F009         	goto	l2272
  6345   0012F6                     u4720:
  6346   0012F6  8023               	bsf	___flmul@prod^0,0,c
  6347   0012F8                     l2272:
  6348   0012F8  90D8               	bcf	status,0,c
  6349   0012FA  361D               	rlcf	___flmul@grs^0,f,c
  6350   0012FC  361E               	rlcf	(___flmul@grs+1)^0,f,c
  6351   0012FE  361F               	rlcf	(___flmul@grs+2)^0,f,c
  6352   001300  3620               	rlcf	(___flmul@grs+3)^0,f,c
  6353   001302  0627               	decf	___flmul@temp^0,f,c
  6354   001304  A0D8               	btfss	status,0,c
  6355   001306  0628               	decf	(___flmul@temp+1)^0,f,c
  6356   001308                     l6633:
  6357   001308  AE25               	btfss	(___flmul@prod+2)^0,7,c
  6358   00130A  EF89  F009         	goto	u4731
  6359   00130E  EF8B  F009         	goto	u4730
  6360   001312                     u4731:
  6361   001312  EF6F  F009         	goto	l6627
  6362   001316                     u4730:
  6363   001316  0E00               	movlw	0
  6364   001318  6E21               	movwf	___flmul@aexp^0,c
  6365   00131A  AE20               	btfss	(___flmul@grs+3)^0,7,c
  6366   00131C  EF92  F009         	goto	u4741
  6367   001320  EF94  F009         	goto	u4740
  6368   001324                     u4741:
  6369   001324  EFB8  F009         	goto	l2274
  6370   001328                     u4740:
  6371   001328  0EFF               	movlw	255
  6372   00132A  141D               	andwf	___flmul@grs^0,w,c
  6373   00132C  6E18               	movwf	??___flmul^0,c
  6374   00132E  0EFF               	movlw	255
  6375   001330  141E               	andwf	(___flmul@grs+1)^0,w,c
  6376   001332  6E19               	movwf	(??___flmul+1)^0,c
  6377   001334  0EFF               	movlw	255
  6378   001336  141F               	andwf	(___flmul@grs+2)^0,w,c
  6379   001338  6E1A               	movwf	(??___flmul+2)^0,c
  6380   00133A  0E7F               	movlw	127
  6381   00133C  1420               	andwf	(___flmul@grs+3)^0,w,c
  6382   00133E  6E1B               	movwf	(??___flmul+3)^0,c
  6383   001340  5018               	movf	??___flmul^0,w,c
  6384   001342  1019               	iorwf	(??___flmul+1)^0,w,c
  6385   001344  101A               	iorwf	(??___flmul+2)^0,w,c
  6386   001346  101B               	iorwf	(??___flmul+3)^0,w,c
  6387   001348  B4D8               	btfsc	status,2,c
  6388   00134A  EFA9  F009         	goto	u4751
  6389   00134E  EFAB  F009         	goto	u4750
  6390   001352                     u4751:
  6391   001352  EFAF  F009         	goto	l2275
  6392   001356                     u4750:
  6393   001356                     l6641:
  6394   001356  0E01               	movlw	1
  6395   001358  6E21               	movwf	___flmul@aexp^0,c
  6396   00135A  EFB8  F009         	goto	l2274
  6397   00135E                     l2275:
  6398   00135E  A023               	btfss	___flmul@prod^0,0,c
  6399   001360  EFB4  F009         	goto	u4761
  6400   001364  EFB6  F009         	goto	u4760
  6401   001368                     u4761:
  6402   001368  EFB8  F009         	goto	l2274
  6403   00136C                     u4760:
  6404   00136C  EFAB  F009         	goto	l6641
  6405   001370                     l2274:
  6406   001370  5021               	movf	___flmul@aexp^0,w,c
  6407   001372  B4D8               	btfsc	status,2,c
  6408   001374  EFBE  F009         	goto	u4771
  6409   001378  EFC0  F009         	goto	u4770
  6410   00137C                     u4771:
  6411   00137C  EFE4  F009         	goto	l6653
  6412   001380                     u4770:
  6413   001380  0E01               	movlw	1
  6414   001382  2623               	addwf	___flmul@prod^0,f,c
  6415   001384  0E00               	movlw	0
  6416   001386  2224               	addwfc	(___flmul@prod+1)^0,f,c
  6417   001388  2225               	addwfc	(___flmul@prod+2)^0,f,c
  6418   00138A  2226               	addwfc	(___flmul@prod+3)^0,f,c
  6419   00138C  A026               	btfss	(___flmul@prod+3)^0,0,c
  6420   00138E  EFCB  F009         	goto	u4781
  6421   001392  EFCD  F009         	goto	u4780
  6422   001396                     u4781:
  6423   001396  EFE4  F009         	goto	l6653
  6424   00139A                     u4780:
  6425   00139A  C023  F018         	movff	___flmul@prod,??___flmul
  6426   00139E  C024  F019         	movff	___flmul@prod+1,??___flmul+1
  6427   0013A2  C025  F01A         	movff	___flmul@prod+2,??___flmul+2
  6428   0013A6  C026  F01B         	movff	___flmul@prod+3,??___flmul+3
  6429   0013AA  341B               	rlcf	(??___flmul+3)^0,w,c
  6430   0013AC  321B               	rrcf	(??___flmul+3)^0,f,c
  6431   0013AE  321A               	rrcf	(??___flmul+2)^0,f,c
  6432   0013B0  3219               	rrcf	(??___flmul+1)^0,f,c
  6433   0013B2  3218               	rrcf	??___flmul^0,f,c
  6434   0013B4  C018  F023         	movff	??___flmul,___flmul@prod
  6435   0013B8  C019  F024         	movff	??___flmul+1,___flmul@prod+1
  6436   0013BC  C01A  F025         	movff	??___flmul+2,___flmul@prod+2
  6437   0013C0  C01B  F026         	movff	??___flmul+3,___flmul@prod+3
  6438   0013C4  4A27               	infsnz	___flmul@temp^0,f,c
  6439   0013C6  2A28               	incf	(___flmul@temp+1)^0,f,c
  6440   0013C8                     l6653:
  6441   0013C8  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  6442   0013CA  EFEF  F009         	goto	u4791
  6443   0013CE  5028               	movf	(___flmul@temp+1)^0,w,c
  6444   0013D0  E108               	bnz	u4790
  6445   0013D2  2827               	incf	___flmul@temp^0,w,c
  6446   0013D4  A0D8               	btfss	status,0,c
  6447   0013D6  EFEF  F009         	goto	u4791
  6448   0013DA  EFF1  F009         	goto	u4790
  6449   0013DE                     u4791:
  6450   0013DE  EFFB  F009         	goto	l6657
  6451   0013E2                     u4790:
  6452   0013E2  0E00               	movlw	0
  6453   0013E4  6E23               	movwf	___flmul@prod^0,c
  6454   0013E6  0E00               	movlw	0
  6455   0013E8  6E24               	movwf	(___flmul@prod+1)^0,c
  6456   0013EA  0E80               	movlw	128
  6457   0013EC  6E25               	movwf	(___flmul@prod+2)^0,c
  6458   0013EE  0E7F               	movlw	127
  6459   0013F0  6E26               	movwf	(___flmul@prod+3)^0,c
  6460   0013F2  EF29  F00A         	goto	l6669
  6461   0013F6                     l6657:
  6462   0013F6  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  6463   0013F8  EF08  F00A         	goto	u4800
  6464   0013FC  5028               	movf	(___flmul@temp+1)^0,w,c
  6465   0013FE  E106               	bnz	u4801
  6466   001400  0427               	decf	___flmul@temp^0,w,c
  6467   001402  B0D8               	btfsc	status,0,c
  6468   001404  EF06  F00A         	goto	u4801
  6469   001408  EF08  F00A         	goto	u4800
  6470   00140C                     u4801:
  6471   00140C  EF14  F00A         	goto	l2282
  6472   001410                     u4800:
  6473   001410  0E00               	movlw	0
  6474   001412  6E23               	movwf	___flmul@prod^0,c
  6475   001414  0E00               	movlw	0
  6476   001416  6E24               	movwf	(___flmul@prod+1)^0,c
  6477   001418  0E00               	movlw	0
  6478   00141A  6E25               	movwf	(___flmul@prod+2)^0,c
  6479   00141C  0E00               	movlw	0
  6480   00141E  6E26               	movwf	(___flmul@prod+3)^0,c
  6481   001420  0E00               	movlw	0
  6482   001422  6E1C               	movwf	___flmul@sign^0,c
  6483   001424  EF29  F00A         	goto	l6669
  6484   001428                     l2282:
  6485   001428  C027  F022         	movff	___flmul@temp,___flmul@bexp
  6486   00142C  0EFF               	movlw	255
  6487   00142E  1623               	andwf	___flmul@prod^0,f,c
  6488   001430  0EFF               	movlw	255
  6489   001432  1624               	andwf	(___flmul@prod+1)^0,f,c
  6490   001434  0E7F               	movlw	127
  6491   001436  1625               	andwf	(___flmul@prod+2)^0,f,c
  6492   001438  0E00               	movlw	0
  6493   00143A  1626               	andwf	(___flmul@prod+3)^0,f,c
  6494   00143C  A022               	btfss	___flmul@bexp^0,0,c
  6495   00143E  EF23  F00A         	goto	u4811
  6496   001442  EF25  F00A         	goto	u4810
  6497   001446                     u4811:
  6498   001446  EF26  F00A         	goto	l6667
  6499   00144A                     u4810:
  6500   00144A  8E25               	bsf	(___flmul@prod+2)^0,7,c
  6501   00144C                     l6667:
  6502   00144C  90D8               	bcf	status,0,c
  6503   00144E  3022               	rrcf	___flmul@bexp^0,w,c
  6504   001450  6E26               	movwf	(___flmul@prod+3)^0,c
  6505   001452                     l6669:
  6506   001452  501C               	movf	___flmul@sign^0,w,c
  6507   001454  1226               	iorwf	(___flmul@prod+3)^0,f,c
  6508   001456  C023  F010         	movff	___flmul@prod,?___flmul
  6509   00145A  C024  F011         	movff	___flmul@prod+1,?___flmul+1
  6510   00145E  C025  F012         	movff	___flmul@prod+2,?___flmul+2
  6511   001462  C026  F013         	movff	___flmul@prod+3,?___flmul+3
  6512   001466                     l2269:
  6513   001466  0012               	return		;funcret
  6514   001468                     __end_of___flmul:
  6515                           	callstack 0
  6516                           
  6517 ;; *************** function _ADC_GetConversion_Blocking *****************
  6518 ;; Defined at:
  6519 ;;		line 213 in file "MCAL_Layer/ADC/hal_adc.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  _adc            2    9[COMRAM] PTR const struct .
  6522 ;;		 -> adc_1(7), 
  6523 ;;  channel         1   11[COMRAM] enum E3032
  6524 ;;  conversion_r    2   12[COMRAM] PTR unsigned short 
  6525 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  ret             1   14[COMRAM] unsigned char 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  1    wreg      unsigned char 
  6530 ;; Registers used:
  6531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6537 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;Total ram usage:        6 bytes
  6542 ;; Hardware stack levels used: 1
  6543 ;; Hardware stack levels required when called: 4
  6544 ;; This function calls:
  6545 ;;		_ADC_GetConversionResult
  6546 ;;		_ADC_SelectChannel
  6547 ;;		_ADC_StartConversion
  6548 ;; This function is called by:
  6549 ;;		_main
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text38
  6554   002DD6                     __ptext38:
  6555                           	callstack 0
  6556   002DD6                     _ADC_GetConversion_Blocking:
  6557                           	callstack 26
  6558   002DD6                     
  6559                           ;MCAL_Layer/ADC/hal_adc.c: 216:     if((((void*)0) == _adc) || (((void*)0) == conversion
      +                          _result)){
  6560   002DD6  500A               	movf	ADC_GetConversion_Blocking@_adc^0,w,c
  6561   002DD8  100B               	iorwf	(ADC_GetConversion_Blocking@_adc+1)^0,w,c
  6562   002DDA  B4D8               	btfsc	status,2,c
  6563   002DDC  EFF2  F016         	goto	u4531
  6564   002DE0  EFF4  F016         	goto	u4530
  6565   002DE4                     u4531:
  6566   002DE4  EFFD  F016         	goto	l6383
  6567   002DE8                     u4530:
  6568   002DE8  500D               	movf	ADC_GetConversion_Blocking@conversion_result^0,w,c
  6569   002DEA  100E               	iorwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,w,c
  6570   002DEC  A4D8               	btfss	status,2,c
  6571   002DEE  EFFB  F016         	goto	u4541
  6572   002DF2  EFFD  F016         	goto	u4540
  6573   002DF6                     u4541:
  6574   002DF6  EF01  F017         	goto	l6385
  6575   002DFA                     u4540:
  6576   002DFA                     l6383:
  6577                           
  6578                           ;MCAL_Layer/ADC/hal_adc.c: 217:         ret = (Std_ReturnType)0x00;
  6579   002DFA  0E00               	movlw	0
  6580   002DFC  6E0F               	movwf	ADC_GetConversion_Blocking@ret^0,c
  6581                           
  6582                           ;MCAL_Layer/ADC/hal_adc.c: 218:     }
  6583   002DFE  EF23  F017         	goto	l6389
  6584   002E02                     l6385:
  6585                           
  6586                           ;MCAL_Layer/ADC/hal_adc.c: 221:         ret = ADC_SelectChannel(_adc, channel);
  6587   002E02  C00A  F005         	movff	ADC_GetConversion_Blocking@_adc,ADC_SelectChannel@_adc
  6588   002E06  C00B  F006         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_SelectChannel@_adc+1
  6589   002E0A  C00C  F007         	movff	ADC_GetConversion_Blocking@channel,ADC_SelectChannel@channel
  6590   002E0E  EC99  F019         	call	_ADC_SelectChannel	;wreg free
  6591   002E12  6E0F               	movwf	ADC_GetConversion_Blocking@ret^0,c
  6592                           
  6593                           ;MCAL_Layer/ADC/hal_adc.c: 223:         ret = ADC_StartConversion(_adc);
  6594   002E14  C00A  F002         	movff	ADC_GetConversion_Blocking@_adc,ADC_StartConversion@_adc
  6595   002E18  C00B  F003         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_StartConversion@_adc+1
  6596   002E1C  ECE8  F019         	call	_ADC_StartConversion	;wreg free
  6597   002E20  6E0F               	movwf	ADC_GetConversion_Blocking@ret^0,c
  6598   002E22                     l402:
  6599   002E22  B2C2               	btfsc	194,1,c	;volatile
  6600   002E24  EF16  F017         	goto	u4551
  6601   002E28  EF18  F017         	goto	u4550
  6602   002E2C                     u4551:
  6603   002E2C  EF11  F017         	goto	l402
  6604   002E30                     u4550:
  6605   002E30                     
  6606                           ;MCAL_Layer/ADC/hal_adc.c: 226:         ret = ADC_GetConversionResult(_adc, conversion_r
      +                          esult);
  6607   002E30  C00A  F002         	movff	ADC_GetConversion_Blocking@_adc,ADC_GetConversionResult@_adc
  6608   002E34  C00B  F003         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_GetConversionResult@_adc+1
  6609   002E38  C00D  F004         	movff	ADC_GetConversion_Blocking@conversion_result,ADC_GetConversionResult@conversion_r
      +                          esult
  6610   002E3C  C00E  F005         	movff	ADC_GetConversion_Blocking@conversion_result+1,ADC_GetConversionResult@conversion
      +                          _result+1
  6611   002E40  EC9D  F013         	call	_ADC_GetConversionResult	;wreg free
  6612   002E44  6E0F               	movwf	ADC_GetConversion_Blocking@ret^0,c
  6613   002E46                     l6389:
  6614                           
  6615                           ;MCAL_Layer/ADC/hal_adc.c: 228:     return ret;
  6616   002E46  500F               	movf	ADC_GetConversion_Blocking@ret^0,w,c
  6617   002E48  0012               	return		;funcret
  6618   002E4A                     __end_of_ADC_GetConversion_Blocking:
  6619                           	callstack 0
  6620                           
  6621 ;; *************** function _ADC_StartConversion *****************
  6622 ;; Defined at:
  6623 ;;		line 131 in file "MCAL_Layer/ADC/hal_adc.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;  _adc            2    1[COMRAM] PTR const struct .
  6626 ;;		 -> adc_1(7), 
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  ret             1    3[COMRAM] unsigned char 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  1    wreg      unsigned char 
  6631 ;; Registers used:
  6632 ;;		wreg, status,2, status,0
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;Total ram usage:        3 bytes
  6643 ;; Hardware stack levels used: 1
  6644 ;; Hardware stack levels required when called: 2
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_ADC_GetConversion_Blocking
  6649 ;;		_ADC_StartConversion_Interrupt
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text39
  6654   0033D0                     __ptext39:
  6655                           	callstack 0
  6656   0033D0                     _ADC_StartConversion:
  6657                           	callstack 27
  6658   0033D0                     
  6659                           ;MCAL_Layer/ADC/hal_adc.c: 133:     if(((void*)0) == _adc){
  6660   0033D0  5002               	movf	ADC_StartConversion@_adc^0,w,c
  6661   0033D2  1003               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
  6662   0033D4  A4D8               	btfss	status,2,c
  6663   0033D6  EFEF  F019         	goto	u4271
  6664   0033DA  EFF1  F019         	goto	u4270
  6665   0033DE                     u4271:
  6666   0033DE  EFF5  F019         	goto	l375
  6667   0033E2                     u4270:
  6668   0033E2                     
  6669                           ;MCAL_Layer/ADC/hal_adc.c: 134:         ret = (Std_ReturnType)0x00;
  6670   0033E2  0E00               	movlw	0
  6671   0033E4  6E04               	movwf	ADC_StartConversion@ret^0,c
  6672                           
  6673                           ;MCAL_Layer/ADC/hal_adc.c: 135:     }
  6674   0033E6  EFF8  F019         	goto	l376
  6675   0033EA                     l375:
  6676                           
  6677                           ;MCAL_Layer/ADC/hal_adc.c: 137:         (ADCON0bits.GODONE = 1);
  6678   0033EA  82C2               	bsf	194,1,c	;volatile
  6679   0033EC                     
  6680                           ;MCAL_Layer/ADC/hal_adc.c: 138:         ret = (Std_ReturnType)0x01;
  6681   0033EC  0E01               	movlw	1
  6682   0033EE  6E04               	movwf	ADC_StartConversion@ret^0,c
  6683   0033F0                     l376:
  6684                           
  6685                           ;MCAL_Layer/ADC/hal_adc.c: 140:     return ret;
  6686   0033F0  5004               	movf	ADC_StartConversion@ret^0,w,c
  6687   0033F2  0012               	return		;funcret
  6688   0033F4                     __end_of_ADC_StartConversion:
  6689                           	callstack 0
  6690                           
  6691 ;; *************** function _ADC_SelectChannel *****************
  6692 ;; Defined at:
  6693 ;;		line 108 in file "MCAL_Layer/ADC/hal_adc.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  _adc            2    4[COMRAM] PTR const struct .
  6696 ;;		 -> adc_1(7), 
  6697 ;;  channel         1    6[COMRAM] enum E3032
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  ret             1    8[COMRAM] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      unsigned char 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2, status,0, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6709 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;Total ram usage:        5 bytes
  6714 ;; Hardware stack levels used: 1
  6715 ;; Hardware stack levels required when called: 3
  6716 ;; This function calls:
  6717 ;;		_adc_input_channel_port_configure
  6718 ;; This function is called by:
  6719 ;;		_ADC_GetConversion_Blocking
  6720 ;;		_ADC_StartConversion_Interrupt
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text40
  6725   003332                     __ptext40:
  6726                           	callstack 0
  6727   003332                     _ADC_SelectChannel:
  6728                           	callstack 26
  6729   003332                     
  6730                           ;MCAL_Layer/ADC/hal_adc.c: 110:     if(((void*)0) == _adc){
  6731   003332  5005               	movf	ADC_SelectChannel@_adc^0,w,c
  6732   003334  1006               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
  6733   003336  A4D8               	btfss	status,2,c
  6734   003338  EFA0  F019         	goto	u4261
  6735   00333C  EFA2  F019         	goto	u4260
  6736   003340                     u4261:
  6737   003340  EFA6  F019         	goto	l6163
  6738   003344                     u4260:
  6739   003344                     
  6740                           ;MCAL_Layer/ADC/hal_adc.c: 111:         ret = (Std_ReturnType)0x00;
  6741   003344  0E00               	movlw	0
  6742   003346  6E09               	movwf	ADC_SelectChannel@ret^0,c
  6743                           
  6744                           ;MCAL_Layer/ADC/hal_adc.c: 112:     }
  6745   003348  EFB4  F019         	goto	l6169
  6746   00334C                     l6163:
  6747                           
  6748                           ;MCAL_Layer/ADC/hal_adc.c: 115:         ADCON0bits.CHS = channel;
  6749   00334C  C007  F008         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  6750   003350  4608               	rlncf	??_ADC_SelectChannel^0,f,c
  6751   003352  4608               	rlncf	??_ADC_SelectChannel^0,f,c
  6752   003354  50C2               	movf	194,w,c	;volatile
  6753   003356  1808               	xorwf	??_ADC_SelectChannel^0,w,c
  6754   003358  0BC3               	andlw	-61
  6755   00335A  1808               	xorwf	??_ADC_SelectChannel^0,w,c
  6756   00335C  6EC2               	movwf	194,c	;volatile
  6757   00335E                     
  6758                           ;MCAL_Layer/ADC/hal_adc.c: 116:         adc_input_channel_port_configure(channel);
  6759   00335E  5007               	movf	ADC_SelectChannel@channel^0,w,c
  6760   003360  EC6A  F012         	call	_adc_input_channel_port_configure
  6761   003364                     
  6762                           ;MCAL_Layer/ADC/hal_adc.c: 117:         ret = (Std_ReturnType)0x01;
  6763   003364  0E01               	movlw	1
  6764   003366  6E09               	movwf	ADC_SelectChannel@ret^0,c
  6765   003368                     l6169:
  6766                           
  6767                           ;MCAL_Layer/ADC/hal_adc.c: 119:     return ret;
  6768   003368  5009               	movf	ADC_SelectChannel@ret^0,w,c
  6769   00336A  0012               	return		;funcret
  6770   00336C                     __end_of_ADC_SelectChannel:
  6771                           	callstack 0
  6772                           
  6773 ;; *************** function _adc_input_channel_port_configure *****************
  6774 ;; Defined at:
  6775 ;;		line 255 in file "MCAL_Layer/ADC/hal_adc.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  channel         1    wreg     enum E3032
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  channel         1    3[COMRAM] enum E3032
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      void 
  6782 ;; Registers used:
  6783 ;;		wreg, status,2, status,0
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6793 ;;Total ram usage:        3 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; Hardware stack levels required when called: 2
  6796 ;; This function calls:
  6797 ;;		Nothing
  6798 ;; This function is called by:
  6799 ;;		_ADC_Init
  6800 ;;		_ADC_SelectChannel
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text41
  6805   0024D4                     __ptext41:
  6806                           	callstack 0
  6807   0024D4                     _adc_input_channel_port_configure:
  6808                           	callstack 26
  6809                           
  6810                           ;incstack = 0
  6811                           ;adc_input_channel_port_configure@channel stored from wreg
  6812   0024D4  6E04               	movwf	adc_input_channel_port_configure@channel^0,c
  6813   0024D6                     
  6814                           ;MCAL_Layer/ADC/hal_adc.c: 256:     switch(channel){
  6815   0024D6  EF94  F012         	goto	l5907
  6816   0024DA                     l5881:
  6817   0024DA  8092               	bsf	146,0,c	;volatile
  6818   0024DC  EFD5  F012         	goto	l429
  6819   0024E0                     l5883:
  6820   0024E0  8292               	bsf	146,1,c	;volatile
  6821   0024E2  EFD5  F012         	goto	l429
  6822   0024E6                     l5885:
  6823   0024E6  8492               	bsf	146,2,c	;volatile
  6824   0024E8  EFD5  F012         	goto	l429
  6825   0024EC                     l5887:
  6826   0024EC  8692               	bsf	146,3,c	;volatile
  6827   0024EE  EFD5  F012         	goto	l429
  6828   0024F2                     l5889:
  6829   0024F2  8A92               	bsf	146,5,c	;volatile
  6830   0024F4  EFD5  F012         	goto	l429
  6831   0024F8                     l5891:
  6832   0024F8  8096               	bsf	150,0,c	;volatile
  6833   0024FA  EFD5  F012         	goto	l429
  6834   0024FE                     l5893:
  6835   0024FE  8296               	bsf	150,1,c	;volatile
  6836   002500  EFD5  F012         	goto	l429
  6837   002504                     l5895:
  6838   002504  8496               	bsf	150,2,c	;volatile
  6839   002506  EFD5  F012         	goto	l429
  6840   00250A                     l5897:
  6841   00250A  8493               	bsf	147,2,c	;volatile
  6842   00250C  EFD5  F012         	goto	l429
  6843   002510                     l5899:
  6844   002510  8693               	bsf	147,3,c	;volatile
  6845   002512  EFD5  F012         	goto	l429
  6846   002516                     l5901:
  6847   002516  8293               	bsf	147,1,c	;volatile
  6848   002518  EFD5  F012         	goto	l429
  6849   00251C                     l5903:
  6850   00251C  8893               	bsf	147,4,c	;volatile
  6851   00251E  EFD5  F012         	goto	l429
  6852   002522                     l5905:
  6853   002522  8093               	bsf	147,0,c	;volatile
  6854   002524  EFD5  F012         	goto	l429
  6855   002528                     l5907:
  6856   002528  5004               	movf	adc_input_channel_port_configure@channel^0,w,c
  6857   00252A  6E02               	movwf	??_adc_input_channel_port_configure^0,c
  6858   00252C  6A03               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  6859                           
  6860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6861                           ; Switch size 1, requested type "simple"
  6862                           ; Number of cases is 1, Range of values is 0 to 0
  6863                           ; switch strategies available:
  6864                           ; Name         Instructions Cycles
  6865                           ; simple_byte            4     3 (average)
  6866                           ;	Chosen strategy is simple_byte
  6867   00252E  5003               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  6868   002530  0A00               	xorlw	0	; case 0
  6869   002532  B4D8               	btfsc	status,2,c
  6870   002534  EF9E  F012         	goto	l8073
  6871   002538  EFD5  F012         	goto	l429
  6872   00253C                     l8073:
  6873                           
  6874                           ; Switch size 1, requested type "simple"
  6875                           ; Number of cases is 13, Range of values is 0 to 12
  6876                           ; switch strategies available:
  6877                           ; Name         Instructions Cycles
  6878                           ; simple_byte           40    21 (average)
  6879                           ;	Chosen strategy is simple_byte
  6880   00253C  5002               	movf	??_adc_input_channel_port_configure^0,w,c
  6881   00253E  0A00               	xorlw	0	; case 0
  6882   002540  B4D8               	btfsc	status,2,c
  6883   002542  EF6D  F012         	goto	l5881
  6884   002546  0A01               	xorlw	1	; case 1
  6885   002548  B4D8               	btfsc	status,2,c
  6886   00254A  EF70  F012         	goto	l5883
  6887   00254E  0A03               	xorlw	3	; case 2
  6888   002550  B4D8               	btfsc	status,2,c
  6889   002552  EF73  F012         	goto	l5885
  6890   002556  0A01               	xorlw	1	; case 3
  6891   002558  B4D8               	btfsc	status,2,c
  6892   00255A  EF76  F012         	goto	l5887
  6893   00255E  0A07               	xorlw	7	; case 4
  6894   002560  B4D8               	btfsc	status,2,c
  6895   002562  EF79  F012         	goto	l5889
  6896   002566  0A01               	xorlw	1	; case 5
  6897   002568  B4D8               	btfsc	status,2,c
  6898   00256A  EF7C  F012         	goto	l5891
  6899   00256E  0A03               	xorlw	3	; case 6
  6900   002570  B4D8               	btfsc	status,2,c
  6901   002572  EF7F  F012         	goto	l5893
  6902   002576  0A01               	xorlw	1	; case 7
  6903   002578  B4D8               	btfsc	status,2,c
  6904   00257A  EF82  F012         	goto	l5895
  6905   00257E  0A0F               	xorlw	15	; case 8
  6906   002580  B4D8               	btfsc	status,2,c
  6907   002582  EF85  F012         	goto	l5897
  6908   002586  0A01               	xorlw	1	; case 9
  6909   002588  B4D8               	btfsc	status,2,c
  6910   00258A  EF88  F012         	goto	l5899
  6911   00258E  0A03               	xorlw	3	; case 10
  6912   002590  B4D8               	btfsc	status,2,c
  6913   002592  EF8B  F012         	goto	l5901
  6914   002596  0A01               	xorlw	1	; case 11
  6915   002598  B4D8               	btfsc	status,2,c
  6916   00259A  EF8E  F012         	goto	l5903
  6917   00259E  0A07               	xorlw	7	; case 12
  6918   0025A0  B4D8               	btfsc	status,2,c
  6919   0025A2  EF91  F012         	goto	l5905
  6920   0025A6  EFD5  F012         	goto	l429
  6921   0025AA                     l429:
  6922   0025AA  0012               	return		;funcret
  6923   0025AC                     __end_of_adc_input_channel_port_configure:
  6924                           	callstack 0
  6925                           
  6926 ;; *************** function _ADC_GetConversionResult *****************
  6927 ;; Defined at:
  6928 ;;		line 181 in file "MCAL_Layer/ADC/hal_adc.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  _adc            2    1[COMRAM] PTR const struct .
  6931 ;;		 -> adc_1(7), 
  6932 ;;  conversion_r    2    3[COMRAM] PTR unsigned short 
  6933 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;  ret             1    8[COMRAM] unsigned char 
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  1    wreg      unsigned char 
  6938 ;; Registers used:
  6939 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6947 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6948 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6949 ;;Total ram usage:        8 bytes
  6950 ;; Hardware stack levels used: 1
  6951 ;; Hardware stack levels required when called: 2
  6952 ;; This function calls:
  6953 ;;		Nothing
  6954 ;; This function is called by:
  6955 ;;		_ADC_GetConversion_Blocking
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text42
  6960   00273A                     __ptext42:
  6961                           	callstack 0
  6962   00273A                     _ADC_GetConversionResult:
  6963                           	callstack 27
  6964   00273A                     
  6965                           ;MCAL_Layer/ADC/hal_adc.c: 183:     if((((void*)0) == _adc) || (((void*)0) == conversion
      +                          _result)){
  6966   00273A  5002               	movf	ADC_GetConversionResult@_adc^0,w,c
  6967   00273C  1003               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  6968   00273E  B4D8               	btfsc	status,2,c
  6969   002740  EFA4  F013         	goto	u4281
  6970   002744  EFA6  F013         	goto	u4280
  6971   002748                     u4281:
  6972   002748  EFAF  F013         	goto	l6189
  6973   00274C                     u4280:
  6974   00274C  5004               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6975   00274E  1005               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
  6976   002750  A4D8               	btfss	status,2,c
  6977   002752  EFAD  F013         	goto	u4291
  6978   002756  EFAF  F013         	goto	u4290
  6979   00275A                     u4291:
  6980   00275A  EFB3  F013         	goto	l6191
  6981   00275E                     u4290:
  6982   00275E                     l6189:
  6983                           
  6984                           ;MCAL_Layer/ADC/hal_adc.c: 184:         ret = (Std_ReturnType)0x00;
  6985   00275E  0E00               	movlw	0
  6986   002760  6E09               	movwf	ADC_GetConversionResult@ret^0,c
  6987                           
  6988                           ;MCAL_Layer/ADC/hal_adc.c: 185:     }
  6989   002762  EFFD  F013         	goto	l6203
  6990   002766                     l6191:
  6991                           
  6992                           ;MCAL_Layer/ADC/hal_adc.c: 187:         if(0x01U == _adc->result_format){
  6993   002766  EE20 F006          	lfsr	2,6
  6994   00276A  5002               	movf	ADC_GetConversionResult@_adc^0,w,c
  6995   00276C  26D9               	addwf	fsr2l,f,c
  6996   00276E  5003               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  6997   002770  22DA               	addwfc	fsr2h,f,c
  6998   002772  A2DF               	btfss	indf2,1,c
  6999   002774  EFBE  F013         	goto	u4301
  7000   002778  EFC0  F013         	goto	u4300
  7001   00277C                     u4301:
  7002   00277C  EFD4  F013         	goto	l6195
  7003   002780                     u4300:
  7004   002780                     l6193:
  7005                           
  7006                           ;MCAL_Layer/ADC/hal_adc.c: 188:             *conversion_result = (adc_result_t)((ADRESH 
      +                          << 8) + ADRESL);
  7007   002780  50C3               	movf	195,w,c	;volatile
  7008   002782  CFC4 F006          	movff	4036,??_ADC_GetConversionResult	;volatile
  7009   002786  6A07               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7010   002788  C006  F007         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  7011   00278C  6A06               	clrf	??_ADC_GetConversionResult^0,c
  7012   00278E  2606               	addwf	??_ADC_GetConversionResult^0,f,c
  7013   002790  0E00               	movlw	0
  7014   002792  2207               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  7015   002794  C004  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  7016   002798  C005  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  7017   00279C  C006  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7018   0027A0  C007  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7019                           
  7020                           ;MCAL_Layer/ADC/hal_adc.c: 189:         }
  7021   0027A4  EFFB  F013         	goto	l6201
  7022   0027A8                     l6195:
  7023   0027A8  EE20 F006          	lfsr	2,6
  7024   0027AC  5002               	movf	ADC_GetConversionResult@_adc^0,w,c
  7025   0027AE  26D9               	addwf	fsr2l,f,c
  7026   0027B0  5003               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  7027   0027B2  22DA               	addwfc	fsr2h,f,c
  7028   0027B4  B2DF               	btfsc	indf2,1,c
  7029   0027B6  EFDF  F013         	goto	u4311
  7030   0027BA  EFE1  F013         	goto	u4310
  7031   0027BE                     u4311:
  7032   0027BE  EFC0  F013         	goto	l6193
  7033   0027C2                     u4310:
  7034   0027C2                     
  7035                           ;MCAL_Layer/ADC/hal_adc.c: 191:             *conversion_result = (adc_result_t)(((ADRESH
      +                           << 8) + ADRESL) >> 6);
  7036   0027C2  50C3               	movf	195,w,c	;volatile
  7037   0027C4  CFC4 F006          	movff	4036,??_ADC_GetConversionResult	;volatile
  7038   0027C8  6A07               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7039   0027CA  C006  F007         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  7040   0027CE  6A06               	clrf	??_ADC_GetConversionResult^0,c
  7041   0027D0  2606               	addwf	??_ADC_GetConversionResult^0,f,c
  7042   0027D2  0E00               	movlw	0
  7043   0027D4  2207               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  7044   0027D6  0E06               	movlw	6
  7045   0027D8  6E08               	movwf	(??_ADC_GetConversionResult+2)^0,c
  7046   0027DA                     u4325:
  7047   0027DA  3407               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  7048   0027DC  3207               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  7049   0027DE  3206               	rrcf	??_ADC_GetConversionResult^0,f,c
  7050   0027E0  2E08               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  7051   0027E2  EFED  F013         	goto	u4325
  7052   0027E6  C004  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  7053   0027EA  C005  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  7054   0027EE  C006  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7055   0027F2  C007  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7056   0027F6                     l6201:
  7057                           
  7058                           ;MCAL_Layer/ADC/hal_adc.c: 196:         ret = (Std_ReturnType)0x01;
  7059   0027F6  0E01               	movlw	1
  7060   0027F8  6E09               	movwf	ADC_GetConversionResult@ret^0,c
  7061   0027FA                     l6203:
  7062                           
  7063                           ;MCAL_Layer/ADC/hal_adc.c: 198:     return ret;
  7064   0027FA  5009               	movf	ADC_GetConversionResult@ret^0,w,c
  7065   0027FC  0012               	return		;funcret
  7066   0027FE                     __end_of_ADC_GetConversionResult:
  7067                           	callstack 0
  7068                           
  7069 ;; *************** function _InterruptManager *****************
  7070 ;; Defined at:
  7071 ;;		line 57 in file "MCAL_Layer/interrupt/mcal_interrupt_manager.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7089 ;;Total ram usage:        0 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 1
  7092 ;; This function calls:
  7093 ;;		_ADC_ISR
  7094 ;;		_EUSART_RX_ISR
  7095 ;;		_EUSART_TX_ISR
  7096 ;;		_INT0_ISR
  7097 ;;		_INT1_ISR
  7098 ;;		_INT2_ISR
  7099 ;;		_RB4_ISR
  7100 ;;		_RB5_ISR
  7101 ;;		_RB6_ISR
  7102 ;;		_RB7_ISR
  7103 ;; This function is called by:
  7104 ;;		Interrupt level 2
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	intcode
  7109   000008                     __pintcode:
  7110                           	callstack 0
  7111   000008                     _InterruptManager:
  7112                           	callstack 20
  7113                           
  7114                           ;incstack = 0
  7115   000008  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7116   00000A  EDB1  F00B         	call	int_func,f	;refresh shadow registers
  7117                           
  7118                           	psect	intcode_body
  7119   001762                     __pintcode_body:
  7120                           	callstack 20
  7121   001762                     int_func:
  7122                           	callstack 20
  7123   001762  0006               	pop		; remove dummy address from shadow register refresh
  7124   001764                     
  7125                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 59:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  7126   001764  A8F2               	btfss	242,4,c	;volatile
  7127   001766  EFB7  F00B         	goto	i2u589_41
  7128   00176A  EFB9  F00B         	goto	i2u589_40
  7129   00176E                     i2u589_41:
  7130   00176E  EFC2  F00B         	goto	i2l1103
  7131   001772                     i2u589_40:
  7132   001772  A2F2               	btfss	242,1,c	;volatile
  7133   001774  EFBE  F00B         	goto	i2u590_41
  7134   001778  EFC0  F00B         	goto	i2u590_40
  7135   00177C                     i2u590_41:
  7136   00177C  EFC2  F00B         	goto	i2l1103
  7137   001780                     i2u590_40:
  7138   001780                     
  7139                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 60:         INT0_ISR();
  7140   001780  EC36  F01A         	call	_INT0_ISR	;wreg free
  7141   001784                     i2l1103:
  7142                           
  7143                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 63:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
  7144   001784  A6F0               	btfss	240,3,c	;volatile
  7145   001786  EFC7  F00B         	goto	i2u591_41
  7146   00178A  EFC9  F00B         	goto	i2u591_40
  7147   00178E                     i2u591_41:
  7148   00178E  EFD2  F00B         	goto	i2l1105
  7149   001792                     i2u591_40:
  7150   001792  A0F0               	btfss	240,0,c	;volatile
  7151   001794  EFCE  F00B         	goto	i2u592_41
  7152   001798  EFD0  F00B         	goto	i2u592_40
  7153   00179C                     i2u592_41:
  7154   00179C  EFD2  F00B         	goto	i2l1105
  7155   0017A0                     i2u592_40:
  7156   0017A0                     
  7157                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 64:         INT1_ISR();
  7158   0017A0  EC34  F01A         	call	_INT1_ISR	;wreg free
  7159   0017A4                     i2l1105:
  7160                           
  7161                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 67:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  7162   0017A4  A8F0               	btfss	240,4,c	;volatile
  7163   0017A6  EFD7  F00B         	goto	i2u593_41
  7164   0017AA  EFD9  F00B         	goto	i2u593_40
  7165   0017AE                     i2u593_41:
  7166   0017AE  EFE2  F00B         	goto	i2l1107
  7167   0017B2                     i2u593_40:
  7168   0017B2  A2F0               	btfss	240,1,c	;volatile
  7169   0017B4  EFDE  F00B         	goto	i2u594_41
  7170   0017B8  EFE0  F00B         	goto	i2u594_40
  7171   0017BC                     i2u594_41:
  7172   0017BC  EFE2  F00B         	goto	i2l1107
  7173   0017C0                     i2u594_40:
  7174   0017C0                     
  7175                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 68:         INT2_ISR();
  7176   0017C0  EC32  F01A         	call	_INT2_ISR	;wreg free
  7177   0017C4                     i2l1107:
  7178                           
  7179                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 74:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  7180   0017C4  A6F2               	btfss	242,3,c	;volatile
  7181   0017C6  EFE7  F00B         	goto	i2u595_41
  7182   0017CA  EFE9  F00B         	goto	i2u595_40
  7183   0017CE                     i2u595_41:
  7184   0017CE  EF04  F00C         	goto	i2l1109
  7185   0017D2                     i2u595_40:
  7186   0017D2  A0F2               	btfss	242,0,c	;volatile
  7187   0017D4  EFEE  F00B         	goto	i2u596_41
  7188   0017D8  EFF0  F00B         	goto	i2u596_40
  7189   0017DC                     i2u596_41:
  7190   0017DC  EF04  F00C         	goto	i2l1109
  7191   0017E0                     i2u596_40:
  7192   0017E0  A881               	btfss	129,4,c	;volatile
  7193   0017E2  EFF5  F00B         	goto	i2u597_41
  7194   0017E6  EFF7  F00B         	goto	i2u597_40
  7195   0017EA                     i2u597_41:
  7196   0017EA  EF04  F00C         	goto	i2l1109
  7197   0017EE                     i2u597_40:
  7198   0017EE  047B               	decf	_RB4_Flag^0,w,c	;volatile
  7199   0017F0  A4D8               	btfss	status,2,c
  7200   0017F2  EFFD  F00B         	goto	i2u598_41
  7201   0017F6  EFFF  F00B         	goto	i2u598_40
  7202   0017FA                     i2u598_41:
  7203   0017FA  EF04  F00C         	goto	i2l1109
  7204   0017FE                     i2u598_40:
  7205   0017FE                     
  7206                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 75:        (PORTBbits.RB4 == GPIO_HIGH) 
      +                          && (RB4_Flag == 1)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 76:         RB4_Flag
      +                           = 0;
  7207   0017FE  0E00               	movlw	0
  7208   001800  6E7B               	movwf	_RB4_Flag^0,c	;volatile
  7209   001802                     
  7210                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 77:         RB4_ISR(0);
  7211   001802  0E00               	movlw	0
  7212   001804  EC21  F01A         	call	_RB4_ISR
  7213   001808                     i2l1109:
  7214                           
  7215                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 80:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  7216   001808  A6F2               	btfss	242,3,c	;volatile
  7217   00180A  EF09  F00C         	goto	i2u599_41
  7218   00180E  EF0B  F00C         	goto	i2u599_40
  7219   001812                     i2u599_41:
  7220   001812  EF26  F00C         	goto	i2l1111
  7221   001816                     i2u599_40:
  7222   001816  A0F2               	btfss	242,0,c	;volatile
  7223   001818  EF10  F00C         	goto	i2u600_41
  7224   00181C  EF12  F00C         	goto	i2u600_40
  7225   001820                     i2u600_41:
  7226   001820  EF26  F00C         	goto	i2l1111
  7227   001824                     i2u600_40:
  7228   001824  B881               	btfsc	129,4,c	;volatile
  7229   001826  EF17  F00C         	goto	i2u601_41
  7230   00182A  EF19  F00C         	goto	i2u601_40
  7231   00182E                     i2u601_41:
  7232   00182E  EF26  F00C         	goto	i2l1111
  7233   001832                     i2u601_40:
  7234   001832  507B               	movf	_RB4_Flag^0,w,c	;volatile
  7235   001834  A4D8               	btfss	status,2,c
  7236   001836  EF1F  F00C         	goto	i2u602_41
  7237   00183A  EF21  F00C         	goto	i2u602_40
  7238   00183E                     i2u602_41:
  7239   00183E  EF26  F00C         	goto	i2l1111
  7240   001842                     i2u602_40:
  7241   001842                     
  7242                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 81:        (PORTBbits.RB4 == GPIO_LOW) &
      +                          & (RB4_Flag == 0)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 82:         RB4_Flag 
      +                          = 1;
  7243   001842  0E01               	movlw	1
  7244   001844  6E7B               	movwf	_RB4_Flag^0,c	;volatile
  7245   001846                     
  7246                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 83:         RB4_ISR(1);
  7247   001846  0E01               	movlw	1
  7248   001848  EC21  F01A         	call	_RB4_ISR
  7249   00184C                     i2l1111:
  7250                           
  7251                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 86:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  7252   00184C  A6F2               	btfss	242,3,c	;volatile
  7253   00184E  EF2B  F00C         	goto	i2u603_41
  7254   001852  EF2D  F00C         	goto	i2u603_40
  7255   001856                     i2u603_41:
  7256   001856  EF48  F00C         	goto	i2l1113
  7257   00185A                     i2u603_40:
  7258   00185A  A0F2               	btfss	242,0,c	;volatile
  7259   00185C  EF32  F00C         	goto	i2u604_41
  7260   001860  EF34  F00C         	goto	i2u604_40
  7261   001864                     i2u604_41:
  7262   001864  EF48  F00C         	goto	i2l1113
  7263   001868                     i2u604_40:
  7264   001868  AA81               	btfss	129,5,c	;volatile
  7265   00186A  EF39  F00C         	goto	i2u605_41
  7266   00186E  EF3B  F00C         	goto	i2u605_40
  7267   001872                     i2u605_41:
  7268   001872  EF48  F00C         	goto	i2l1113
  7269   001876                     i2u605_40:
  7270   001876  047A               	decf	_RB5_Flag^0,w,c	;volatile
  7271   001878  A4D8               	btfss	status,2,c
  7272   00187A  EF41  F00C         	goto	i2u606_41
  7273   00187E  EF43  F00C         	goto	i2u606_40
  7274   001882                     i2u606_41:
  7275   001882  EF48  F00C         	goto	i2l1113
  7276   001886                     i2u606_40:
  7277   001886                     
  7278                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 87:        (PORTBbits.RB5 == GPIO_HIGH) 
      +                          && (RB5_Flag == 1)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 88:         RB5_Flag
      +                           = 0;
  7279   001886  0E00               	movlw	0
  7280   001888  6E7A               	movwf	_RB5_Flag^0,c	;volatile
  7281   00188A                     
  7282                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 89:         RB5_ISR(0);
  7283   00188A  0E00               	movlw	0
  7284   00188C  EC14  F01A         	call	_RB5_ISR
  7285   001890                     i2l1113:
  7286                           
  7287                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 92:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  7288   001890  A6F2               	btfss	242,3,c	;volatile
  7289   001892  EF4D  F00C         	goto	i2u607_41
  7290   001896  EF4F  F00C         	goto	i2u607_40
  7291   00189A                     i2u607_41:
  7292   00189A  EF6A  F00C         	goto	i2l1115
  7293   00189E                     i2u607_40:
  7294   00189E  A0F2               	btfss	242,0,c	;volatile
  7295   0018A0  EF54  F00C         	goto	i2u608_41
  7296   0018A4  EF56  F00C         	goto	i2u608_40
  7297   0018A8                     i2u608_41:
  7298   0018A8  EF6A  F00C         	goto	i2l1115
  7299   0018AC                     i2u608_40:
  7300   0018AC  BA81               	btfsc	129,5,c	;volatile
  7301   0018AE  EF5B  F00C         	goto	i2u609_41
  7302   0018B2  EF5D  F00C         	goto	i2u609_40
  7303   0018B6                     i2u609_41:
  7304   0018B6  EF6A  F00C         	goto	i2l1115
  7305   0018BA                     i2u609_40:
  7306   0018BA  507A               	movf	_RB5_Flag^0,w,c	;volatile
  7307   0018BC  A4D8               	btfss	status,2,c
  7308   0018BE  EF63  F00C         	goto	i2u610_41
  7309   0018C2  EF65  F00C         	goto	i2u610_40
  7310   0018C6                     i2u610_41:
  7311   0018C6  EF6A  F00C         	goto	i2l1115
  7312   0018CA                     i2u610_40:
  7313   0018CA                     
  7314                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 93:        (PORTBbits.RB5 == GPIO_LOW) &
      +                          & (RB5_Flag == 0)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 94:         RB5_Flag 
      +                          = 1;
  7315   0018CA  0E01               	movlw	1
  7316   0018CC  6E7A               	movwf	_RB5_Flag^0,c	;volatile
  7317   0018CE                     
  7318                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 95:         RB5_ISR(1);
  7319   0018CE  0E01               	movlw	1
  7320   0018D0  EC14  F01A         	call	_RB5_ISR
  7321   0018D4                     i2l1115:
  7322                           
  7323                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 98:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  7324   0018D4  A6F2               	btfss	242,3,c	;volatile
  7325   0018D6  EF6F  F00C         	goto	i2u611_41
  7326   0018DA  EF71  F00C         	goto	i2u611_40
  7327   0018DE                     i2u611_41:
  7328   0018DE  EF8C  F00C         	goto	i2l1117
  7329   0018E2                     i2u611_40:
  7330   0018E2  A0F2               	btfss	242,0,c	;volatile
  7331   0018E4  EF76  F00C         	goto	i2u612_41
  7332   0018E8  EF78  F00C         	goto	i2u612_40
  7333   0018EC                     i2u612_41:
  7334   0018EC  EF8C  F00C         	goto	i2l1117
  7335   0018F0                     i2u612_40:
  7336   0018F0  AC81               	btfss	129,6,c	;volatile
  7337   0018F2  EF7D  F00C         	goto	i2u613_41
  7338   0018F6  EF7F  F00C         	goto	i2u613_40
  7339   0018FA                     i2u613_41:
  7340   0018FA  EF8C  F00C         	goto	i2l1117
  7341   0018FE                     i2u613_40:
  7342   0018FE  0479               	decf	_RB6_Flag^0,w,c	;volatile
  7343   001900  A4D8               	btfss	status,2,c
  7344   001902  EF85  F00C         	goto	i2u614_41
  7345   001906  EF87  F00C         	goto	i2u614_40
  7346   00190A                     i2u614_41:
  7347   00190A  EF8C  F00C         	goto	i2l1117
  7348   00190E                     i2u614_40:
  7349   00190E                     
  7350                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 99:        (PORTBbits.RB6 == GPIO_HIGH) 
      +                          && (RB6_Flag == 1)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 100:         RB6_Fla
      +                          g = 0;
  7351   00190E  0E00               	movlw	0
  7352   001910  6E79               	movwf	_RB6_Flag^0,c	;volatile
  7353   001912                     
  7354                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 101:         RB6_ISR(0);
  7355   001912  0E00               	movlw	0
  7356   001914  EC07  F01A         	call	_RB6_ISR
  7357   001918                     i2l1117:
  7358                           
  7359                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 104:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  7360   001918  A6F2               	btfss	242,3,c	;volatile
  7361   00191A  EF91  F00C         	goto	i2u615_41
  7362   00191E  EF93  F00C         	goto	i2u615_40
  7363   001922                     i2u615_41:
  7364   001922  EFAE  F00C         	goto	i2l1119
  7365   001926                     i2u615_40:
  7366   001926  A0F2               	btfss	242,0,c	;volatile
  7367   001928  EF98  F00C         	goto	i2u616_41
  7368   00192C  EF9A  F00C         	goto	i2u616_40
  7369   001930                     i2u616_41:
  7370   001930  EFAE  F00C         	goto	i2l1119
  7371   001934                     i2u616_40:
  7372   001934  BC81               	btfsc	129,6,c	;volatile
  7373   001936  EF9F  F00C         	goto	i2u617_41
  7374   00193A  EFA1  F00C         	goto	i2u617_40
  7375   00193E                     i2u617_41:
  7376   00193E  EFAE  F00C         	goto	i2l1119
  7377   001942                     i2u617_40:
  7378   001942  5079               	movf	_RB6_Flag^0,w,c	;volatile
  7379   001944  A4D8               	btfss	status,2,c
  7380   001946  EFA7  F00C         	goto	i2u618_41
  7381   00194A  EFA9  F00C         	goto	i2u618_40
  7382   00194E                     i2u618_41:
  7383   00194E  EFAE  F00C         	goto	i2l1119
  7384   001952                     i2u618_40:
  7385   001952                     
  7386                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 105:        (PORTBbits.RB6 == GPIO_LOW) 
      +                          && (RB6_Flag == 0)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 106:         RB6_Fla
      +                          g = 1;
  7387   001952  0E01               	movlw	1
  7388   001954  6E79               	movwf	_RB6_Flag^0,c	;volatile
  7389   001956                     
  7390                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 107:         RB6_ISR(1);
  7391   001956  0E01               	movlw	1
  7392   001958  EC07  F01A         	call	_RB6_ISR
  7393   00195C                     i2l1119:
  7394                           
  7395                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 110:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  7396   00195C  A6F2               	btfss	242,3,c	;volatile
  7397   00195E  EFB3  F00C         	goto	i2u619_41
  7398   001962  EFB5  F00C         	goto	i2u619_40
  7399   001966                     i2u619_41:
  7400   001966  EFD0  F00C         	goto	i2l1121
  7401   00196A                     i2u619_40:
  7402   00196A  A0F2               	btfss	242,0,c	;volatile
  7403   00196C  EFBA  F00C         	goto	i2u620_41
  7404   001970  EFBC  F00C         	goto	i2u620_40
  7405   001974                     i2u620_41:
  7406   001974  EFD0  F00C         	goto	i2l1121
  7407   001978                     i2u620_40:
  7408   001978  AE81               	btfss	129,7,c	;volatile
  7409   00197A  EFC1  F00C         	goto	i2u621_41
  7410   00197E  EFC3  F00C         	goto	i2u621_40
  7411   001982                     i2u621_41:
  7412   001982  EFD0  F00C         	goto	i2l1121
  7413   001986                     i2u621_40:
  7414   001986  0478               	decf	_RB7_Flag^0,w,c	;volatile
  7415   001988  A4D8               	btfss	status,2,c
  7416   00198A  EFC9  F00C         	goto	i2u622_41
  7417   00198E  EFCB  F00C         	goto	i2u622_40
  7418   001992                     i2u622_41:
  7419   001992  EFD0  F00C         	goto	i2l1121
  7420   001996                     i2u622_40:
  7421   001996                     
  7422                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 111:        (PORTBbits.RB7 == GPIO_HIGH)
      +                           && (RB7_Flag == 1)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 112:         RB7_Fl
      +                          ag = 0;
  7423   001996  0E00               	movlw	0
  7424   001998  6E78               	movwf	_RB7_Flag^0,c	;volatile
  7425   00199A                     
  7426                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 113:         RB7_ISR(0);
  7427   00199A  0E00               	movlw	0
  7428   00199C  ECFA  F019         	call	_RB7_ISR
  7429   0019A0                     i2l1121:
  7430                           
  7431                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 116:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  7432   0019A0  A6F2               	btfss	242,3,c	;volatile
  7433   0019A2  EFD5  F00C         	goto	i2u623_41
  7434   0019A6  EFD7  F00C         	goto	i2u623_40
  7435   0019AA                     i2u623_41:
  7436   0019AA  EFF2  F00C         	goto	i2l1123
  7437   0019AE                     i2u623_40:
  7438   0019AE  A0F2               	btfss	242,0,c	;volatile
  7439   0019B0  EFDC  F00C         	goto	i2u624_41
  7440   0019B4  EFDE  F00C         	goto	i2u624_40
  7441   0019B8                     i2u624_41:
  7442   0019B8  EFF2  F00C         	goto	i2l1123
  7443   0019BC                     i2u624_40:
  7444   0019BC  BE81               	btfsc	129,7,c	;volatile
  7445   0019BE  EFE3  F00C         	goto	i2u625_41
  7446   0019C2  EFE5  F00C         	goto	i2u625_40
  7447   0019C6                     i2u625_41:
  7448   0019C6  EFF2  F00C         	goto	i2l1123
  7449   0019CA                     i2u625_40:
  7450   0019CA  5078               	movf	_RB7_Flag^0,w,c	;volatile
  7451   0019CC  A4D8               	btfss	status,2,c
  7452   0019CE  EFEB  F00C         	goto	i2u626_41
  7453   0019D2  EFED  F00C         	goto	i2u626_40
  7454   0019D6                     i2u626_41:
  7455   0019D6  EFF2  F00C         	goto	i2l1123
  7456   0019DA                     i2u626_40:
  7457   0019DA                     
  7458                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 117:        (PORTBbits.RB7 == GPIO_LOW) 
      +                          && (RB7_Flag == 0)){;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 118:         RB7_Fla
      +                          g = 1;
  7459   0019DA  0E01               	movlw	1
  7460   0019DC  6E78               	movwf	_RB7_Flag^0,c	;volatile
  7461   0019DE                     
  7462                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 119:         RB7_ISR(1);
  7463   0019DE  0E01               	movlw	1
  7464   0019E0  ECFA  F019         	call	_RB7_ISR
  7465   0019E4                     i2l1123:
  7466                           
  7467                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 130:       if((1 == PIE1bits.ADIE) && (1
      +                           == PIR1bits.ADIF)){
  7468   0019E4  AC9D               	btfss	157,6,c	;volatile
  7469   0019E6  EFF7  F00C         	goto	i2u627_41
  7470   0019EA  EFF9  F00C         	goto	i2u627_40
  7471   0019EE                     i2u627_41:
  7472   0019EE  EF02  F00D         	goto	i2l1125
  7473   0019F2                     i2u627_40:
  7474   0019F2  AC9E               	btfss	158,6,c	;volatile
  7475   0019F4  EFFE  F00C         	goto	i2u628_41
  7476   0019F8  EF00  F00D         	goto	i2u628_40
  7477   0019FC                     i2u628_41:
  7478   0019FC  EF02  F00D         	goto	i2l1125
  7479   001A00                     i2u628_40:
  7480   001A00                     
  7481                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 131:       ADC_ISR();
  7482   001A00  EC3A  F01A         	call	_ADC_ISR	;wreg free
  7483   001A04                     i2l1125:
  7484                           
  7485                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 192:        if((1 == PIE1bits.TXIE) && (
      +                          1 == PIR1bits.TXIF)){
  7486   001A04  A89D               	btfss	157,4,c	;volatile
  7487   001A06  EF07  F00D         	goto	i2u629_41
  7488   001A0A  EF09  F00D         	goto	i2u629_40
  7489   001A0E                     i2u629_41:
  7490   001A0E  EF12  F00D         	goto	i2l1127
  7491   001A12                     i2u629_40:
  7492   001A12  A89E               	btfss	158,4,c	;volatile
  7493   001A14  EF0E  F00D         	goto	i2u630_41
  7494   001A18  EF10  F00D         	goto	i2u630_40
  7495   001A1C                     i2u630_41:
  7496   001A1C  EF12  F00D         	goto	i2l1127
  7497   001A20                     i2u630_40:
  7498   001A20                     
  7499                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 193:         EUSART_TX_ISR();
  7500   001A20  EC38  F01A         	call	_EUSART_TX_ISR	;wreg free
  7501   001A24                     i2l1127:
  7502                           
  7503                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 199:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
  7504   001A24  AA9D               	btfss	157,5,c	;volatile
  7505   001A26  EF17  F00D         	goto	i2u631_41
  7506   001A2A  EF19  F00D         	goto	i2u631_40
  7507   001A2E                     i2u631_41:
  7508   001A2E  EF22  F00D         	goto	i2l1130
  7509   001A32                     i2u631_40:
  7510   001A32  AA9E               	btfss	158,5,c	;volatile
  7511   001A34  EF1E  F00D         	goto	i2u632_41
  7512   001A38  EF20  F00D         	goto	i2u632_40
  7513   001A3C                     i2u632_41:
  7514   001A3C  EF22  F00D         	goto	i2l1130
  7515   001A40                     i2u632_40:
  7516   001A40                     
  7517                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 200:         EUSART_RX_ISR();
  7518   001A40  EC3D  F01A         	call	_EUSART_RX_ISR	;wreg free
  7519   001A44                     i2l1130:
  7520   001A44  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7521   001A46  0011               	retfie		f
  7522   001A48                     __end_of_InterruptManager:
  7523                           	callstack 0
  7524                           
  7525 ;; *************** function _RB7_ISR *****************
  7526 ;; Defined at:
  7527 ;;		line 166 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;  RB7_Source      1    wreg     unsigned char 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  1    wreg      void 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7545 ;;Total ram usage:        1 bytes
  7546 ;; Hardware stack levels used: 1
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		_InterruptManager
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554                           	psect	text44
  7555   0033F4                     __ptext44:
  7556                           	callstack 0
  7557   0033F4                     _RB7_ISR:
  7558                           	callstack 20
  7559                           
  7560                           ;incstack = 0
  7561                           ;RB7_ISR@RB7_Source stored from wreg
  7562   0033F4  6E01               	movwf	RB7_ISR@RB7_Source^0,c
  7563   0033F6                     
  7564                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 168:     (INTCONbits.RBIF = 0);
  7565   0033F6  90F2               	bcf	242,0,c	;volatile
  7566   0033F8                     
  7567                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 171:     if(0 == RB7_Source){
  7568   0033F8  5001               	movf	RB7_ISR@RB7_Source^0,w,c
  7569   0033FA  A4D8               	btfss	status,2,c
  7570   0033FC  EF02  F01A         	goto	i2u459_41
  7571   003400  EF04  F01A         	goto	i2u459_40
  7572   003404                     i2u459_41:
  7573   003404  EF06  F01A         	goto	i2l6465
  7574   003408                     i2u459_40:
  7575   003408  EF06  F01A         	goto	i2l950
  7576   00340C                     i2l6465:
  7577   00340C                     i2l950:
  7578   00340C  0012               	return		;funcret
  7579   00340E                     __end_of_RB7_ISR:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function _RB6_ISR *****************
  7583 ;; Defined at:
  7584 ;;		line 147 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  RB6_Source      1    wreg     unsigned char 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      void 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;Total ram usage:        1 bytes
  7603 ;; Hardware stack levels used: 1
  7604 ;; This function calls:
  7605 ;;		Nothing
  7606 ;; This function is called by:
  7607 ;;		_InterruptManager
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           	psect	text45
  7612   00340E                     __ptext45:
  7613                           	callstack 0
  7614   00340E                     _RB6_ISR:
  7615                           	callstack 20
  7616                           
  7617                           ;incstack = 0
  7618                           ;RB6_ISR@RB6_Source stored from wreg
  7619   00340E  6E01               	movwf	RB6_ISR@RB6_Source^0,c
  7620   003410                     
  7621                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 149:     (INTCONbits.RBIF = 0);
  7622   003410  90F2               	bcf	242,0,c	;volatile
  7623   003412                     
  7624                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 152:     if(0 == RB6_Source){
  7625   003412  5001               	movf	RB6_ISR@RB6_Source^0,w,c
  7626   003414  A4D8               	btfss	status,2,c
  7627   003416  EF0F  F01A         	goto	i2u458_41
  7628   00341A  EF11  F01A         	goto	i2u458_40
  7629   00341E                     i2u458_41:
  7630   00341E  EF13  F01A         	goto	i2l6451
  7631   003422                     i2u458_40:
  7632   003422  EF13  F01A         	goto	i2l939
  7633   003426                     i2l6451:
  7634   003426                     i2l939:
  7635   003426  0012               	return		;funcret
  7636   003428                     __end_of_RB6_ISR:
  7637                           	callstack 0
  7638                           
  7639 ;; *************** function _RB5_ISR *****************
  7640 ;; Defined at:
  7641 ;;		line 128 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;  RB5_Source      1    wreg     unsigned char 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      void 
  7648 ;; Registers used:
  7649 ;;		wreg, status,2, status,0
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7659 ;;Total ram usage:        1 bytes
  7660 ;; Hardware stack levels used: 1
  7661 ;; This function calls:
  7662 ;;		Nothing
  7663 ;; This function is called by:
  7664 ;;		_InterruptManager
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text46
  7669   003428                     __ptext46:
  7670                           	callstack 0
  7671   003428                     _RB5_ISR:
  7672                           	callstack 20
  7673                           
  7674                           ;incstack = 0
  7675                           ;RB5_ISR@RB5_Source stored from wreg
  7676   003428  6E01               	movwf	RB5_ISR@RB5_Source^0,c
  7677   00342A                     
  7678                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 130:     (INTCONbits.RBIF = 0);
  7679   00342A  90F2               	bcf	242,0,c	;volatile
  7680   00342C                     
  7681                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 133:     if(0 == RB5_Source){
  7682   00342C  5001               	movf	RB5_ISR@RB5_Source^0,w,c
  7683   00342E  A4D8               	btfss	status,2,c
  7684   003430  EF1C  F01A         	goto	i2u457_41
  7685   003434  EF1E  F01A         	goto	i2u457_40
  7686   003438                     i2u457_41:
  7687   003438  EF20  F01A         	goto	i2l6437
  7688   00343C                     i2u457_40:
  7689   00343C  EF20  F01A         	goto	i2l928
  7690   003440                     i2l6437:
  7691   003440                     i2l928:
  7692   003440  0012               	return		;funcret
  7693   003442                     __end_of_RB5_ISR:
  7694                           	callstack 0
  7695                           
  7696 ;; *************** function _RB4_ISR *****************
  7697 ;; Defined at:
  7698 ;;		line 109 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;  RB4_Source      1    wreg     unsigned char 
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  1    wreg      void 
  7705 ;; Registers used:
  7706 ;;		wreg, status,2, status,0
  7707 ;; Tracked objects:
  7708 ;;		On entry : 0/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;Total ram usage:        1 bytes
  7717 ;; Hardware stack levels used: 1
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_InterruptManager
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text47
  7726   003442                     __ptext47:
  7727                           	callstack 0
  7728   003442                     _RB4_ISR:
  7729                           	callstack 20
  7730                           
  7731                           ;incstack = 0
  7732                           ;RB4_ISR@RB4_Source stored from wreg
  7733   003442  6E01               	movwf	RB4_ISR@RB4_Source^0,c
  7734   003444                     
  7735                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 111:     (INTCONbits.RBIF = 0);
  7736   003444  90F2               	bcf	242,0,c	;volatile
  7737   003446                     
  7738                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 114:     if(0 == RB4_Source){
  7739   003446  5001               	movf	RB4_ISR@RB4_Source^0,w,c
  7740   003448  A4D8               	btfss	status,2,c
  7741   00344A  EF29  F01A         	goto	i2u456_41
  7742   00344E  EF2B  F01A         	goto	i2u456_40
  7743   003452                     i2u456_41:
  7744   003452  EF2D  F01A         	goto	i2l6423
  7745   003456                     i2u456_40:
  7746   003456  EF2D  F01A         	goto	i2l917
  7747   00345A                     i2l6423:
  7748   00345A                     i2l917:
  7749   00345A  0012               	return		;funcret
  7750   00345C                     __end_of_RB4_ISR:
  7751                           	callstack 0
  7752                           
  7753 ;; *************** function _INT2_ISR *****************
  7754 ;; Defined at:
  7755 ;;		line 97 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;		None
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;		None
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1    wreg      void 
  7762 ;; Registers used:
  7763 ;;		None
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;Total ram usage:        0 bytes
  7774 ;; Hardware stack levels used: 1
  7775 ;; This function calls:
  7776 ;;		Nothing
  7777 ;; This function is called by:
  7778 ;;		_InterruptManager
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text48
  7783   003464                     __ptext48:
  7784                           	callstack 0
  7785   003464                     _INT2_ISR:
  7786                           	callstack 20
  7787   003464                     
  7788                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 99:     (INTCON3bits.INT2IF = 0);
  7789   003464  92F0               	bcf	240,1,c	;volatile
  7790   003466  0012               	return		;funcret
  7791   003468                     __end_of_INT2_ISR:
  7792                           	callstack 0
  7793                           
  7794 ;; *************** function _INT1_ISR *****************
  7795 ;; Defined at:
  7796 ;;		line 88 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;		None
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;		None
  7801 ;; Return value:  Size  Location     Type
  7802 ;;                  1    wreg      void 
  7803 ;; Registers used:
  7804 ;;		None
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7814 ;;Total ram usage:        0 bytes
  7815 ;; Hardware stack levels used: 1
  7816 ;; This function calls:
  7817 ;;		Nothing
  7818 ;; This function is called by:
  7819 ;;		_InterruptManager
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           
  7823                           	psect	text49
  7824   003468                     __ptext49:
  7825                           	callstack 0
  7826   003468                     _INT1_ISR:
  7827                           	callstack 20
  7828   003468                     
  7829                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 90:     (INTCON3bits.INT1IF = 0);
  7830   003468  90F0               	bcf	240,0,c	;volatile
  7831   00346A  0012               	return		;funcret
  7832   00346C                     __end_of_INT1_ISR:
  7833                           	callstack 0
  7834                           
  7835 ;; *************** function _INT0_ISR *****************
  7836 ;; Defined at:
  7837 ;;		line 75 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;		None
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;		None
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  1    wreg      void 
  7844 ;; Registers used:
  7845 ;;		None
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7855 ;;Total ram usage:        0 bytes
  7856 ;; Hardware stack levels used: 1
  7857 ;; This function calls:
  7858 ;;		Nothing
  7859 ;; This function is called by:
  7860 ;;		_InterruptManager
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text50
  7865   00346C                     __ptext50:
  7866                           	callstack 0
  7867   00346C                     _INT0_ISR:
  7868                           	callstack 20
  7869   00346C                     
  7870                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 77:     (INTCONbits.INT0IF = 0);
  7871   00346C  92F2               	bcf	242,1,c	;volatile
  7872   00346E  0012               	return		;funcret
  7873   003470                     __end_of_INT0_ISR:
  7874                           	callstack 0
  7875                           
  7876 ;; *************** function _EUSART_TX_ISR *****************
  7877 ;; Defined at:
  7878 ;;		line 246 in file "MCAL_Layer/usart/hal_usart.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;		None
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;		None
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  1    wreg      void 
  7885 ;; Registers used:
  7886 ;;		None
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;Total ram usage:        0 bytes
  7897 ;; Hardware stack levels used: 1
  7898 ;; This function calls:
  7899 ;;		Nothing
  7900 ;; This function is called by:
  7901 ;;		_InterruptManager
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text51
  7906   003470                     __ptext51:
  7907                           	callstack 0
  7908   003470                     _EUSART_TX_ISR:
  7909                           	callstack 20
  7910   003470                     
  7911                           ;MCAL_Layer/usart/hal_usart.c: 247:     (PIE1bits.TXIE = 0);
  7912   003470  989D               	bcf	157,4,c	;volatile
  7913   003472  0012               	return		;funcret
  7914   003474                     __end_of_EUSART_TX_ISR:
  7915                           	callstack 0
  7916                           
  7917 ;; *************** function _EUSART_RX_ISR *****************
  7918 ;; Defined at:
  7919 ;;		line 256 in file "MCAL_Layer/usart/hal_usart.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;		None
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;		None
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  1    wreg      void 
  7926 ;; Registers used:
  7927 ;;		wreg, status,2, status,0
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7937 ;;Total ram usage:        0 bytes
  7938 ;; Hardware stack levels used: 1
  7939 ;; This function calls:
  7940 ;;		Nothing
  7941 ;; This function is called by:
  7942 ;;		_InterruptManager
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text52
  7947   00347A                     __ptext52:
  7948                           	callstack 0
  7949   00347A                     _EUSART_RX_ISR:
  7950                           	callstack 20
  7951   00347A  0012               	return		;funcret
  7952   00347C                     __end_of_EUSART_RX_ISR:
  7953                           	callstack 0
  7954                           
  7955 ;; *************** function _ADC_ISR *****************
  7956 ;; Defined at:
  7957 ;;		line 302 in file "MCAL_Layer/ADC/hal_adc.c"
  7958 ;; Parameters:    Size  Location     Type
  7959 ;;		None
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;		None
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  1    wreg      void 
  7964 ;; Registers used:
  7965 ;;		None
  7966 ;; Tracked objects:
  7967 ;;		On entry : 0/0
  7968 ;;		On exit  : 0/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7975 ;;Total ram usage:        0 bytes
  7976 ;; Hardware stack levels used: 1
  7977 ;; This function calls:
  7978 ;;		Nothing
  7979 ;; This function is called by:
  7980 ;;		_InterruptManager
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text53
  7985   003474                     __ptext53:
  7986                           	callstack 0
  7987   003474                     _ADC_ISR:
  7988                           	callstack 20
  7989   003474                     
  7990                           ;MCAL_Layer/ADC/hal_adc.c: 303:     (PIR1bits.ADIF = 0);
  7991   003474  9C9E               	bcf	158,6,c	;volatile
  7992   003476  0012               	return		;funcret
  7993   003478                     __end_of_ADC_ISR:
  7994                           	callstack 0
  7995                           
  7996                           	psect	rparam
  7997   000000                     
  7998                           	psect	temp
  7999   00007E                     btemp:
  8000                           	callstack 0
  8001   00007E                     	ds	1
  8002   000000                     int$flags	set	btemp
  8003   000000                     wtemp8	set	btemp+1
  8004   000000                     ttemp5	set	btemp+1
  8005   000000                     ttemp6	set	btemp+4
  8006   000000                     ttemp7	set	btemp+8
  8007                           
  8008                           	psect	idloc
  8009                           
  8010                           ;Config register IDLOC0 @ 0x200000
  8011                           ;	unspecified, using default values
  8012   200000                     	org	2097152
  8013   200000  FF                 	db	255
  8014                           
  8015                           ;Config register IDLOC1 @ 0x200001
  8016                           ;	unspecified, using default values
  8017   200001                     	org	2097153
  8018   200001  FF                 	db	255
  8019                           
  8020                           ;Config register IDLOC2 @ 0x200002
  8021                           ;	unspecified, using default values
  8022   200002                     	org	2097154
  8023   200002  FF                 	db	255
  8024                           
  8025                           ;Config register IDLOC3 @ 0x200003
  8026                           ;	unspecified, using default values
  8027   200003                     	org	2097155
  8028   200003  FF                 	db	255
  8029                           
  8030                           ;Config register IDLOC4 @ 0x200004
  8031                           ;	unspecified, using default values
  8032   200004                     	org	2097156
  8033   200004  FF                 	db	255
  8034                           
  8035                           ;Config register IDLOC5 @ 0x200005
  8036                           ;	unspecified, using default values
  8037   200005                     	org	2097157
  8038   200005  FF                 	db	255
  8039                           
  8040                           ;Config register IDLOC6 @ 0x200006
  8041                           ;	unspecified, using default values
  8042   200006                     	org	2097158
  8043   200006  FF                 	db	255
  8044                           
  8045                           ;Config register IDLOC7 @ 0x200007
  8046                           ;	unspecified, using default values
  8047   200007                     	org	2097159
  8048   200007  FF                 	db	255
  8049                           
  8050                           	psect	config
  8051                           
  8052                           ; Padding undefined space
  8053   300000                     	org	3145728
  8054   300000  FF                 	db	255
  8055                           
  8056                           ;Config register CONFIG1H @ 0x300001
  8057                           ;	Oscillator Selection bits
  8058                           ;	OSC = HS, HS oscillator
  8059                           ;	Fail-Safe Clock Monitor Enable bit
  8060                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8061                           ;	Internal/External Oscillator Switchover bit
  8062                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8063   300001                     	org	3145729
  8064   300001  02                 	db	2
  8065                           
  8066                           ;Config register CONFIG2L @ 0x300002
  8067                           ;	Power-up Timer Enable bit
  8068                           ;	PWRT = OFF, PWRT disabled
  8069                           ;	Brown-out Reset Enable bits
  8070                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8071                           ;	Brown Out Reset Voltage bits
  8072                           ;	BORV = 1, 
  8073   300002                     	org	3145730
  8074   300002  09                 	db	9
  8075                           
  8076                           ;Config register CONFIG2H @ 0x300003
  8077                           ;	Watchdog Timer Enable bit
  8078                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8079                           ;	Watchdog Timer Postscale Select bits
  8080                           ;	WDTPS = 32768, 1:32768
  8081   300003                     	org	3145731
  8082   300003  1E                 	db	30
  8083                           
  8084                           ; Padding undefined space
  8085   300004                     	org	3145732
  8086   300004  FF                 	db	255
  8087                           
  8088                           ;Config register CONFIG3H @ 0x300005
  8089                           ;	CCP2 MUX bit
  8090                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8091                           ;	PORTB A/D Enable bit
  8092                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8093                           ;	Low-Power Timer1 Oscillator Enable bit
  8094                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8095                           ;	MCLR Pin Enable bit
  8096                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8097   300005                     	org	3145733
  8098   300005  81                 	db	129
  8099                           
  8100                           ;Config register CONFIG4L @ 0x300006
  8101                           ;	Stack Full/Underflow Reset Enable bit
  8102                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8103                           ;	Single-Supply ICSP Enable bit
  8104                           ;	LVP = OFF, Single-Supply ICSP disabled
  8105                           ;	Extended Instruction Set Enable bit
  8106                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8107                           ;	Background Debugger Enable bit
  8108                           ;	DEBUG = 0x1, unprogrammed default
  8109   300006                     	org	3145734
  8110   300006  81                 	db	129
  8111                           
  8112                           ; Padding undefined space
  8113   300007                     	org	3145735
  8114   300007  FF                 	db	255
  8115                           
  8116                           ;Config register CONFIG5L @ 0x300008
  8117                           ;	Code Protection bit
  8118                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8119                           ;	Code Protection bit
  8120                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8121                           ;	Code Protection bit
  8122                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8123                           ;	Code Protection bit
  8124                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8125   300008                     	org	3145736
  8126   300008  0F                 	db	15
  8127                           
  8128                           ;Config register CONFIG5H @ 0x300009
  8129                           ;	Boot Block Code Protection bit
  8130                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8131                           ;	Data EEPROM Code Protection bit
  8132                           ;	CPD = OFF, Data EEPROM not code-protected
  8133   300009                     	org	3145737
  8134   300009  C0                 	db	192
  8135                           
  8136                           ;Config register CONFIG6L @ 0x30000A
  8137                           ;	Write Protection bit
  8138                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8139                           ;	Write Protection bit
  8140                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8141                           ;	Write Protection bit
  8142                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8143                           ;	Write Protection bit
  8144                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8145   30000A                     	org	3145738
  8146   30000A  0F                 	db	15
  8147                           
  8148                           ;Config register CONFIG6H @ 0x30000B
  8149                           ;	Configuration Register Write Protection bit
  8150                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8151                           ;	Boot Block Write Protection bit
  8152                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8153                           ;	Data EEPROM Write Protection bit
  8154                           ;	WRTD = OFF, Data EEPROM not write-protected
  8155   30000B                     	org	3145739
  8156   30000B  E0                 	db	224
  8157                           
  8158                           ;Config register CONFIG7L @ 0x30000C
  8159                           ;	Table Read Protection bit
  8160                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8161                           ;	Table Read Protection bit
  8162                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8163                           ;	Table Read Protection bit
  8164                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8165                           ;	Table Read Protection bit
  8166                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8167   30000C                     	org	3145740
  8168   30000C  0F                 	db	15
  8169                           
  8170                           ;Config register CONFIG7H @ 0x30000D
  8171                           ;	Boot Block Table Read Protection bit
  8172                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8173   30000D                     	org	3145741
  8174   30000D  40                 	db	64
  8175                           tosu	equ	0xFFF
  8176                           tosh	equ	0xFFE
  8177                           tosl	equ	0xFFD
  8178                           stkptr	equ	0xFFC
  8179                           pclatu	equ	0xFFB
  8180                           pclath	equ	0xFFA
  8181                           pcl	equ	0xFF9
  8182                           tblptru	equ	0xFF8
  8183                           tblptrh	equ	0xFF7
  8184                           tblptrl	equ	0xFF6
  8185                           tablat	equ	0xFF5
  8186                           prodh	equ	0xFF4
  8187                           prodl	equ	0xFF3
  8188                           indf0	equ	0xFEF
  8189                           postinc0	equ	0xFEE
  8190                           postdec0	equ	0xFED
  8191                           preinc0	equ	0xFEC
  8192                           plusw0	equ	0xFEB
  8193                           fsr0h	equ	0xFEA
  8194                           fsr0l	equ	0xFE9
  8195                           wreg	equ	0xFE8
  8196                           indf1	equ	0xFE7
  8197                           postinc1	equ	0xFE6
  8198                           postdec1	equ	0xFE5
  8199                           preinc1	equ	0xFE4
  8200                           plusw1	equ	0xFE3
  8201                           fsr1h	equ	0xFE2
  8202                           fsr1l	equ	0xFE1
  8203                           bsr	equ	0xFE0
  8204                           indf2	equ	0xFDF
  8205                           postinc2	equ	0xFDE
  8206                           postdec2	equ	0xFDD
  8207                           preinc2	equ	0xFDC
  8208                           plusw2	equ	0xFDB
  8209                           fsr2h	equ	0xFDA
  8210                           fsr2l	equ	0xFD9
  8211                           status	equ	0xFD8

Data Sizes:
    Strings     43
    Constant    16
    Data        54
    BSS         128
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     99     125
    BANK0           128      0     124
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    timer1_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S4526$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(COMRAM[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S4473$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4473$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    memset@s	PTR unsigned char  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3463$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3463$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3463$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3463$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1994$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2110$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2110$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), 
		 -> dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), 
		 -> dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), 
		 -> dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    configure_voltage_reference@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    select_result_format@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversion_Blocking@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> lm35_res_2(COMRAM[2]), lm35_res_1(COMRAM[2]), 

    ADC_GetConversion_Blocking@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> lm35_res_2(COMRAM[2]), lm35_res_1(COMRAM[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S659$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    led_turn_off@led	PTR const struct . size(2) Largest target is 1
		 -> led2(COMRAM[1]), led1(COMRAM[1]), 

    led_turn_on@led	PTR const struct . size(2) Largest target is 1
		 -> led2(COMRAM[1]), led1(COMRAM[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led2(COMRAM[1]), led1(COMRAM[1]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 14
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), STR_7(CODE[8]), STR_6(CODE[8]), 
		 -> STR_5(CODE[10]), STR_4(CODE[14]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint16_to_string
    _led_turn_on->_gpio_pin_write_logic
    _led_turn_off->_gpio_pin_write_logic
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _application_intialize->_lcd_4bit_intialize
    _led_initialize->_gpio_pin_intialize
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _ADC_Init->_adc_input_channel_port_configure
    ___fltol->___flmul
    ___flmul->___xxtofl
    _ADC_GetConversion_Blocking->_ADC_GetConversionResult
    _ADC_GetConversion_Blocking->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  131922
                                             97 COMRAM     2     2      0
         _ADC_GetConversion_Blocking
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
              _application_intialize
           _convert_uint16_to_string
                _dc_motor_move_right
                      _dc_motor_stop
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2    5187
                                             11 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         5     3      2    5187
                                             11 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   37699
                                             26 COMRAM     7     1      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   19024
                                             19 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   16670
                                             15 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    5133
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    5133
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4    7833
                                             85 COMRAM    12     8      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    5851
                                             63 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5196
                                             55 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    4846
                                             41 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    3626
                                             28 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1403
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   40535
                           _ADC_Init
                _dc_motor_initialize
                 _lcd_4bit_intialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (2) _led_initialize                                       5     3      2    7182
                                             15 COMRAM     5     3      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_intialize                                   6     4      2   25687
                                             19 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   18342
                                             15 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5702
                                             11 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    5264
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  3     1      2    7120
                                             15 COMRAM     3     1      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   4     2      2    6878
                                             11 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    4891
                                              1 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         9     7      2     559
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     539
                                              4 COMRAM     4     2      2
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 2     0      2     120
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          2     0      2     120
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1386
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     761
                                             40 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2656
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           6     1      5    1584
                                              9 COMRAM     6     1      5
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     199
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     417
                                              4 COMRAM     5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              8     4      4     331
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManager                                    0     0      0     176
                            _ADC_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_TX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_RX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _ADC_GetConversionResult
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _application_intialize
     _ADC_Init
       _adc_input_channel_port_configure
       _configure_voltage_reference
       _select_result_format
     _dc_motor_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
     _lcd_4bit_intialize
       _gpio_pin_intialize
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _led_initialize
       _gpio_pin_intialize
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _led_turn_off
     _gpio_pin_write_logic
   _led_turn_on
     _gpio_pin_write_logic

 _InterruptManager (ROOT)
   _ADC_ISR
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7C       5       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     63      7D       1       99.2%
BITBIGSFRhlhhlh     18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhlll      7      0       0      42        0.0%
BITBIGSFRlllhh       6      0       0      43        0.0%
BITBIGSFRhlhhll      5      0       0      39        0.0%
BITBIGSFRllhllh      4      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      45        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     119      20        0.0%
DATA                 0      0     119       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 20 03:45:33 2023

                         ??_InterruptManager 0002                              ?_lcd_send_4bits 000C  
                                _SSPSTATbits 0FC7                                           l74 2F2C  
                                         l69 22A0                                           l79 2EBA  
                               ___awdiv@sign 0007                                          l100 2B6A  
                                        l222 322A                                          l232 31E4  
                                        l208 2ACA                                          l217 3330  
                                        l402 2E22                                          l171 2972  
                                        l405 2E48                                          l182 306E  
                                        l440 3170                                          l360 2818  
                                        l185 339E                                          l281 2CE6  
                                        l434 32B0                                          l362 28BC  
                                        l291 2C0A                                          l372 336A  
                                        l444 3192                                          l436 32B2  
                                        l284 2B8A                                          l429 25AA  
                                        l277 2C8A                                          l375 33EA  
                                        l447 319A                                          l295 2C6A  
                                        l376 33F0                                          l288 2BEA  
                                        l377 33F2                                          l449 319E  
                                        l713 23CC                                          l395 27FC  
                                        l734 3006                                          l694 2048  
        __end_of_configure_voltage_reference 31A0                  _configure_voltage_reference 3156  
                                        _PR2 0FCB                                          _abs 32B4  
                                        _pad 2CE8                    _RB5_InterruptHandler_HIGH 00AF  
                            __end_of_ADC_ISR 3478                                          _ret 0077  
        __end_of_lcd_4bit_send_enable_signal 33A0                  _lcd_4bit_send_enable_signal 336C  
                               ___awmod@sign 0007                          led_initialize@F3048 0072  
                                        prod 0FF3                        relay_initialize@F3042 006E  
                                        wreg 0FE8                                 ?_led_turn_on 000C  
                               ___flmul@aexp 0021                                 ___flmul@bexp 0022  
                lcd_send_4bits@_data_command 000E                                 ___flmul@sign 001C  
                               ___flmul@temp 0027                                 ___flmul@prod 0023  
                  ?_convert_uint16_to_string 0056                              __end_of_RB4_ISR 345C  
                            __end_of_RB5_ISR 3442                              __end_of_RB6_ISR 3428  
                            __end_of_RB7_ISR 340E                                 ___fltol@exp1 0032  
                                       ?_abs 0008                                         l2142 2DCC  
                                       l2320 1B92                                         l2313 1B36  
                                       l2401 32EA                                         l2306 1A9E  
                                       l2404 32F2                                         l2149 2DD4  
                                       l2309 1BFA                                         l2326 1F04  
                                       l2272 12F8                                         l2416 2674  
                                       l2424 326E                                         l2265 1102  
                                       l2361 2D0A                                         l2282 1428  
                                       l2274 1370                                         l2370 1C42  
                                       l2275 135E                                         l2427 3478  
                                       l2339 310A                                         l2372 1C4A  
                                       l2269 1466                                         l2365 2D60  
                                       l2373 1C90                                         l2391 2174  
                                       l1648 3154                                         l2384 1D8E  
                                       l6001 2A5E                                         l6003 2A76  
                                       l6101 3312                                         l2397 30BE  
                                       l6005 2A8E                                         l6103 332E  
                                       l6111 2C82                                         l6007 2AC8  
                                       l6201 27F6                                         l6113 2C8E  
                                       l6121 2CE4                                         l1882 2738  
                                       l6203 27FA                                         l6131 281A  
                                       l6115 2CC4                                         l6107 2C6C  
                                       l6051 1D90                                         l1948 24D2  
                                       l6141 288A                                         l6133 2872  
                                       l6125 27FE                                         l6117 2CC6  
                                       l6109 2C70                                         l6061 1DF0  
                                       l6301 28EC                                         l6221 2ACC  
                                       ?_pad 0012                                         l6151 28B6  
                                       l6143 288C                                         l6135 2884  
                                       l6127 27FE                                         l6119 2CD8  
                                       l6063 1E48                                         l6055 1DAE  
                                       l1895 2A22                                         l6311 2954  
                                       l6303 2908                                         l6231 2B36  
                                       l6223 2ADE                                         l6161 3344  
                                       l6145 289C                                         l6137 2886  
                                       l6153 28BA                                         l6129 2810  
                                       l6081 1EF2                                         l6073 1EA8  
                                       l6057 1DBA                                         l5601 324A  
                                       l6305 2916                                         l6313 2970  
                                       l6321 31FC                                         l6233 2B68  
                                       l6225 2AE6                                         l6163 334C  
                                       l6147 28A8                                         l6139 2888  
                                       l6075 1EDC                                         l6067 1E62  
                                       l5611 2690                                         l5603 324E  
                                       l6091 30FC                                         l6083 30C0  
                                       l6307 2936                                         l6323 3204  
                                       l6331 31A4                                         l6227 2B00  
                                       l6219 2ACC                                         l6165 335E  
                                       l6157 3332                                         l6173 33D0  
                                       l6149 28B4                                         l6077 1EE8  
                                       l6069 1E8E                                         l5621 26B6  
                                       l5613 2694                                         l5605 2676  
                                       l5701 32CE                                         l6085 30D0  
                                       l6309 2952                                         l6325 3228  
                                       l6317 31E6                                         l6333 31B6  
                                       l6229 2B32                                         l6341 2B6C  
                                       l6191 2766                                         l6183 273A  
                                       l6167 3364                                         l6159 3332  
                                       l6175 33D0                                         l5711 22E2  
                                       l5703 22A2                                         l6095 32F4  
                                       l6079 1EEE                                         l5631 26EC  
                                       l5623 26C8                                         l5615 26A2  
                                       l5607 267A                                         l6087 30D8  
                                       l6319 31EA                                         l6335 31BE  
                                       l6351 2BC6                                         l6343 2B70  
                                       l6193 2780                                         l6185 273A  
                                       l6169 3368                                         l6177 33E2  
                                       l6601 11AC                                         l5713 2344  
                                       l5705 22A6                                         l6097 32F8  
                                       l5801 3008                                         l5633 2702  
                                       l5625 26D0                                         l5641 2718  
                                       l5617 26AA                                         l5609 2688  
                                       l6089 30E0                                         l6337 31E2  
                                       l6329 31A0                                         l6361 2BF0  
                                       l6353 2BD8                                         l6345 2B82  
                                       l6195 27A8                                         l6187 274C  
                                       l6179 33EC                                         l6611 11FE  
                                       l6603 11B8                                         l5707 22B8  
                                       l6099 330A                                         l5803 3008  
                                       l6531 310C                                         l5643 2728  
                                       l5635 270A                                         l5627 26D8  
                                       l5619 26AE                                         l5651 2978  
                                       l5731 1C20                                         l6291 28BE  
                                       l6371 2C58                                         l6363 2C02  
                                       l6347 2B8E                                         l6355 2BE8  
                                       l6197 27C2                                         l6189 275E  
                                       l5901 2516                                         l6381 2DE8  
                                       l6621 127C                                         l6613 120E  
                                       l6605 11C8                                         l6701 2472  
                                       l5717 23A0                                         l5709 22DA  
                                       l5813 336C                                         l5805 301E  
                                       l6541 313C                                         l6533 310C  
                                       l5645 2730                                         l5637 270C  
                                       l5629 26E6                                         l5661 29A8  
                                       l5653 2986                                         l5741 1C68  
                                       l5733 1C28                                         l6293 28C2  
                                       l6365 2C0E                                         l6373 2C68  
                                       l6349 2BC4                                         l5903 251C  
                                       l6383 2DFA                                         l6631 12F6  
                                       l6623 12B2                                         l6615 122A  
                                       l6607 11D4                                         l6551 105A  
                                       l6711 24A2                                         l8071 2030  
                                       l5719 23CA                                         l5815 336C  
                                       l5807 3036                                         l6543 3148  
                                       l6535 3118                                         l5639 2712  
                                       l5671 29EE                                         l5663 29BA  
                                       l5655 298E                                         l5591 25F8  
                                       l5583 25AC                                         l5751 1CA2  
                                       l5743 1C78                                         l5735 1C36  
                                       l5727 1BFC                                         l5831 2090  
                                       l5823 204A                                         l6295 28CE  
                                       l6367 2C44                                         l6359 2BEC  
                                       l8073 253C                                         l5905 2522  
                                       l6385 2E02                                         l6377 2DD6  
                                       l6641 1356                                         l6633 1308  
                                       l6625 12C0                                         l6617 1236  
                                       l6609 11E4                                         l6561 10A0  
                                       l6553 106A                                         l6545 103E  
                                       l6713 24B2                                         l6721 2D6A  
                                       l5921 3156                                         l5913 3270  
                                       l5817 3380                                         l5809 3050  
                                       l6537 3124                                         l5681 2A1A  
                                       l5673 29F6                                         l5665 29C2  
                                       l5657 2992                                         l5649 2974  
                                       l5593 262E                                         l5585 25BE  
                                       l5753 1CA8                                         l5761 1D02  
                                       l5745 1C84                                         l5737 1C52  
                                       l5729 1C10                                         l5833 20A0  
                                       l5825 2070                                         l6297 28D2  
                                       l6369 2C46                                         l5907 2528  
                                       l6387 2E30                                         l6379 2DD6  
                                       l6651 13C4                                         l6635 1316  
                                       l6627 12DE                                         l6619 1252  
                                       l6571 10CC                                         l6563 10A6  
                                       l6555 107A                                         l6547 104A  
                                       l6715 24C2                                         l6707 2486  
                                       l6731 2DA0                                         l6723 2D7C  
                                       l5923 3178                                         l5915 328A  
                                       l5819 3386                                         l6539 3130  
                                       l5675 29FC                                         l5667 29CA  
                                       l5659 29A0                                         l5587 25D0  
                                       l5691 2D16                                         l5771 1D5E  
                                       l5763 1D1C                                         l5755 1CDA  
                                       l5747 1C8C                                         l5739 1C62  
                                       l5843 2138                                         l5835 20BE  
                                       l5827 207E                                         l5931 30B6  
                                       l6299 28E4                                         l8067 2AA2  
                                       l6389 2E46                                         l6661 142C  
                                       l6645 1380                                         l6653 13C8  
                                       l6637 131A                                         l6629 12E8  
                                       l6581 1122                                         l6573 10DC  
                                       l6565 10AC                                         l6557 108A  
                                       l6549 1058                                         l6709 2492  
                                       l6733 2DB6                                         l6725 2D84  
                                       l6741 1A4A                                         l5917 3290  
                                       l5781 1F1C                                         l8069 23B4  
                                       l5861 2FD8                                         l5853 2F9C  
                                       l5941 2194                                         l5669 29D8  
                                       l5677 2A02                                         l5589 25DA  
                                       l5597 322C                                         l5693 2D2A  
                                       l5685 2CE8                                         l5773 1D6E  
                                       l5765 1D2E                                         l5757 1CE0  
                                       l5749 1C98                                         l5837 20DC  
                                       l5829 208C                                         l5925 3070  
                                       l6671 1456                                         l6663 143C  
                                       l6655 13E2                                         l6647 138C  
                                       l6639 1328                                         l6591 1162  
                                       l6575 10EC                                         l6567 10BA  
                                       l6559 1090                                         l6735 2DBE  
                                       l6727 2D8C                                         l6719 2D62  
                                       l6743 1A5A                                         l5919 32AA  
                                       l5791 2004                                         l5783 1F3E  
                                       l5863 3004                                         l5855 2F9C  
                                       l5871 2ECE                                         l5951 21D4  
                                       l5943 21B4                                         l5935 2176  
                                       l5679 2A12                                         l5599 3238  
                                       l5695 2D2E                                         l5687 2CF6  
                                       l5767 1D48                                         l5759 1CE6  
                                       l5839 2120                                         l5847 214A  
                                       l5927 307C                                         l5881 24DA  
                                       l6665 144A                                         l6657 13F6  
                                       l6649 139A                                         l6593 116E  
                                       l6585 1136                                         l6577 10F2  
                                       l6569 10BC                                         l6681 23F8  
                                       l6737 2DC0                                         l6729 2D9A  
                                       l6761 1B20                                         l6753 1AD8  
                                       l6745 1A68                                         l5785 1F46  
                                       l5793 2046                                         l5777 1F06  
                                       l5857 2FAE                                         l5873 2ED6  
                                       l5961 2226                                         l5953 21D6  
                                       l5937 217A                                         l5697 2D4C  
                                       l5689 2D02                                         l5769 1D58  
                                       l5929 3098                                         l5891 24F8  
                                       l5883 24E0                                         l6667 144C  
                                       l6659 1410                                         l6595 1186  
                                       l6587 1142                                         l6579 1112  
                                       l6691 2446                                         l6683 2422  
                                       l6675 23CE                                         l6739 2DC6  
                                       l6771 1BA0                                         l6763 1B2C  
                                       l6755 1AE0                                         l6747 1AAE  
                                       l5787 1FA8                                         l5779 1F0A  
                                       l5859 2FD0                                         l5875 2F2A  
                                       l5867 2EBC                                         l5971 226C  
                                       l5963 222C                                         l5955 21E6  
                                       l5939 218C                                         l5699 32B4  
                                       l5893 24FE                                         l5885 24E6  
                                       l6669 1452                                         l6597 1192  
                                       l6589 114C                                         l6685 2424  
                                       l6677 23E4                                         l6781 1BE8  
                                       l6773 1BA2                                         l6765 1B68  
                                       l6757 1AEC                                         l6749 1AC4  
                                       l5869 2EBC                                         l5973 227C  
                                       l5965 223C                                         l5957 21F6  
                                       l5949 21B8                                         l5981 2E4A  
                                       l5895 2504                                         l5887 24EC  
                                       l5879 24D6                                         l6599 119E  
                                       l6687 2434                                         l6783 1BEA  
                                       l6775 1BA6                                         l6767 1B74  
                                       l6759 1B1E                                         l5975 228C  
                                       l5967 224C                                         l5959 2206  
                                       l5983 2E4A                                         l5897 250A  
                                       l5889 24F2                                         l6697 245E  
                                       l6689 2438                                         l6777 1BCA  
                                       l6769 1B82                                         l5969 225C  
                                       l5977 229E                                         l5985 2E5C  
                                       l5993 2A24                                         l5899 2510  
                                       l6699 2468                                         l6779 1BDA  
                                       l5987 2E64                                         l5995 2A28  
                                       l7931 149E                                         l7923 1468  
                                       l5989 2EB8                                         l5997 2A2E  
                                       l7941 151A                                         l7933 14AE  
                                       l7925 1468                                         l5999 2A46  
                                       l7951 160E                                         l7943 1532  
                                       l7935 14CA                                         l7927 146C  
                                       l7961 1684                                         l7953 1622  
                                       l7945 1584                                         l7937 14E6  
                                       l7929 1488                                         l7971 16D8  
                                       l7963 1690                                         l7955 1636  
                                       l7947 15D6                                         l7939 1502  
                                       l7981 172C                                         l7973 16E4  
                                       l7965 16A6                                         l7957 1652  
                                       l7949 15F2                                         l7983 1738  
                                       l7975 16FA                                         l7967 16B6  
                                       l7959 166E                                         l7985 174E  
                                       l7977 1706                                         l7969 16C2  
                                       l7979 171C                                         STR_1 1039  
                                       STR_2 1039                                         STR_4 1011  
                                       STR_5 101F                                         STR_6 1029  
                                       STR_7 1031                                         _LATA 0F89  
                                       _LATB 0F8A                                         _LATC 0F8B  
                                       u4000 2070                                         _LATD 0F8C  
                                       u4001 206C                                         _LATE 0F8D  
                                       u4010 20BE                                         u4011 20BA  
                                       u4020 20DC                                         u4100 30B6  
                                       u4021 20D8                                         u4101 30B2  
                                       u4030 2FAE                                         u4110 218C  
                                       u4031 2FAA                                         u4111 2188  
                                       u5000 1BDA                                         u4040 2FD0  
                                       u4120 21E6                                         u4200 1EA4  
                                       u5001 1BD6                                         u4041 2FCC  
                                       u4121 21E2                                         u4201 1EA0  
                                       u5010 1BE8                                         u4050 2ECE  
                                       u4210 1F04                                         u4130 2E5C  
                                       u5011 1BE4                                         u4051 2ECA  
                                       u4211 1F00                                         u4131 2E58  
                                       u4300 2780                                         u4060 328A  
                                       u4220 330A                                         u4301 277C  
                                       u4061 3286                                         u4221 3306  
                                       u4310 27C2                                         u4070 32AA  
                                       u4230 2C82                                         u4311 27BE  
                                       u4071 32A6                                         u4231 2C7E  
                                       u4080 3170                                         u3600 25BE  
                                       u4081 316C                                         u3601 25BA  
                                       u4090 3192                                         u4250 2810  
                                       u4170 1DAA                                         u3610 25D0  
                                       u4091 318E                                         u4251 280C  
                                       u4171 1DA6                                         u3611 25CC  
                                       u4260 3344                                         u4180 1DEC  
                                       u3700 2728                                         u3620 25F8  
                                       u4340 2ADE                                         u4325 27DA  
                                       u4261 3340                                         u4245 2CD6  
                                       u4181 1DE8                                         u3701 2724  
                                       u3621 25F4                                         u4341 2ADA  
                                       u4270 33E2                                         u4190 1E5E  
                                       u3710 2986                                         u3630 262E  
                                       u4350 2B2A                                         u4510 2C02  
                                       u4271 33DE                                         u4247 2CD8  
                                       u4191 1E5A                                         u3711 2982  
                                       u3631 262A                                         u4511 2BFE  
                                       u4280 274C                                         u3800 22B8  
                                       u3720 29A0                                         u3640 326E  
                                       u4360 2B58                                         u4281 2748  
                                       u3801 22B4                                         u3721 299C  
                                       u3641 326A                                         u4441 28C8  
                                       u4505 2BD6                                         u4290 275E  
                                       u4530 2DE8                                         u3810 22DA  
                                       u3650 2688                                         u3730 29BA  
                                       u4450 28E4                                         u4370 2B68  
                                       u4291 275A                                         u4531 2DE4  
                                       u3811 22D6                                         u3651 2684  
                                       u3731 29B6                                         u4451 28E0  
                                       u4371 2B64                                         u4507 2BD8  
                                       u4540 2DFA                                         u4700 1122  
                                       u3660 26A2                                         u3740 29D8  
                                       u3900 1D1C                                         u4460 2970  
                                       u4541 2DF6                                         u4701 111E  
                                       u3661 269E                                         u3741 29D4  
                                       u3901 1D18                                         u4461 296C  
                                       u4357 2B20                                         u4525 2C56  
                                       u4550 2E30                                         u4710 129C  
                                       u4630 1058                                         u3670 26C8  
                                       u3750 29EE                                         u3910 1D2E  
                                       u4470 31FC                                         u4551 2E2C  
                                       u4631 1054                                         u3671 26C4  
                                       u3751 29EA                                         u3911 1D2A  
                                       u4471 31F8                                         u4367 2B4E  
                                       u4527 2C58                                         u4800 1410  
                                       u4720 12F6                                         u4640 106A  
                                       u3824 2302                                         u3680 26E6  
                                       u3760 2A12                                         u3920 1D48  
                                       u3840 1C0C                                         u4480 31B6  
                                       u4801 140C                                         u4721 12F2  
                                       u4641 1066                                         u3825 22FE  
                                       u3681 26E2                                         u3761 2A0E  
                                       u3921 1D44                                         u3841 1C06  
                                       u4481 31B2                                         u4810 144A  
                                       u4730 1316                                         u4650 107A  
                                       u3834 2364                                         u3690 2702  
                                       u3770 2CF6                                         u3930 1D58  
                                       u3850 1C0E                                         u4490 2B82  
                                       u4811 1446                                         u4731 1312  
                                       u4715 1292                                         u4651 1076  
                                       u3835 2360                                         u3691 26FE  
                                       u3771 2CF2                                         u3931 1D54  
                                       u4491 2B7E                                         u4740 1328  
                                       u4660 10BA                                         u4820 23E4  
                                       u4900 2D9A                                         u3940 1F1C  
                                       u3780 2D4C                                         u3860 1C20  
                                       u6500 16FA                                         u4741 1324  
                                       u4661 10B6                                         u4821 23E0  
                                       u4901 2D96                                         u3941 1F18  
                                       u3781 2D48                                         u3861 1C1C  
                                       u6501 16F6                                         u4750 1356  
                                       u4670 10CC                                         u4830 2418  
                                       u4910 2DB6                                         u3950 1F3E  
                                       u3790 32CE                                         u3870 1C36  
                                       u4751 1352                                         u4671 10C8  
                                       u4911 2DB2                                         u3951 1F3A  
                                       u3791 32CA                                         u3871 1C32  
                                       u4760 136C                                         u4680 10DC  
                                       u4840 2446                                         u4920 1A5A  
                                       u3880 1C62                                         u4761 1368  
                                       u4681 10D8                                         u4841 2442  
                                       u4921 1A56                                         u3881 1C5E  
                                       u4770 1380                                         u4690 1112  
                                       u4850 245A                                         u4930 1A68  
                                       u3890 1C78                                         u4771 137C  
                                       u4691 110E                                         u4851 2456  
                                       u4835 240E                                         u4931 1A64  
                                       u3891 1C74                                         u4780 139A  
                                       u4860 2482                                         u4940 1AC4  
                                       u3980 201C                                         u3964 1F66  
                                       u4781 1396                                         u4861 247E  
                                       u4941 1AC0                                         u3981 2016  
                                       u3965 1F62                                         u6517 1492  
                                       u4790 13E2                                         u4870 24A2  
                                       u4950 1B1A                                         u3990 201E  
                                       u3974 1FC8                                         u4791 13DE  
                                       u4871 249E                                         u4951 1B16  
                                       u3975 1FC4                                         u6527 169A  
                                       u4880 24B2                                         u4960 1B64  
                                       u4881 24AE                                         u4961 1B60  
                                       u6537 16CC                                         u4890 2D7C  
                                       u4970 1B82                                         u6490 1684  
                                       u4891 2D78                                         u4971 1B7E  
                                       u6547 1710                                         u6491 1680  
                                       u4980 1B92                                         u4981 1B8E  
                                       u6557 1742                                         u4990 1BA0  
                                       u4991 1B9C                                         u6567 21EC  
                                       u6577 220C                                         u6587 2228  
                                       _TMR2 0FCC                      ??_application_intialize 001A  
              ??_lcd_4bit_send_enable_signal 000E                     _RB4_InterruptHandler_LOW 00B1  
                                       abs@a 0008                                         _led1 007D  
                                       _led2 007C                                         _dbuf 0100  
                                       _main 1468                                         _dtoa 1BFC  
                                       _prec 0064                     _RB7_InterruptHandler_LOW 00A5  
                                       pad@i 0019                                         pad@p 0016  
                                       fsr0h 0FEA                                         fsr1h 0FE2  
                                       indf0 0FEF                                         fsr2h 0FDA  
                                       fsr0l 0FE9                                         indf1 0FE7  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       pad@w 001B                                         fsr2l 0FD9  
                                       btemp 007E                       __end_of_led_initialize 2CE8  
                           __end_of_ADC_Init 28BE                                         prodh 0FF4  
                                       prodl 0FF3                                         start 000E  
                              ?_led_turn_off 000C                                 ___param_bank 0000  
                             _lm35_res_1_txt 00C6                        _lcd_4bit_send_command 2EBC  
                             _lm35_res_2_txt 00BF                               _lm35_res_3_txt 0080  
                     dc_motor_initialize@ret 0012                                        ??_abs 000A  
                       _gpio_pin_write_logic 22A2               lcd_4bit_send_string_pos@column 001E  
                                      ??_pad 0018                        lcd_4bit_intialize@lcd 0014  
                      lcd_4bit_intialize@ret 0019                             __end_of_INT0_ISR 3470  
                           __end_of_INT1_ISR 346C                             __end_of_INT2_ISR 3468  
                              _EUSART_RX_ISR 347A                                ___fltol@sign1 0031  
                              _EUSART_TX_ISR 3470                                        ?_main 0001  
                                      ?_dtoa 001D                              __end_of___awdiv 273A  
                                      _EEADR 0FA9                              __end_of___awmod 2A24  
                            __end_of___flmul 1468                              __end_of___fltol 24D4  
                            ___awdiv@divisor 0004                              __end_of___lwdiv 2DD6  
                                      i2l453 3476                                        i2l901 346A  
                                      i2l906 3466                                        i2l917 345A  
                                      i2l950 340C                                        i2l928 3440  
                                      i2l939 3426                              ___awdiv@counter 0006  
                                      i2l896 346E                                        _RCREG 0FAE  
                        relay_turn_off@F3052 006C                                 vfpfcnvrt@fmt 002C  
                                      _TMR0H 0FD7                                        _TMR1H 0FCF  
                                      _TMR0L 0FD6                                        _TMR1L 0FCE  
                                      _TMR3H 0FB3                                        _TMR3L 0FB2  
                                      _SPBRG 0FAF                                        _PORTA 0F80  
                                      _PORTB 0F81                                        _PORTC 0F82  
                                      _PORTD 0F83                                        _PORTE 0F84  
                                      _TRISA 0F92                                        _TRISB 0F93  
                                      _TRISC 0F94                                        _TRISD 0F95  
                                      _TRISE 0F96                                        _TXREG 0FAD  
                  lcd_4bit_set_cursor@coulmn 0017                                        _adc_1 00EB  
                                      _lcd_1 00F2                                        _flags 006A  
                                      _fputc 25AC                                        _fputs 322C  
                                      pad@fp 0012                                        _width 008D  
                                      _putch 3478                                        dtoa@d 001F  
                                      dtoa@i 0027                                        dtoa@p 0023  
                                      dtoa@s 0029                                        dtoa@w 0025  
                                      tablat 0FF5                                        ttemp5 007F  
                                      ttemp6 0082                                        ttemp7 0086  
                                      status 0FD8                                        wtemp8 007F  
                            __end_of_sprintf 310C                              ?_led_initialize 0010  
                             ??_led_turn_off 000E                              __initialization 2F2E  
                               __end_of_main 1762                                 __end_of_dtoa 1D90  
                      ?_gpio_pin_write_logic 0002                                    ??_ADC_ISR 0001  
                             ?_EUSART_RX_ISR 0001                               ?_EUSART_TX_ISR 0001  
                              _lat_registers 00D7                  __end_of_dc_motor_initialize 3332  
                                     ??_main 0062                                       ??_dtoa 0021  
                              __activetblptr 0003                             led_turn_on@F3053 0071  
                                  ??_RB4_ISR 0001                                    ??_RB5_ISR 0001  
                                  ??_RB6_ISR 0001                                    ??_RB7_ISR 0001  
                 _EUSART_OverrunErrorHandler 0093                                       ?_fputc 0002  
                                     ?_fputs 000B                                       _ADRESH 0FC4  
                                     _EEADRH 0FAA                                       _ADRESL 0FC3  
                                     _EEDATA 0FA8                                       _CCPR1H 0FBF  
                                     _CCPR2H 0FBC                                       _CCPR1L 0FBE  
                                     _CCPR2L 0FBB                                       _EECON2 0FA7  
                           ___awdiv@dividend 0002                                       ?_putch 0001  
                                     i2l1111 184C                                       i2l1103 1784  
                                     i2l1121 19A0                                       i2l1113 1890  
                                     i2l1105 17A4                                       i2l1130 1A44  
                                     i2l1123 19E4                                       i2l1115 18D4  
                                     i2l1107 17C4                                       i2l1125 1A04  
                                     i2l1117 1918                                       i2l1109 1808  
                                     i2l1127 1A24                                       i2l1119 195C  
                                     i2l1566 3472                                       i2l1575 347A  
                                     i2l6403 3468                                       i2l6423 345A  
                                     i2l6415 3444                                       i2l6431 342C  
                                     i2l6513 3470                                       i2l6409 3464  
                                     i2l6417 3446                                       i2l6451 3426  
                                     i2l6443 3410                                       i2l6437 3440  
                                     i2l6429 342A                                       i2l6445 3412  
                                     i2l6519 347A                                       i2l7511 1764  
                                     i2l6393 3474                                       i2l6465 340C  
                                     i2l6457 33F6                                       i2l7601 19DA  
                                     i2l7521 17B2                                       i2l7513 1772  
                                     i2l6459 33F8                                       i2l7611 1A20  
                                     i2l7603 19DE                                       i2l7531 17FE  
                                     i2l7523 17C0                                       i2l7515 1780  
                                     i2l6397 346C                                       i2l7613 1A32  
                                     i2l7605 19F2                                       i2l7541 1842  
                                     i2l7533 1802                                       i2l7525 17D2  
                                     i2l7517 1792                                       i2l7615 1A40  
                                     i2l7607 1A00                                       i2l7551 1886  
                                     i2l7543 1846                                       i2l7535 1816  
                                     i2l7527 17E0                                       i2l7519 17A0  
                                     i2l7609 1A12                                       i2l7561 18CA  
                                     i2l7553 188A                                       i2l7545 185A  
                                     i2l7537 1824                                       i2l7529 17EE  
                                     i2l7571 190E                                       i2l7563 18CE  
                                     i2l7555 189E                                       i2l7547 1868  
                                     i2l7539 1832                                       i2l7581 1952  
                                     i2l7573 1912                                       i2l7565 18E2  
                                     i2l7557 18AC                                       i2l7549 1876  
                                     i2l7591 1996                                       i2l7583 1956  
                                     i2l7575 1926                                       i2l7567 18F0  
                                     i2l7559 18BA                                       i2l7593 199A  
                                     i2l7585 196A                                       i2l7577 1934  
                                     i2l7569 18FE                                       i2l7595 19AE  
                                     i2l7587 1978                                       i2l7579 1942  
                                     i2l7597 19BC                                       i2l7589 1986  
                                     i2l7599 19CA          convert_uint16_to_string@Temp_String 005A  
                                     _SPBRGH 0FB0                                       _SSPADD 0FC8  
                                     _SSPBUF 0FC9            ADC_GetConversion_Blocking@channel 000C  
                           __end_of___xxtofl 1BFC             __end_of_lcd_4bit_send_string_pos 2B6C  
                __end_of_dc_motor_move_right 322C                       ?_lcd_4bit_send_command 0010  
                               vfprintf@cfmt 003E                                    ??___awdiv 0006  
                                  ??___awmod 0006                                    ??___flmul 0018  
                                  ??___fltol 002D                                    ??___lwdiv 0006  
                                     _matrix 1001                                       _memset 1D90  
                                     clear_0 2F74                                       clear_1 2F80  
                                     clear_2 2F8C                        led_initialize@pin_obj 0014  
                           ___awdiv@quotient 0008                              ___awmod@divisor 0004  
                                     isa$std 0001                              ___awmod@counter 0006  
                                     pad@buf 0014                                       dtoa@fp 001D  
    gpio_pin_direction_intialize@_pin_config 0002                                       fputc@c 0002  
                                     fputs@c 000F                                       fputs@i 0010  
                               __pdataCOMRAM 0077                                       fputs@s 000B  
                                  ?_ADC_Init 0005                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                                       putch@c 0001  
                           __end_of_vfprintf 30C0                                    ??_sprintf 0048  
               __end_of_select_result_format 32B4                      _Timer0_InterruptHandler 00A3  
                               ___xxtofl@arg 000C                                 ___xxtofl@exp 000B  
                               ___xxtofl@val 0002                                   __accesstop 0080  
                    __end_of__initialization 2F92                                    ?_INT0_ISR 0001  
                                  ?_INT1_ISR 0001                                    ?_INT2_ISR 0001  
                                 _lm35_res_1 0075                                   _lm35_res_2 0073  
                                 _lm35_res_3 0091                         _timer0_preload_value 00A1  
                              ___rparam_used 0001                                   ___fltol@f1 0029  
                           ??_lcd_send_4bits 000F                            led_initialize@led 0010  
                          led_initialize@ret 0013                      _lcd_4bit_send_char_data 2E4A  
                          RB5_ISR@RB5_Source 0001                       ??_gpio_pin_write_logic 0005  
                             __pcstackCOMRAM 0001                                 __pidataBANK0 33A0  
                            ??_EUSART_RX_ISR 0001                              ??_EUSART_TX_ISR 0001  
               ??_ADC_GetConversion_Blocking 000F                                __end_of_fputc 2676  
                              __end_of_fputs 3270                                __end_of_putch 347A  
                       _Timer2_Preload_Value 006B                     lcd_4bit_send_command@lcd 0010  
                   lcd_4bit_send_command@ret 0013                      _ADC_GetConversionResult 273A  
                                 ??_ADC_Init 0007                         __end_of_led_turn_off 2C6C  
                       ADC_SelectChannel@ret 0009                                      ??_fputc 0006  
                                 _dc_motor_1 00FA                                   _dc_motor_2 00F8  
                                    ??_fputs 000F                                      ??_putch 0002  
                     ADC_StartConversion@ret 0004                                   __pbssBANK0 0080  
                                 __pbssBANK1 0100                        _INT0_InterruptHandler 00B9  
                                 ??_INT0_ISR 0001                                   ??_INT1_ISR 0001  
                                 ??_INT2_ISR 0001                   ADC_GetConversionResult@ret 0009  
              __end_of_application_intialize 3156                            led_turn_off@F3058 0070  
                convert_uint16_to_string@ret 0060                                      _ADC_ISR 3474  
                convert_uint16_to_string@str 0058                                      ?_memset 0002  
             ADC_GetConversion_Blocking@_adc 000A                            RB7_ISR@RB7_Source 0001  
                                    _RB4_ISR 3442                                      _RB5_ISR 3428  
                                    _RB6_ISR 340E                                      _RB7_ISR 33F4  
                                  ?___xxtofl 0002                    ?_lcd_4bit_send_string_pos 001B  
                  _RB6_InterruptHandler_HIGH 00AB                         led_turn_toggle@F3063 006F  
                           ??_led_initialize 0012              CCP_Compare_Mode_Set_Value@F3106 00BB  
                             _tris_registers 00E1                     _RB6_InterruptHandler_LOW 00A9  
                  ??_lcd_4bit_send_char_data 0013                         _ADC_InterruptHandler 00BD  
                                    __Hparam 0000                                 ADC_Init@_adc 0005  
                                    __Lparam 0000                                      ___awdiv 2676  
                                    ___awmod 2974                                      ___flmul 103E  
                                    ___fltol 23CE                                      ___lwdiv 2D62  
                                  ?_vfprintf 0038                                 __psmallconst 1000  
                  ??_ADC_GetConversionResult 0006                   __end_of_gpio_pin_intialize 3008  
                                    __pcinit 2F2E                         _select_result_format 3270  
                                    __ramtop 1000                                      __ptext0 1468  
                                    __ptext1 2B6C                                      __ptext2 2BEC  
                                    __ptext3 2ACC                                      __ptext4 2A24  
                                    __ptext5 2E4A                                      __ptext6 31A0  
                                    __ptext7 31E6                                      __ptext8 28BE  
                                    __ptext9 30C0                                    _T0CONbits 0FD5  
                                  _T1CONbits 0FCD                     _convert_uint16_to_string 28BE  
                                  _T2CONbits 0FCA                                   ??___xxtofl 0006  
                                  _T3CONbits 0FB1                             ___awmod@dividend 0002  
                                    _sprintf 30C0        lcd_4bit_intialize@l_data_pins_counter 0018  
                             __pintcode_body 1762                         end_of_initialization 2F92  
                          lcd_send_4bits@lcd 000C                            lcd_send_4bits@ret 000F  
                   select_result_format@_adc 0002  ADC_GetConversion_Blocking@conversion_result 000D  
                                    fputc@fp 0004                                      memset@c 0004  
                                    memset@k 000A                                      memset@n 0006  
                                    memset@s 000C                                      int_func 1762  
                                    fputs@fp 000D                   __end_of_lcd_4bit_intialize 22A2  
                    ??_lcd_4bit_send_command 0013                        gpio_pin_intialize@ret 000F  
                        led_turn_off@pin_obj 0010                                _dc_motor_stop 31A0  
                          __end_of_vfpfcnvrt 2176                                    _RCSTAbits 0FAB  
         __end_of_ADC_GetConversion_Blocking 2E4A                   _ADC_GetConversion_Blocking 2DD6  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc1 0FE6  
                                    postinc2 0FDE                             vfpfcnvrt@convarg 0032  
                                 ??_vfprintf 003E                      _timer1_interruptHandler 009F  
                      ?_select_result_format 0002              __end_of_lcd_4bit_send_char_data 2EBC  
                      _INT1_InterruptHandler 00B7                                    _PORTBbits 0F81  
                           _InterruptManager 0008                gpio_pin_intialize@_pin_config 000C  
                 lcd_4bit_send_char_data@lcd 0010                   lcd_4bit_send_char_data@ret 0013  
       __end_of_gpio_pin_direction_intialize 204A                 _gpio_pin_direction_intialize 1F06  
                              ___xxtofl@sign 000A                                    _TRISAbits 0F92  
                                  _TRISCbits 0F94                          _ADC_StartConversion 33D0  
                                ___flmul@grs 001D                                  _CCP1CONbits 0FBD  
                                _CCP2CONbits 0FBA                                    _TXSTAbits 0FAC  
                       _timer1_preload_value 009D                               ?_dc_motor_stop 000C  
                               _led_turn_off 2BEC                          _lcd_4bit_set_cursor 2A24  
                         relay_turn_on@F3047 006D                         ?_ADC_StartConversion 0002  
                lcd_4bit_send_string_pos@lcd 001B                  lcd_4bit_send_string_pos@ret 0021  
                lcd_4bit_send_string_pos@row 001D                  lcd_4bit_send_string_pos@str 001F  
              convert_uint16_to_string@F3199 0087                                  vfpfcnvrt@ap 002E  
                                vfpfcnvrt@cp 0036                                  vfpfcnvrt@fp 002A  
                                _BAUDCONbits 0FB8                                __pidataCOMRAM 345C  
    adc_input_channel_port_configure@channel 0004                         _Timer3_Preload_Value 009B  
                             __end_of_memset 1F06                               __end_of_matrix 1011  
               ?_configure_voltage_reference 0002                          start_initialization 2F2E  
                              ??_led_turn_on 000E                 ?_lcd_4bit_send_enable_signal 000C  
                       ?_lcd_4bit_set_cursor 0014                convert_uint16_to_string@value 0056  
                                __end_of_abs 32F4                                  __end_of_pad 2D62  
              ?_gpio_pin_direction_intialize 0002     ADC_GetConversionResult@conversion_result 0004  
                     dc_motor_stop@_dc_motor 000C                    _EUSART_RxInterruptHandler 0097  
                            led_turn_off@led 000C                              led_turn_off@ret 000F  
                      ADC_SelectChannel@_adc 0005                        ??_ADC_StartConversion 0004  
                                vfprintf@fmt 003A                   _EUSART_FramingErrorHandler 0095  
                     ??_select_result_format 0004                                  __pdataBANK0 00CD  
                                   ?_ADC_ISR 0001                                     ??_memset 0008  
                      __end_of_EUSART_RX_ISR 347C                        __end_of_EUSART_TX_ISR 3474  
                                 memset@dest 0002                 lcd_4bit_send_command@command 0012  
                           dc_motor_stop@ret 000E                      ADC_StartConversion@_adc 0002  
                                   ?_RB4_ISR 0001                                     ?_RB5_ISR 0001  
                                   ?_RB6_ISR 0001                                     ?_RB7_ISR 0001  
                                  ___flmul@a 0014                                    ___flmul@b 0010  
                                __pbssCOMRAM 0064                        ??_lcd_4bit_set_cursor 0018  
              ??_configure_voltage_reference 0004                  ADC_GetConversionResult@_adc 0002  
                        __end_of_led_turn_on 2BEC                        _INT2_InterruptHandler 00B5  
            gpio_pin_direction_intialize@ret 000A                              ??_dc_motor_stop 000E  
                           ___lwdiv@dividend 0002                        _application_intialize 310C  
                                  _dtoa$4553 0021                                    __pintcode 0008  
   __end_of_adc_input_channel_port_configure 25AC           ??_adc_input_channel_port_configure 0002  
          ?_adc_input_channel_port_configure 0001             _adc_input_channel_port_configure 24D4  
                          _ADC_SelectChannel 3332                   ??_convert_uint16_to_string 005A  
            gpio_pin_write_logic@_pin_config 0002                                     ?___awdiv 0002  
                                   ?___awmod 0002                                     ?___flmul 0010  
                                   ?___fltol 0029                                     ?___lwdiv 0002  
              ADC_GetConversion_Blocking@ret 000F                           ?_ADC_SelectChannel 0005  
                  gpio_pin_write_logic@logic 0004                                  __smallconst 1000  
                  _RB4_InterruptHandler_HIGH 00B3                          ??_ADC_SelectChannel 0008  
                                   _ADC_Init 27FE                    _RB7_InterruptHandler_HIGH 00A7  
                                ADC_Init@ret 0008                             ___lwdiv@quotient 0006  
                                   ?_sprintf 0040                           _gpio_pin_intialize 2F9C  
             ??_gpio_pin_direction_intialize 0004                     _RB5_InterruptHandler_LOW 00AD  
                                   _INT0_ISR 346C                                     _INT1_ISR 3468  
                                   _INT2_ISR 3464                                     _RB4_Flag 007B  
                                   _RB5_Flag 007A                                     _RB6_Flag 0079  
                                   _RB7_Flag 0078                            RB4_ISR@RB4_Source 0001  
                        ?_gpio_pin_intialize 000C                     __end_of_InterruptManager 1A48  
                                   _PIE1bits 0F9D                    __end_of_ADC_SelectChannel 336C  
              __end_of_lcd_4bit_send_command 2F2E                                     i2u600_40 1824  
                                   i2u600_41 1820                                     i2u601_40 1832  
                                   i2u601_41 182E                                     _PIR1bits 0F9E  
                                   i2u610_40 18CA                                     i2u602_40 1842  
                                   i2u610_41 18C6                                     i2u602_41 183E  
                                   i2u611_40 18E2                                     i2u603_40 185A  
                                   i2u611_41 18DE                                     i2u603_41 1856  
                                   i2u620_40 1978                                     i2u612_40 18F0  
                                   i2u604_40 1868                                     i2u620_41 1974  
                                   i2u612_41 18EC                                     i2u604_41 1864  
                                   i2u621_40 1986                                     i2u613_40 18FE  
                                   i2u605_40 1876                                     i2u621_41 1982  
                                   i2u613_41 18FA                                     i2u605_41 1872  
                                   i2u630_40 1A20                                     i2u622_40 1996  
                                   i2u614_40 190E                                     i2u606_40 1886  
                                   i2u630_41 1A1C                                     i2u622_41 1992  
                                   i2u614_41 190A                                     i2u606_41 1882  
                         led_turn_on@pin_obj 0010                                     i2u631_40 1A32  
                                   i2u623_40 19AE                                     i2u615_40 1926  
                                   i2u607_40 189E                                     i2u631_41 1A2E  
                                   i2u623_41 19AA                                     i2u615_41 1922  
                                   i2u607_41 189A                                     i2u456_40 3456  
                                   i2u632_40 1A40                                     i2u624_40 19BC  
                                   i2u616_40 1934                                     i2u608_40 18AC  
                                   i2u456_41 3452                                     i2u632_41 1A3C  
                                   i2u624_41 19B8                                     i2u616_41 1930  
                                   i2u608_41 18A8                                     i2u457_40 343C  
                                   i2u625_40 19CA                                     i2u617_40 1942  
                                   i2u609_40 18BA                                     i2u457_41 3438  
                                   i2u625_41 19C6                                     i2u617_41 193E  
                                   i2u609_41 18B6                                     i2u458_40 3422  
                                   i2u626_40 19DA                                     i2u618_40 1952  
                                   i2u458_41 341E                                     i2u626_41 19D6  
                                   i2u618_41 194E                                     i2u459_40 3408  
                                   i2u627_40 19F2                                     i2u619_40 196A  
                                   i2u459_41 3404                                     i2u627_41 19EE  
                                   i2u619_41 1966                                     i2u628_40 1A00  
                                   i2u628_41 19FC                                     i2u629_40 1A12  
                                   i2u629_41 1A0E                                     i2u590_40 1780  
                                   i2u590_41 177C                                     i2u591_40 1792  
                                   i2u591_41 178E                                     i2u592_40 17A0  
                                   i2u592_41 179C                                     i2u593_40 17B2  
                                   i2u593_41 17AE                                     i2u594_40 17C0  
                                   i2u594_41 17BC                                     i2u595_40 17D2  
                                   i2u595_41 17CE                                     i2u596_40 17E0  
                                   i2u596_41 17DC                                     i2u597_40 17EE  
                                   i2u589_40 1772                                     i2u597_41 17EA  
                                   i2u589_41 176E                                     i2u598_40 17FE  
                                   i2u598_41 17FA                                     i2u599_40 1816  
                                   i2u599_41 1812                          _dc_motor_initialize 32F4  
               dc_motor_initialize@_dc_motor 0010                  ?_ADC_GetConversion_Blocking 000A  
                         _lcd_4bit_intialize 2176                                    _vfpfcnvrt 204A  
                   _lcd_4bit_send_string_pos 2ACC                                   _ADCON0bits 0FC2  
                                 _ADCON1bits 0FC1                                   _ADCON2bits 0FC0  
                       ??_gpio_pin_intialize 000E                     ADC_SelectChannel@channel 0007  
                        ?_lcd_4bit_intialize 0014                                  _led_turn_on 2B6C  
                       ?_dc_motor_initialize 0010                      gpio_pin_write_logic@ret 000B  
                                _INTCON2bits 0FF1                                  _INTCON3bits 0FF0  
                   ?_lcd_4bit_send_char_data 0010                                    copy_data0 2F42  
                                  copy_data1 2F62                        _lm35_res_1_Celsius_mv 0068  
                        _dc_motor_move_right 31E6                                   _EECON1bits 0FA6  
                     ?_application_intialize 0001                         ??_lcd_4bit_intialize 0016  
                             led_turn_on@led 000C                               led_turn_on@ret 000F  
                                   __Hrparam 0000                                   vfprintf@ap 003C  
                                   __Lrparam 0000                                   vfprintf@fp 0038  
                   ?_ADC_GetConversionResult 0002                            RB6_ISR@RB6_Source 0001  
                     lcd_4bit_set_cursor@lcd 0014                       lcd_4bit_set_cursor@ret 001A  
                                 ?_vfpfcnvrt 002A                       lcd_4bit_set_cursor@row 0016  
                      _lm35_res_2_Celsius_mv 0066                         ?_dc_motor_move_right 000C  
                                 sprintf@fmt 0042                                     ___xxtofl 1A48  
                      ??_dc_motor_initialize 0012                              ___lwdiv@divisor 0004  
                            ___lwdiv@counter 0008                                     __ptext10 3070  
                                   __ptext11 204A                                     __ptext20 1D90  
                                   __ptext12 1BFC                                     __ptext21 310C  
                                   __ptext13 2CE8                                     __ptext30 1F06  
                                   __ptext22 2C6C                                     __ptext14 322C  
                                   __ptext31 27FE                                     __ptext23 2176  
                                   __ptext15 25AC                                     __ptext40 3332  
                                   __ptext32 3270                                     __ptext24 2EBC  
                                   __ptext16 3478                                     __ptext41 24D4  
                                   __ptext33 3156                                     __ptext25 3008  
                                   __ptext17 32B4                                     __ptext50 346C  
                                   __ptext42 273A                                     __ptext34 1A48  
                                   __ptext26 336C                                     __ptext18 2974  
                                   __ptext51 3470                                     __ptext35 2D62  
                                   __ptext27 32F4                                     __ptext19 2676  
                                   __ptext52 347A                                     __ptext44 33F4  
                                   __ptext36 23CE                                     __ptext28 2F9C  
                                   __ptext53 3474                                     __ptext45 340E  
                                   __ptext37 103E                                     __ptext29 22A2  
                                   __ptext46 3428                                     __ptext38 2DD6  
                                   __ptext47 3442                                     __ptext39 33D0  
                                   __ptext48 3464                                     __ptext49 3468  
            configure_voltage_reference@_adc 0002                       dc_motor_move_right@ret 000E  
                      _lm35_res_3_Celsius_mv 008F          convert_uint16_to_string@DataCounter 0061  
           __end_of_convert_uint16_to_string 2974                                     isa$xinst 0000  
                                   int$flags 007E                                     _vfprintf 3070  
                      ??_dc_motor_move_right 000E                               _lcd_send_4bits 3008  
                                 _INTCONbits 0FF2                 __end_of_gpio_pin_write_logic 23CE  
                                   intlevel2 0000                                    sprintf@ap 0048  
                __end_of_ADC_StartConversion 33F4               lcd_4bit_send_enable_signal@lcd 000C  
             lcd_4bit_send_enable_signal@ret 000E                    _EUSART_TxInterruptHandler 0099  
            __end_of_ADC_GetConversionResult 27FE                       __end_of_lcd_send_4bits 3070  
               dc_motor_move_right@_dc_motor 000C                                  ??_vfpfcnvrt 0030  
                __end_of_lcd_4bit_set_cursor 2ACC                                     sprintf@f 004A  
                                   sprintf@s 0040                               _port_registers 00CD  
                                _SSPCON1bits 0FC6                                  _SSPCON2bits 0FC5  
                lcd_4bit_send_char_data@data 0012                            ?_InterruptManager 0001  
                      __end_of_dc_motor_stop 31E6                   ??_lcd_4bit_send_string_pos 0021  
                             _led_initialize 2C6C  
